ClassDiagram.Class>> ServerDeploy =>=>=> RelationalSchema.Table>> serverdeploy;
ClassDiagram.Class>> App =>=>=> RelationalSchema.Table>> app;
ClassDiagram.Class>> DeployHistory =>=>=> RelationalSchema.Table>> deployhistory;
ClassDiagram.Class>> Database =>=>=> RelationalSchema.Table>> database;
ClassDiagram.Class>> Deploy =>=>=> RelationalSchema.Table>> deploy;
ClassDiagram.Class>> QuartzLog =>=>=> RelationalSchema.Table>> quartzlog;
ClassDiagram.Class>> QuartzJob =>=>=> RelationalSchema.Table>> quartzjob;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Dict =>=>=> RelationalSchema.Table>> dict;
ClassDiagram.Class>> Dept =>=>=> RelationalSchema.Table>> dept;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Menu =>=>=> RelationalSchema.Table>> menu;
ClassDiagram.Class>> DictDetail =>=>=> RelationalSchema.Table>> dictdetail;
ClassDiagram.Class>> Job =>=>=> RelationalSchema.Table>> job;
ClassDiagram.Attribut>> ServerDeploy.id:Long =>=>=> RelationalSchema.Column>> serverdeploy.id PRIMARY KEY;
ClassDiagram.Attribut>> ServerDeploy.name:String =>=>=> RelationalSchema.Column>> serverdeploy.name;
ClassDiagram.Attribut>> ServerDeploy.ip:String =>=>=> RelationalSchema.Column>> serverdeploy.ip;
ClassDiagram.Attribut>> ServerDeploy.port:Integer =>=>=> RelationalSchema.Column>> serverdeploy.port;
ClassDiagram.Attribut>> ServerDeploy.account:String =>=>=> RelationalSchema.Column>> serverdeploy.account;
ClassDiagram.Attribut>> ServerDeploy.password:String =>=>=> RelationalSchema.Column>> serverdeploy.password;
ClassDiagram.Attribut>> App.id:Long =>=>=> RelationalSchema.Column>> app.id PRIMARY KEY;
ClassDiagram.Attribut>> App.name:String =>=>=> RelationalSchema.Column>> app.name;
ClassDiagram.Attribut>> App.port:int =>=>=> RelationalSchema.Column>> app.port;
ClassDiagram.Attribut>> App.uploadpath:String =>=>=> RelationalSchema.Column>> app.uploadpath;
ClassDiagram.Attribut>> App.deploypath:String =>=>=> RelationalSchema.Column>> app.deploypath;
ClassDiagram.Attribut>> App.backuppath:String =>=>=> RelationalSchema.Column>> app.backuppath;
ClassDiagram.Attribut>> App.startscript:String =>=>=> RelationalSchema.Column>> app.startscript;
ClassDiagram.Attribut>> App.deployscript:String =>=>=> RelationalSchema.Column>> app.deployscript;
ClassDiagram.Attribut>> DeployHistory.id:String =>=>=> RelationalSchema.Column>> deployhistory.id PRIMARY KEY;
ClassDiagram.Attribut>> DeployHistory.appname:String =>=>=> RelationalSchema.Column>> deployhistory.appname;
ClassDiagram.Attribut>> DeployHistory.ip:String =>=>=> RelationalSchema.Column>> deployhistory.ip;
ClassDiagram.Attribut>> DeployHistory.deploydate:Timestamp =>=>=> RelationalSchema.Column>> deployhistory.deploydate;
ClassDiagram.Attribut>> DeployHistory.deployuser:String =>=>=> RelationalSchema.Column>> deployhistory.deployuser;
ClassDiagram.Attribut>> DeployHistory.deployid:Long =>=>=> RelationalSchema.Column>> deployhistory.deployid;
ClassDiagram.Attribut>> Database.id:String =>=>=> RelationalSchema.Column>> database.id PRIMARY KEY;
ClassDiagram.Attribut>> Database.name:String =>=>=> RelationalSchema.Column>> database.name;
ClassDiagram.Attribut>> Database.jdbcurl:String =>=>=> RelationalSchema.Column>> database.jdbcurl;
ClassDiagram.Attribut>> Database.pwd:String =>=>=> RelationalSchema.Column>> database.pwd;
ClassDiagram.Attribut>> Database.username:String =>=>=> RelationalSchema.Column>> database.username;
ClassDiagram.Attribut>> Deploy.id:Long =>=>=> RelationalSchema.Column>> deploy.id PRIMARY KEY;
ClassDiagram.Attribut>> QuartzLog.id:Long =>=>=> RelationalSchema.Column>> quartzlog.id PRIMARY KEY;
ClassDiagram.Attribut>> QuartzLog.jobname:String =>=>=> RelationalSchema.Column>> quartzlog.jobname;
ClassDiagram.Attribut>> QuartzLog.beanname:String =>=>=> RelationalSchema.Column>> quartzlog.beanname;
ClassDiagram.Attribut>> QuartzLog.methodname:String =>=>=> RelationalSchema.Column>> quartzlog.methodname;
ClassDiagram.Attribut>> QuartzLog.params:String =>=>=> RelationalSchema.Column>> quartzlog.params;
ClassDiagram.Attribut>> QuartzLog.cronexpression:String =>=>=> RelationalSchema.Column>> quartzlog.cronexpression;
ClassDiagram.Attribut>> QuartzLog.issuccess:Boolean =>=>=> RelationalSchema.Column>> quartzlog.issuccess;
ClassDiagram.Attribut>> QuartzLog.exceptiondetail:String =>=>=> RelationalSchema.Column>> quartzlog.exceptiondetail;
ClassDiagram.Attribut>> QuartzLog.time:Long =>=>=> RelationalSchema.Column>> quartzlog.time;
ClassDiagram.Attribut>> QuartzLog.createtime:Timestamp =>=>=> RelationalSchema.Column>> quartzlog.createtime;
ClassDiagram.Attribut>> QuartzJob.job_key:String =>=>=> RelationalSchema.Column>> quartzjob.job_key;
ClassDiagram.Attribut>> QuartzJob.id:Long =>=>=> RelationalSchema.Column>> quartzjob.id PRIMARY KEY;
ClassDiagram.Attribut>> QuartzJob.uuid:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> QuartzJob.jobname:String =>=>=> RelationalSchema.Column>> quartzjob.jobname;
ClassDiagram.Attribut>> QuartzJob.beanname:String =>=>=> RelationalSchema.Column>> quartzjob.beanname;
ClassDiagram.Attribut>> QuartzJob.methodname:String =>=>=> RelationalSchema.Column>> quartzjob.methodname;
ClassDiagram.Attribut>> QuartzJob.params:String =>=>=> RelationalSchema.Column>> quartzjob.params;
ClassDiagram.Attribut>> QuartzJob.cronexpression:String =>=>=> RelationalSchema.Column>> quartzjob.cronexpression;
ClassDiagram.Attribut>> QuartzJob.ispause:Boolean =>=>=> RelationalSchema.Column>> quartzjob.ispause;
ClassDiagram.Attribut>> QuartzJob.personincharge:String =>=>=> RelationalSchema.Column>> quartzjob.personincharge;
ClassDiagram.Attribut>> QuartzJob.email:String =>=>=> RelationalSchema.Column>> quartzjob.email;
ClassDiagram.Attribut>> QuartzJob.subtask:String =>=>=> RelationalSchema.Column>> quartzjob.subtask;
ClassDiagram.Attribut>> QuartzJob.pauseafterfailure:Boolean =>=>=> RelationalSchema.Column>> quartzjob.pauseafterfailure;
ClassDiagram.Attribut>> QuartzJob.description:String =>=>=> RelationalSchema.Column>> quartzjob.description;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.nickname:String =>=>=> RelationalSchema.Column>> user.nickname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.phone:String =>=>=> RelationalSchema.Column>> user.phone;
ClassDiagram.Attribut>> User.gender:String =>=>=> RelationalSchema.Column>> user.gender;
ClassDiagram.Attribut>> User.avatarname:String =>=>=> RelationalSchema.Column>> user.avatarname;
ClassDiagram.Attribut>> User.avatarpath:String =>=>=> RelationalSchema.Column>> user.avatarpath;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.enabled:Boolean =>=>=> RelationalSchema.Column>> user.enabled;
ClassDiagram.Attribut>> User.isadmin:Boolean =>=>=> RelationalSchema.Column>> user.isadmin;
ClassDiagram.Attribut>> User.pwdresettime:Date =>=>=> RelationalSchema.Column>> user.pwdresettime;
ClassDiagram.Attribut>> Dict.id:Long =>=>=> RelationalSchema.Column>> dict.id PRIMARY KEY;
ClassDiagram.Attribut>> Dict.name:String =>=>=> RelationalSchema.Column>> dict.name;
ClassDiagram.Attribut>> Dict.description:String =>=>=> RelationalSchema.Column>> dict.description;
ClassDiagram.Attribut>> Dept.id:Long =>=>=> RelationalSchema.Column>> dept.id PRIMARY KEY;
ClassDiagram.Attribut>> Dept.deptsort:Integer =>=>=> RelationalSchema.Column>> dept.deptsort;
ClassDiagram.Attribut>> Dept.name:String =>=>=> RelationalSchema.Column>> dept.name;
ClassDiagram.Attribut>> Dept.enabled:Boolean =>=>=> RelationalSchema.Column>> dept.enabled;
ClassDiagram.Attribut>> Dept.pid:Long =>=>=> RelationalSchema.Column>> dept.pid;
ClassDiagram.Attribut>> Dept.subcount:Integer =>=>=> RelationalSchema.Column>> dept.subcount;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Role.datascope:String =>=>=> RelationalSchema.Column>> role.datascope;
ClassDiagram.Attribut>> Role.level:Integer =>=>=> RelationalSchema.Column>> role.level;
ClassDiagram.Attribut>> Role.description:String =>=>=> RelationalSchema.Column>> role.description;
ClassDiagram.Attribut>> Menu.id:Long =>=>=> RelationalSchema.Column>> menu.id PRIMARY KEY;
ClassDiagram.Attribut>> Menu.title:String =>=>=> RelationalSchema.Column>> menu.title;
ClassDiagram.Attribut>> Menu.componentname:String =>=>=> RelationalSchema.Column>> menu.componentname;
ClassDiagram.Attribut>> Menu.menusort:Integer =>=>=> RelationalSchema.Column>> menu.menusort;
ClassDiagram.Attribut>> Menu.component:String =>=>=> RelationalSchema.Column>> menu.component;
ClassDiagram.Attribut>> Menu.path:String =>=>=> RelationalSchema.Column>> menu.path;
ClassDiagram.Attribut>> Menu.type:Integer =>=>=> RelationalSchema.Column>> menu.type;
ClassDiagram.Attribut>> Menu.permission:String =>=>=> RelationalSchema.Column>> menu.permission;
ClassDiagram.Attribut>> Menu.icon:String =>=>=> RelationalSchema.Column>> menu.icon;
ClassDiagram.Attribut>> Menu.cache:Boolean =>=>=> RelationalSchema.Column>> menu.cache;
ClassDiagram.Attribut>> Menu.hidden:Boolean =>=>=> RelationalSchema.Column>> menu.hidden;
ClassDiagram.Attribut>> Menu.pid:Long =>=>=> RelationalSchema.Column>> menu.pid;
ClassDiagram.Attribut>> Menu.subcount:Integer =>=>=> RelationalSchema.Column>> menu.subcount;
ClassDiagram.Attribut>> Menu.iframe:Boolean =>=>=> RelationalSchema.Column>> menu.iframe;
ClassDiagram.Attribut>> DictDetail.id:Long =>=>=> RelationalSchema.Column>> dictdetail.id PRIMARY KEY;
ClassDiagram.Attribut>> DictDetail.label:String =>=>=> RelationalSchema.Column>> dictdetail.label;
ClassDiagram.Attribut>> DictDetail.value:String =>=>=> RelationalSchema.Column>> dictdetail.value;
ClassDiagram.Attribut>> DictDetail.dictsort:Integer =>=>=> RelationalSchema.Column>> dictdetail.dictsort;
ClassDiagram.Attribut>> Job.id:Long =>=>=> RelationalSchema.Column>> job.id PRIMARY KEY;
ClassDiagram.Attribut>> Job.name:String =>=>=> RelationalSchema.Column>> job.name;
ClassDiagram.Attribut>> Job.jobsort:Long =>=>=> RelationalSchema.Column>> job.jobsort;
ClassDiagram.Attribut>> Job.enabled:Boolean =>=>=> RelationalSchema.Column>> job.enabled;
Many-To-Many relationship between ClassDiagram.Class>>Deploy  and ClassDiagram.Class>>set<serverdeploy>: mnt_deploy_server(deploy_id:Deploy [PK] #FK to Deploy,server_id:set<serverdeploy> [PK] #FK to set<serverdeploy>);
Many-To-One relationship from ClassDiagram.Class>>Deploy  to ClassDiagram.Class>>app represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<role>: sys_users_roles(user_id:User [PK] #FK to User,role_id:set<role> [PK] #FK to set<role>);
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<job>: sys_users_roles(user_id:User [PK] #FK to User,role_id:set<role> [PK] #FK to set<role>);sys_users_jobs(user_id:User [PK] #FK to User,job_id:set<job> [PK] #FK to set<job>);
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>dept represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Dict  to ClassDiagram.Class>>List<DictDetail>;
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>set<menu>: sys_roles_menus(role_id:Role [PK] #FK to Role,menu_id:set<menu> [PK] #FK to set<menu>);
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>set<dept>: sys_roles_menus(role_id:Role [PK] #FK to Role,menu_id:set<menu> [PK] #FK to set<menu>);sys_roles_depts(role_id:Role [PK] #FK to Role,dept_id:set<dept> [PK] #FK to set<dept>);
Many-To-One relationship from ClassDiagram.Class>>DictDetail  to ClassDiagram.Class>>dict represented by ClassDiagram.Atrribute>>GeneratedName;
