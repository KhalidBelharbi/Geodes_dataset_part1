defaultpackageentity(id:long [PK]);

person(id:Long [PK], phones:List<String>);

goods(id:Long [PK], tags:List<String>);

item(id:Integer [PK], roles:Set<Role>, providers:List<String>, attributes:Map<Integer,String>);

product(proid:int [PK], proname:String);

personphone(id:Long [PK], phones:List<Phone>);

phonebook(id:Long [PK], phones:Map<String,String>);

house(id:long [PK], GeneratedName:Address);

attachmentgrouppostintopic();

attachmentgroupintopic();

userrole();

concreteproduct(id:long [PK]);

shop(id:long [PK], name:String);

foo(id:long [PK]);

superhero(id:long [PK], name:String, superpower:String);

stuff();

myentity(emb:EmbeddableEntity);

simpleentity(id:Integer [PK], GeneratedName:SimpleEmbeddable);

printjob(id:long [PK], data:byte);

printer(id:long [PK]);

parent(id:Integer [PK], name:String, siblings:Relatives<Child>);

child(id:Integer [PK], name:String);

plane(id:Long [PK]);

customer();

person(name:String);

user(id:Long [PK], name:String);

house(id:Long [PK]);

suba(street:String);

subb(street:String);

baseentity(id:Integer [PK], name:String);

testentity(id:long [PK]);

blobentity(id:String [PK], GeneratedName:Blob);

testentity(GeneratedName:Ref, name:String);

person(id:PersonId, address:String);

dummy(id:long [PK]);

dummy(id:long [PK]);

testentity(id:Integer [PK], primitiveannotatedarray:byte, primitivearray:byte, //primitivenon-arraytestprimitiveannotated:byte, primitive:byte, nonprimitiveannotatedarray:Byte, nonprimitivearray:Byte, //non-primitivenon-arraytestnonprimitiveannotated:Byte, nonprimitive:Byte, customannotatedarray:CustomType, customarray:CustomType);

image(name:String, data:byte);

temperaturesamples(samples:Integer);

house(id:Long [PK]);

shop(id:long [PK], name:String);

user(id:Long [PK], name:String);

product(transientnonpersistent:String, nonpersistent2:String, id:long [PK], test:int, description:String, price:BigDecimal, GeneratedName:Shop #FK to(shop));

mammals(id:String [PK], nbrofmammals:String);

hotelroom(GeneratedName:Hotel);

item(id:long [PK], quantity:int, GeneratedName:Product, GeneratedName:Order, GeneratedName:Detail);

customer(orders:Set<Order>, nonpersistent:String, goodpayer:boolean);

hominidae(elligence:int);

human(nonpersistent:int, name:String);

room(id:Integer [PK]);

contactdetails(id:long [PK], GeneratedName:PhoneNumber);

hashentity(id:long [PK]);

testentity(id:long [PK]);

house(roomsbyname:Map<String,Room>);

officebuildingvalidated(doorcodes:Map<Integer,byte[]>, computerserialnumbers:Set<String>, employeenames:List<String>, rooms:List<Room>);

cleaner(id:int [PK], name:String);

homework(paths:List<String>);

hotel(id:int [PK], roomsbyname:Map);

officebuilding(doorcodes:Map<Integer,byte[]>);

rentalcar(company:RentalCompany, hired:CURRENTLY_HIRED, chassisnumber:Character, GeneratedName:Insurance);

person(id:long [PK], name:String);

location(id:long [PK], description:String, //implicitlyembedded:Coordinates, GeneratedName:ZeroCoordinates);

vehicle(//defaultaccesstypeforclassesinthishierarchyisfieldid:long [PK]);

rentalcompany(id:long [PK], name:String);

employeewithrawtype(id:String [PK], name:String);

deskwithrawtype(id:String [PK], name:String);

desk_empl(desk_fk:DeskWithRawType [PK] #FK to DeskWithRawType,emplo_fk:collection [PK] #FK to collection);

plane(jets:Integer, planetype: String);



** PROGRAM TYPE: JPA+Hibernate(Hybrid)