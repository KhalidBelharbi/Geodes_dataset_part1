ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Outing =>=>=> RelationalSchema.Table>> outing;
ClassDiagram.Class>> Tracing =>=>=> RelationalSchema.Table>> tracing;
ClassDiagram.Class>> Permission =>=>=> RelationalSchema.Table>> permission;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:RoleName =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Outing.id:long =>=>=> RelationalSchema.Column>> outing.id PRIMARY KEY;
ClassDiagram.Attribut>> Outing.email:String =>=>=> RelationalSchema.Column>> outing.email;
ClassDiagram.Attribut>> Outing.name:String =>=>=> RelationalSchema.Column>> outing.name;
ClassDiagram.Attribut>> Outing.reason:String =>=>=> RelationalSchema.Column>> outing.reason;
ClassDiagram.Attribut>> Outing.day:String =>=>=> RelationalSchema.Column>> outing.day;
ClassDiagram.Attribut>> Outing.//inhoursduration:int =>=>=> RelationalSchema.Column>> outing.//inhoursduration;
ClassDiagram.Attribut>> Outing.outgoingtime:LocalTime =>=>=> RelationalSchema.Column>> outing.outgoingtime;
ClassDiagram.Attribut>> Outing.returningtime:LocalTime =>=>=> RelationalSchema.Column>> outing.returningtime;
ClassDiagram.Attribut>> Tracing.//@column(name:long =>=>=> RelationalSchema.Column>> tracing.//@column(name PRIMARY KEY;
ClassDiagram.Attribut>> Tracing.email:String =>=>=> RelationalSchema.Column>> tracing.email;
ClassDiagram.Attribut>> Tracing.name:String =>=>=> RelationalSchema.Column>> tracing.name;
ClassDiagram.Attribut>> Tracing.room:int =>=>=> RelationalSchema.Column>> tracing.room;
ClassDiagram.Attribut>> Tracing.drivername:String =>=>=> RelationalSchema.Column>> tracing.drivername;
ClassDiagram.Attribut>> Tracing.drivercontact:int =>=>=> RelationalSchema.Column>> tracing.drivercontact;
ClassDiagram.Attribut>> Permission.pid:long =>=>=> RelationalSchema.Column>> permission.pid PRIMARY KEY;
ClassDiagram.Attribut>> Permission.email:String =>=>=> RelationalSchema.Column>> permission.email;
ClassDiagram.Attribut>> Permission.msg:String =>=>=> RelationalSchema.Column>> permission.msg;
ClassDiagram.Attribut>> Permission.day:String =>=>=> RelationalSchema.Column>> permission.day;
ClassDiagram.Attribut>> Permission.status:String =>=>=> RelationalSchema.Column>> permission.status;
ClassDiagram.Attribut>> Permission./*publicpermission(longpid,email,msg,day,status,name,intduration){this.pid:String =>=>=> RelationalSchema.Column>> permission./*publicpermission(longpid,email,msg,day,status,name,intduration){this.pid;
ClassDiagram.Attribut>> Permission.duration:int =>=>=> RelationalSchema.Column>> permission.duration;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<role>: user_roles(user_id:User [PK] #FK to User,role_id:set<role> [PK] #FK to set<role>);
