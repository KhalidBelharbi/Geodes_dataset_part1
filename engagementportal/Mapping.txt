ClassDiagram.Class>> RoleEntity =>=>=> RelationalSchema.Table>> roleentity;
ClassDiagram.Class>> UserEntity =>=>=> RelationalSchema.Table>> userentity;
ClassDiagram.Attribut>> RoleEntity.roleid:long =>=>=> RelationalSchema.Column>> roleentity.roleid PRIMARY KEY;
ClassDiagram.Attribut>> RoleEntity.name:String =>=>=> RelationalSchema.Column>> roleentity.name;
ClassDiagram.Attribut>> UserEntity.userid:long =>=>=> RelationalSchema.Column>> userentity.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserEntity.firstname:String =>=>=> RelationalSchema.Column>> userentity.firstname;
ClassDiagram.Attribut>> UserEntity.lastname:String =>=>=> RelationalSchema.Column>> userentity.lastname;
ClassDiagram.Attribut>> UserEntity.notes:String =>=>=> RelationalSchema.Column>> userentity.notes;
ClassDiagram.Attribut>> UserEntity.email:String =>=>=> RelationalSchema.Column>> userentity.email;
ClassDiagram.Attribut>> UserEntity.password:String =>=>=> RelationalSchema.Column>> userentity.password;
ClassDiagram.Attribut>> UserEntity.enabled:boolean =>=>=> RelationalSchema.Column>> userentity.enabled;
One-To-One relationship between ClassDiagram.Class>>UserEntity  to ClassDiagram.Class>>roleentity represented by ClassDiagram.Atrribute>>role;
