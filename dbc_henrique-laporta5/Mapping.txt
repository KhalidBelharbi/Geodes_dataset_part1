ClassDiagram.Class>> Animal =>=>=> RelationalSchema.Table>> animal;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Attribut>> Animal.serialversionuid:long =>=>=> RelationalSchema.Column>> animal.serialversionuid;
ClassDiagram.Attribut>> Animal.//@max(value:Long =>=>=> RelationalSchema.Column>> animal.//@max(value PRIMARY KEY;
ClassDiagram.Attribut>> Animal.nome:String =>=>=> RelationalSchema.Column>> animal.nome;
ClassDiagram.Attribut>> Cliente.serialversionuid:long =>=>=> RelationalSchema.Column>> cliente.serialversionuid;
ClassDiagram.Attribut>> Cliente.//@max(value:Long =>=>=> RelationalSchema.Column>> cliente.//@max(value PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.nome:String =>=>=> RelationalSchema.Column>> cliente.nome;
Many-To-Many relationship between ClassDiagram.Class>>Cliente  and ClassDiagram.Class>>list<animal>: cliente_animal(id_cliente:Cliente [PK] #FK to Cliente,id_animal:list<animal> [PK] #FK to list<animal>);
