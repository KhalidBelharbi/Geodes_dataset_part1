ClassDiagram.Class>> UsuarioEntity =>=>=> RelationalSchema.Table>> usuarioentity;
ClassDiagram.Class>> TelefoneEntity =>=>=> RelationalSchema.Table>> telefoneentity;
ClassDiagram.Class>> ClienteEntity =>=>=> RelationalSchema.Table>> clienteentity;
ClassDiagram.Class>> EmailEntity =>=>=> RelationalSchema.Table>> emailentity;
ClassDiagram.Class>> EnderecoEntity =>=>=> RelationalSchema.Table>> enderecoentity;
ClassDiagram.Class>> ConstrutorEntity =>=>=> RelationalSchema.Table>> construtorentity;
ClassDiagram.Attribut>> UsuarioEntity.id:Long =>=>=> RelationalSchema.Column>> usuarioentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UsuarioEntity.nome:String =>=>=> RelationalSchema.Column>> usuarioentity.nome;
ClassDiagram.Attribut>> UsuarioEntity.login:String =>=>=> RelationalSchema.Column>> usuarioentity.login;
ClassDiagram.Attribut>> UsuarioEntity.senha:String =>=>=> RelationalSchema.Column>> usuarioentity.senha;
ClassDiagram.Attribut>> UsuarioEntity.email:String =>=>=> RelationalSchema.Column>> usuarioentity.email;
ClassDiagram.Attribut>> TelefoneEntity.id:Long =>=>=> RelationalSchema.Column>> telefoneentity.id PRIMARY KEY;
ClassDiagram.Attribut>> TelefoneEntity.tipo:EnumTipoTelefone =>=>=> RelationalSchema.Column>> telefoneentity.tipo;
ClassDiagram.Attribut>> TelefoneEntity.numero:String =>=>=> RelationalSchema.Column>> telefoneentity.numero;
ClassDiagram.Attribut>> TelefoneEntity.pessoa:String =>=>=> RelationalSchema.Column>> telefoneentity.pessoa;
ClassDiagram.Attribut>> ClienteEntity.id:Long =>=>=> RelationalSchema.Column>> clienteentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ClienteEntity.nome:String =>=>=> RelationalSchema.Column>> clienteentity.nome;
ClassDiagram.Attribut>> ClienteEntity.apelido:String =>=>=> RelationalSchema.Column>> clienteentity.apelido;
ClassDiagram.Attribut>> ClienteEntity.tipo:EnumTipoPessoa =>=>=> RelationalSchema.Column>> clienteentity.tipo;
ClassDiagram.Attribut>> ClienteEntity.cpfcnpj:String =>=>=> RelationalSchema.Column>> clienteentity.cpfcnpj;
ClassDiagram.Attribut>> ClienteEntity.responsavel:String =>=>=> RelationalSchema.Column>> clienteentity.responsavel;
ClassDiagram.Attribut>> EmailEntity.id:Long =>=>=> RelationalSchema.Column>> emailentity.id PRIMARY KEY;
ClassDiagram.Attribut>> EmailEntity.email:String =>=>=> RelationalSchema.Column>> emailentity.email;
ClassDiagram.Attribut>> EmailEntity.pessoa:String =>=>=> RelationalSchema.Column>> emailentity.pessoa;
ClassDiagram.Attribut>> EnderecoEntity.id:Long =>=>=> RelationalSchema.Column>> enderecoentity.id PRIMARY KEY;
ClassDiagram.Attribut>> EnderecoEntity.tipo:EnumTipoEndereco =>=>=> RelationalSchema.Column>> enderecoentity.tipo;
ClassDiagram.Attribut>> EnderecoEntity.tipologradouro:EnumTipoLogradouro =>=>=> RelationalSchema.Column>> enderecoentity.tipologradouro;
ClassDiagram.Attribut>> EnderecoEntity.logradouro:String =>=>=> RelationalSchema.Column>> enderecoentity.logradouro;
ClassDiagram.Attribut>> EnderecoEntity.numero:String =>=>=> RelationalSchema.Column>> enderecoentity.numero;
ClassDiagram.Attribut>> EnderecoEntity.complemento:String =>=>=> RelationalSchema.Column>> enderecoentity.complemento;
ClassDiagram.Attribut>> EnderecoEntity.bairro:String =>=>=> RelationalSchema.Column>> enderecoentity.bairro;
ClassDiagram.Attribut>> EnderecoEntity.cidade:String =>=>=> RelationalSchema.Column>> enderecoentity.cidade;
ClassDiagram.Attribut>> EnderecoEntity.cep:String =>=>=> RelationalSchema.Column>> enderecoentity.cep;
ClassDiagram.Attribut>> ConstrutorEntity.id:Long =>=>=> RelationalSchema.Column>> construtorentity.id PRIMARY KEY;
Many-To-One relationship from ClassDiagram.Class>>TelefoneEntity  to ClassDiagram.Class>>clienteentity represented by ClassDiagram.Atrribute>>cliente;
Many-To-One relationship from ClassDiagram.Class>>ClienteEntity  to ClassDiagram.Class>>clienteentity represented by ClassDiagram.Atrribute>>construtor;
One-To-Many relationship from ClassDiagram.Class>>ClienteEntity  to ClassDiagram.Class>>List<EnderecoEntity>;
One-To-Many relationship from ClassDiagram.Class>>ClienteEntity  to ClassDiagram.Class>>List<TelefoneEntity>;
One-To-Many relationship from ClassDiagram.Class>>ClienteEntity  to ClassDiagram.Class>>List<EmailEntity>;
Many-To-One relationship from ClassDiagram.Class>>EmailEntity  to ClassDiagram.Class>>clienteentity represented by ClassDiagram.Atrribute>>cliente;
Many-To-One relationship from ClassDiagram.Class>>EnderecoEntity  to ClassDiagram.Class>>clienteentity represented by ClassDiagram.Atrribute>>cliente;
Many-To-One relationship from ClassDiagram.Class>>ConstrutorEntity  to ClassDiagram.Class>>clienteentity represented by ClassDiagram.Atrribute>>cliente;
