ClassDiagram.Class>> TestDomain =>=>=> RelationalSchema.Table>> testdomain;
ClassDiagram.Class>> MinorClass =>=>=> RelationalSchema.Table>> minorclass;
ClassDiagram.Class>> Major =>=>=> RelationalSchema.Table>> major;
ClassDiagram.Class>> Student_Course =>=>=> RelationalSchema.Table>> student_course;
ClassDiagram.Class>> CoursePlan =>=>=> RelationalSchema.Table>> courseplan;
ClassDiagram.Class>> Year =>=>=> RelationalSchema.Table>> year;
ClassDiagram.Class>> Affiliation =>=>=> RelationalSchema.Table>> affiliation;
ClassDiagram.Class>> Grade =>=>=> RelationalSchema.Table>> grade;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> MinorMajor =>=>=> RelationalSchema.Table>> minormajor;
ClassDiagram.Class>> Academy =>=>=> RelationalSchema.Table>> academy;
ClassDiagram.Class>> Subjects =>=>=> RelationalSchema.Table>> subjects;
ClassDiagram.Class>> Classify =>=>=> RelationalSchema.Table>> classify;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Classes =>=>=> RelationalSchema.Table>> classes;
ClassDiagram.Class>> Reward =>=>=> RelationalSchema.Table>> reward;
ClassDiagram.Class>> EmployeeAssPractisingCertification =>=>=> RelationalSchema.Table>> employeeasspractisingcertification;
ClassDiagram.Class>> EmploymentCategory =>=>=> RelationalSchema.Table>> employmentcategory;
ClassDiagram.Class>> AcademicConference =>=>=> RelationalSchema.Table>> academicconference;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> YesOrNo =>=>=> RelationalSchema.Table>> yesorno;
ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Host =>=>=> RelationalSchema.Table>> host;
ClassDiagram.Class>> Nation =>=>=> RelationalSchema.Table>> nation;
ClassDiagram.Class>> VisitingAcademic =>=>=> RelationalSchema.Table>> visitingacademic;
ClassDiagram.Class>> EmployeeAssPost =>=>=> RelationalSchema.Table>> employeeasspost;
ClassDiagram.Class>> SchoolWorkExperience =>=>=> RelationalSchema.Table>> schoolworkexperience;
ClassDiagram.Class>> EmployeeAssProfessionalTitle =>=>=> RelationalSchema.Table>> employeeassprofessionaltitle;
ClassDiagram.Class>> ReviewResult =>=>=> RelationalSchema.Table>> reviewresult;
ClassDiagram.Class>> EducationQualification =>=>=> RelationalSchema.Table>> educationqualification;
ClassDiagram.Class>> EmployeeAssAcademicDegree =>=>=> RelationalSchema.Table>> employeeassacademicdegree;
ClassDiagram.Class>> AbstractCategory =>=>=> RelationalSchema.Table>> abstractcategory;
ClassDiagram.Class>> EmployeeAssEducationQualification =>=>=> RelationalSchema.Table>> employeeasseducationqualification;
ClassDiagram.Class>> PractisingCertification =>=>=> RelationalSchema.Table>> practisingcertification;
ClassDiagram.Class>> PoliticalParty =>=>=> RelationalSchema.Table>> politicalparty;
ClassDiagram.Class>> School =>=>=> RelationalSchema.Table>> school;
ClassDiagram.Class>> PreviousWorkExperience =>=>=> RelationalSchema.Table>> previousworkexperience;
ClassDiagram.Class>> PositionRank =>=>=> RelationalSchema.Table>> positionrank;
ClassDiagram.Class>> ProfessionalTitle =>=>=> RelationalSchema.Table>> professionaltitle;
ClassDiagram.Class>> Actor =>=>=> RelationalSchema.Table>> actor;
ClassDiagram.Class>> EmployeeAssPoliticalParty =>=>=> RelationalSchema.Table>> employeeasspoliticalparty;
ClassDiagram.Class>> Sponsor =>=>=> RelationalSchema.Table>> sponsor;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> AcademicDegreeType =>=>=> RelationalSchema.Table>> academicdegreetype;
ClassDiagram.Class>> Sex =>=>=> RelationalSchema.Table>> sex;
ClassDiagram.Class>> AcademicDegree =>=>=> RelationalSchema.Table>> academicdegree;
ClassDiagram.Class>> Issuer =>=>=> RelationalSchema.Table>> issuer;
ClassDiagram.Class>> Appointment =>=>=> RelationalSchema.Table>> appointment;
ClassDiagram.Class>> Equipment =>=>=> RelationalSchema.Table>> equipment;
ClassDiagram.Class>> Adress =>=>=> RelationalSchema.Table>> adress;
ClassDiagram.Class>> Time =>=>=> RelationalSchema.Table>> time;
ClassDiagram.Class>> ProjectFundedByGovernmentRank =>=>=> RelationalSchema.Table>> projectfundedbygovernmentrank;
ClassDiagram.Class>> ProjectFundedByPrivateSectorRank =>=>=> RelationalSchema.Table>> projectfundedbyprivatesectorrank;
ClassDiagram.Class>> TextbookRank =>=>=> RelationalSchema.Table>> textbookrank;
ClassDiagram.Class>> Citation =>=>=> RelationalSchema.Table>> citation;
ClassDiagram.Class>> Monograph =>=>=> RelationalSchema.Table>> monograph;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> TextBook =>=>=> RelationalSchema.Table>> textbook;
ClassDiagram.Class>> ProjectFundedByPrivateSector =>=>=> RelationalSchema.Table>> projectfundedbyprivatesector;
ClassDiagram.Class>> ScienReasCheckingStatus =>=>=> RelationalSchema.Table>> scienreascheckingstatus;
ClassDiagram.Class>> Thesis =>=>=> RelationalSchema.Table>> thesis;
ClassDiagram.Class>> AwardsRank =>=>=> RelationalSchema.Table>> awardsrank;
ClassDiagram.Class>> AwardLevel =>=>=> RelationalSchema.Table>> awardlevel;
ClassDiagram.Class>> Awards =>=>=> RelationalSchema.Table>> awards;
ClassDiagram.Class>> Rank =>=>=> RelationalSchema.Table>> rank;
ClassDiagram.Class>> JournalRank =>=>=> RelationalSchema.Table>> journalrank;
ClassDiagram.Class>> MonographRank =>=>=> RelationalSchema.Table>> monographrank;
ClassDiagram.Class>> ScientificResearch =>=>=> RelationalSchema.Table>> scientificresearch;
ClassDiagram.Class>> ProjectFundedByGovernment =>=>=> RelationalSchema.Table>> projectfundedbygovernment;
ClassDiagram.Class>> PublishedBook =>=>=> RelationalSchema.Table>> publishedbook;
ClassDiagram.Class>> UserRole =>=>=> RelationalSchema.Table>> userrole;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Actor =>=>=> RelationalSchema.Table>> actor;
ClassDiagram.Class>> Resource =>=>=> RelationalSchema.Table>> resource;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Attendance =>=>=> RelationalSchema.Table>> attendance;
ClassDiagram.Class>> PrivateLeaveDescription =>=>=> RelationalSchema.Table>> privateleavedescription;
ClassDiagram.Class>> AttendanceSummary =>=>=> RelationalSchema.Table>> attendancesummary;
ClassDiagram.Class>> PresenceDescription =>=>=> RelationalSchema.Table>> presencedescription;
ClassDiagram.Class>> Leave =>=>=> RelationalSchema.Table>> leave;
ClassDiagram.Class>> AbstractDescription =>=>=> RelationalSchema.Table>> abstractdescription;
ClassDiagram.Class>> PrivateLeave =>=>=> RelationalSchema.Table>> privateleave;
ClassDiagram.Class>> UniversityAbsenceDescription =>=>=> RelationalSchema.Table>> universityabsencedescription;
ClassDiagram.Class>> NeglectWorkDescription =>=>=> RelationalSchema.Table>> neglectworkdescription;
ClassDiagram.Class>> UniversityAbsence =>=>=> RelationalSchema.Table>> universityabsence;
ClassDiagram.Class>> BusinessLeave =>=>=> RelationalSchema.Table>> businessleave;
ClassDiagram.Class>> NeglectWork =>=>=> RelationalSchema.Table>> neglectwork;
ClassDiagram.Class>> Presence =>=>=> RelationalSchema.Table>> presence;
ClassDiagram.Class>> BusinessLeaveDescription =>=>=> RelationalSchema.Table>> businessleavedescription;
ClassDiagram.Attribut>> TestDomain.id:Integer =>=>=> RelationalSchema.Column>> testdomain.id PRIMARY KEY;
ClassDiagram.Attribut>> TestDomain.name:String =>=>=> RelationalSchema.Column>> testdomain.name;
ClassDiagram.Attribut>> TestDomain.num:Integer =>=>=> RelationalSchema.Column>> testdomain.num;
ClassDiagram.Attribut>> MinorClass./***@generated*@ordered*一个班级有多个学生*双向关联*/student:Set<Student> =>=>=> RelationalSchema.Column>> minorclass./***@generated*@ordered*一个班级有多个学生*双向关联*/student;
ClassDiagram.Attribut>> MinorClass./***辅修学院，双向多对一*/:MinorMajor =>=>=> RelationalSchema.Column>> minorclass./***辅修学院，双向多对一*/;
ClassDiagram.Attribut>> Major./***学院,双向多对一关系*/:Academy =>=>=> RelationalSchema.Column>> major./***学院,双向多对一关系*/;
ClassDiagram.Attribut>> Student_Course.id:Integer =>=>=> RelationalSchema.Column>> student_course.id PRIMARY KEY;
ClassDiagram.Attribut>> Student_Course./***学分互认*/confirm:boolean =>=>=> RelationalSchema.Column>> student_course./***学分互认*/confirm;
ClassDiagram.Attribut>> Student_Course./***成绩*/score:Double =>=>=> RelationalSchema.Column>> student_course./***成绩*/score;
ClassDiagram.Attribut>> CoursePlan.id:Integer =>=>=> RelationalSchema.Column>> courseplan.id PRIMARY KEY;
ClassDiagram.Attribut>> CoursePlan./***教室*/classroom:String =>=>=> RelationalSchema.Column>> courseplan./***教室*/classroom;
ClassDiagram.Attribut>> CoursePlan./***上课时间*/classtime:String =>=>=> RelationalSchema.Column>> courseplan./***上课时间*/classtime;
ClassDiagram.Attribut>> CoursePlan./***老师*/teacher:String =>=>=> RelationalSchema.Column>> courseplan./***老师*/teacher;
ClassDiagram.Attribut>> Year./***学年编号*/id:Integer =>=>=> RelationalSchema.Column>> year./***学年编号*/id PRIMARY KEY;
ClassDiagram.Attribut>> Year./***开设学年*/year_name:Integer =>=>=> RelationalSchema.Column>> year./***开设学年*/year_name;
ClassDiagram.Attribut>> Grade.id:Integer =>=>=> RelationalSchema.Column>> grade.id PRIMARY KEY;
ClassDiagram.Attribut>> Grade./***年级（获取当前年份，其上三年，其下三年）*/grade_name:Integer =>=>=> RelationalSchema.Column>> grade./***年级（获取当前年份，其上三年，其下三年）*/grade_name;
ClassDiagram.Attribut>> Classify.id:Integer =>=>=> RelationalSchema.Column>> classify.id PRIMARY KEY;
ClassDiagram.Attribut>> Classify.description:String =>=>=> RelationalSchema.Column>> classify.description;
ClassDiagram.Attribut>> Course.id:Integer =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Course./***课程名*/name:String =>=>=> RelationalSchema.Column>> course./***课程名*/name;
ClassDiagram.Attribut>> Course./***教材名*/book:String =>=>=> RelationalSchema.Column>> course./***教材名*/book;
ClassDiagram.Attribut>> Course./***学分*/credit:int =>=>=> RelationalSchema.Column>> course./***学分*/credit;
ClassDiagram.Attribut>> Course./***学时*/period:String =>=>=> RelationalSchema.Column>> course./***学时*/period;
ClassDiagram.Attribut>> Course./***学费*/money:String =>=>=> RelationalSchema.Column>> course./***学费*/money;
ClassDiagram.Attribut>> Classes./***@generated*@ordered*一个班级有多个学生*/student:Set<Student> =>=>=> RelationalSchema.Column>> classes./***@generated*@ordered*一个班级有多个学生*/student;
ClassDiagram.Attribut>> Classes./***多个班级对应一个专业*双向关联*/:Major =>=>=> RelationalSchema.Column>> classes./***多个班级对应一个专业*双向关联*/;
ClassDiagram.Attribut>> Reward.id:Long =>=>=> RelationalSchema.Column>> reward.id;
ClassDiagram.Attribut>> Reward./***授予日期*/granteddate:Calendar =>=>=> RelationalSchema.Column>> reward./***授予日期*/granteddate;
ClassDiagram.Attribut>> Reward./***名称*/name:String =>=>=> RelationalSchema.Column>> reward./***名称*/name;
ClassDiagram.Attribut>> Reward./***级别*/rank:String =>=>=> RelationalSchema.Column>> reward./***级别*/rank;
ClassDiagram.Attribut>> Reward./***位次*/precedence:String =>=>=> RelationalSchema.Column>> reward./***位次*/precedence;
ClassDiagram.Attribut>> Reward./**总人数**/numofparticipants:String =>=>=> RelationalSchema.Column>> reward./**总人数**/numofparticipants;
ClassDiagram.Attribut>> Reward./***授予机关*/grantedby:String =>=>=> RelationalSchema.Column>> reward./***授予机关*/grantedby;
ClassDiagram.Attribut>> Reward./***员工*/:Employee =>=>=> RelationalSchema.Column>> reward./***员工*/;
ClassDiagram.Attribut>> EmployeeAssPractisingCertification.id:Long =>=>=> RelationalSchema.Column>> employeeasspractisingcertification.id;
ClassDiagram.Attribut>> EmployeeAssPractisingCertification./***注册编号*/registerno:String =>=>=> RelationalSchema.Column>> employeeasspractisingcertification./***注册编号*/registerno;
ClassDiagram.Attribut>> EmployeeAssPractisingCertification./***证书编号*/certificateno:String =>=>=> RelationalSchema.Column>> employeeasspractisingcertification./***证书编号*/certificateno;
ClassDiagram.Attribut>> EmployeeAssPractisingCertification./***聘用企业*/servedorganization:String =>=>=> RelationalSchema.Column>> employeeasspractisingcertification./***聘用企业*/servedorganization;
ClassDiagram.Attribut>> EmployeeAssPractisingCertification./***获得时间*/issueddate:Calendar =>=>=> RelationalSchema.Column>> employeeasspractisingcertification./***获得时间*/issueddate;
ClassDiagram.Attribut>> EmployeeAssPractisingCertification.photo:byte =>=>=> RelationalSchema.Column>> employeeasspractisingcertification.photo;
ClassDiagram.Attribut>> EmployeeAssPractisingCertification./***员工*/:Employee =>=>=> RelationalSchema.Column>> employeeasspractisingcertification./***员工*/;
ClassDiagram.Attribut>> EmployeeAssPractisingCertification./***发证机构*/:Issuer =>=>=> RelationalSchema.Column>> employeeasspractisingcertification./***发证机构*/;
ClassDiagram.Attribut>> AcademicConference.id:Long =>=>=> RelationalSchema.Column>> academicconference.id PRIMARY KEY;
ClassDiagram.Attribut>> AcademicConference./***开始时间*/starttime:Calendar =>=>=> RelationalSchema.Column>> academicconference./***开始时间*/starttime;
ClassDiagram.Attribut>> AcademicConference./***结束时间*/endtime:Calendar =>=>=> RelationalSchema.Column>> academicconference./***结束时间*/endtime;
ClassDiagram.Attribut>> AcademicConference./***会议名称*/name:String =>=>=> RelationalSchema.Column>> academicconference./***会议名称*/name;
ClassDiagram.Attribut>> AcademicConference./***主办机构*/:Host =>=>=> RelationalSchema.Column>> academicconference./***主办机构*/;
ClassDiagram.Attribut>> AcademicConference./***汇报时间*/reporttime:Calendar =>=>=> RelationalSchema.Column>> academicconference./***汇报时间*/reporttime;
ClassDiagram.Attribut>> AcademicConference./***审核结果*/:ReviewResult =>=>=> RelationalSchema.Column>> academicconference./***审核结果*/;
ClassDiagram.Attribut>> Department.id:Long =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department./***部门名字*/departmentname:String =>=>=> RelationalSchema.Column>> department./***部门名字*/departmentname;
ClassDiagram.Attribut>> Department.GeneratedName:School =>=>=> RelationalSchema.Column>> department.GeneratedName;
ClassDiagram.Attribut>> Department./***员工*/employees:Set<Employee> =>=>=> RelationalSchema.Column>> department./***员工*/employees;
ClassDiagram.Attribut>> YesOrNo.id:Long =>=>=> RelationalSchema.Column>> yesorno.id PRIMARY KEY;
ClassDiagram.Attribut>> YesOrNo.description:String =>=>=> RelationalSchema.Column>> yesorno.description;
ClassDiagram.Attribut>> Post./***员工职位信息*/employeeassposts:Set<EmployeeAssPost> =>=>=> RelationalSchema.Column>> post./***员工职位信息*/employeeassposts;
ClassDiagram.Attribut>> VisitingAcademic.id:Long =>=>=> RelationalSchema.Column>> visitingacademic.id;
ClassDiagram.Attribut>> VisitingAcademic./***进修名称*实际上是项目名称*/program:String =>=>=> RelationalSchema.Column>> visitingacademic./***进修名称*实际上是项目名称*/program;
ClassDiagram.Attribut>> VisitingAcademic./***开始时间*/starttime:Calendar =>=>=> RelationalSchema.Column>> visitingacademic./***开始时间*/starttime;
ClassDiagram.Attribut>> VisitingAcademic./***结束时间*/endtime:Calendar =>=>=> RelationalSchema.Column>> visitingacademic./***结束时间*/endtime;
ClassDiagram.Attribut>> VisitingAcademic./***受访机构*/visitedorganization:String =>=>=> RelationalSchema.Column>> visitingacademic./***受访机构*/visitedorganization;
ClassDiagram.Attribut>> VisitingAcademic./***导师姓名*/supervisorname:String =>=>=> RelationalSchema.Column>> visitingacademic./***导师姓名*/supervisorname;
ClassDiagram.Attribut>> VisitingAcademic./***汇报时间*/reporttime:Calendar =>=>=> RelationalSchema.Column>> visitingacademic./***汇报时间*/reporttime;
ClassDiagram.Attribut>> VisitingAcademic./***审核结果*/:ReviewResult =>=>=> RelationalSchema.Column>> visitingacademic./***审核结果*/;
ClassDiagram.Attribut>> VisitingAcademic./***资助机构*/:Sponsor =>=>=> RelationalSchema.Column>> visitingacademic./***资助机构*/;
ClassDiagram.Attribut>> VisitingAcademic./***是否国内访问*/domesticornot:YesOrNo =>=>=> RelationalSchema.Column>> visitingacademic./***是否国内访问*/domesticornot;
ClassDiagram.Attribut>> VisitingAcademic./***员工*/:Employee =>=>=> RelationalSchema.Column>> visitingacademic./***员工*/;
ClassDiagram.Attribut>> EmployeeAssPost.id:Long =>=>=> RelationalSchema.Column>> employeeasspost.id;
ClassDiagram.Attribut>> EmployeeAssPost./***任命时间*/appointeddate:Calendar =>=>=> RelationalSchema.Column>> employeeasspost./***任命时间*/appointeddate;
ClassDiagram.Attribut>> EmployeeAssPost./***红头文件*文件号*任命书*/commissionno:String =>=>=> RelationalSchema.Column>> employeeasspost./***红头文件*文件号*任命书*/commissionno;
ClassDiagram.Attribut>> EmployeeAssPost./***职位名称*/:Post =>=>=> RelationalSchema.Column>> employeeasspost./***职位名称*/;
ClassDiagram.Attribut>> SchoolWorkExperience.id:Long =>=>=> RelationalSchema.Column>> schoolworkexperience.id;
ClassDiagram.Attribut>> SchoolWorkExperience./***开始工作时间*/starttime:Calendar =>=>=> RelationalSchema.Column>> schoolworkexperience./***开始工作时间*/starttime;
ClassDiagram.Attribut>> SchoolWorkExperience./***结束工作时间*/endtime:Calendar =>=>=> RelationalSchema.Column>> schoolworkexperience./***结束工作时间*/endtime;
ClassDiagram.Attribut>> SchoolWorkExperience./***级别*/:PositionRank =>=>=> RelationalSchema.Column>> schoolworkexperience./***级别*/;
ClassDiagram.Attribut>> SchoolWorkExperience./***担任职务*/:Post =>=>=> RelationalSchema.Column>> schoolworkexperience./***担任职务*/;
ClassDiagram.Attribut>> SchoolWorkExperience./***员工*/:Employee =>=>=> RelationalSchema.Column>> schoolworkexperience./***员工*/;
ClassDiagram.Attribut>> EmployeeAssProfessionalTitle.id:Long =>=>=> RelationalSchema.Column>> employeeassprofessionaltitle.id PRIMARY KEY;
ClassDiagram.Attribut>> EmployeeAssProfessionalTitle./***评定时间*/nominateddate:Calendar =>=>=> RelationalSchema.Column>> employeeassprofessionaltitle./***评定时间*/nominateddate;
ClassDiagram.Attribut>> EmployeeAssProfessionalTitle./***评定文号*/nominatedno:String =>=>=> RelationalSchema.Column>> employeeassprofessionaltitle./***评定文号*/nominatedno;
ClassDiagram.Attribut>> EmployeeAssProfessionalTitle./***聘任时间*/appointeddate:Calendar =>=>=> RelationalSchema.Column>> employeeassprofessionaltitle./***聘任时间*/appointeddate;
ClassDiagram.Attribut>> EmployeeAssProfessionalTitle./***聘任文号*/appointedno:String =>=>=> RelationalSchema.Column>> employeeassprofessionaltitle./***聘任文号*/appointedno;
ClassDiagram.Attribut>> EducationQualification.employeeasseducationqualifications:Set<EmployeeAssEducationQualification> =>=>=> RelationalSchema.Column>> educationqualification.employeeasseducationqualifications;
ClassDiagram.Attribut>> EmployeeAssAcademicDegree.id:Long =>=>=> RelationalSchema.Column>> employeeassacademicdegree.id;
ClassDiagram.Attribut>> EmployeeAssAcademicDegree./***获得时间*/granteddate:Calendar =>=>=> RelationalSchema.Column>> employeeassacademicdegree./***获得时间*/granteddate;
ClassDiagram.Attribut>> EmployeeAssAcademicDegree./***专业*/major:String =>=>=> RelationalSchema.Column>> employeeassacademicdegree./***专业*/major;
ClassDiagram.Attribut>> EmployeeAssAcademicDegree./***证书编号*/certificateno:String =>=>=> RelationalSchema.Column>> employeeassacademicdegree./***证书编号*/certificateno;
ClassDiagram.Attribut>> EmployeeAssAcademicDegree./***学校*/university:String =>=>=> RelationalSchema.Column>> employeeassacademicdegree./***学校*/university;
ClassDiagram.Attribut>> EmployeeAssAcademicDegree./***员工*/:Employee =>=>=> RelationalSchema.Column>> employeeassacademicdegree./***员工*/;
ClassDiagram.Attribut>> AbstractCategory.id:Long =>=>=> RelationalSchema.Column>> abstractcategory.id PRIMARY KEY;
ClassDiagram.Attribut>> AbstractCategory./***编号*/no:String =>=>=> RelationalSchema.Column>> abstractcategory./***编号*/no;
ClassDiagram.Attribut>> AbstractCategory./***类别*/description:String =>=>=> RelationalSchema.Column>> abstractcategory./***类别*/description;
ClassDiagram.Attribut>> EmployeeAssEducationQualification.id:Long =>=>=> RelationalSchema.Column>> employeeasseducationqualification.id;
ClassDiagram.Attribut>> EmployeeAssEducationQualification./***入学时间*/enrolldate:Calendar =>=>=> RelationalSchema.Column>> employeeasseducationqualification./***入学时间*/enrolldate;
ClassDiagram.Attribut>> EmployeeAssEducationQualification./***获得学历时间*/graduatedate:Calendar =>=>=> RelationalSchema.Column>> employeeasseducationqualification./***获得学历时间*/graduatedate;
ClassDiagram.Attribut>> EmployeeAssEducationQualification./***专业*/major:String =>=>=> RelationalSchema.Column>> employeeasseducationqualification./***专业*/major;
ClassDiagram.Attribut>> EmployeeAssEducationQualification./***学制*/duration:Integer =>=>=> RelationalSchema.Column>> employeeasseducationqualification./***学制*/duration;
ClassDiagram.Attribut>> EmployeeAssEducationQualification./***导师姓名*/supervisorname:String =>=>=> RelationalSchema.Column>> employeeasseducationqualification./***导师姓名*/supervisorname;
ClassDiagram.Attribut>> EmployeeAssEducationQualification./***毕业证书编号*/certificateno:String =>=>=> RelationalSchema.Column>> employeeasseducationqualification./***毕业证书编号*/certificateno;
ClassDiagram.Attribut>> EmployeeAssEducationQualification./***学校*/university:String =>=>=> RelationalSchema.Column>> employeeasseducationqualification./***学校*/university;
ClassDiagram.Attribut>> EmployeeAssEducationQualification./***员工*/:Employee =>=>=> RelationalSchema.Column>> employeeasseducationqualification./***员工*/;
ClassDiagram.Attribut>> PractisingCertification./***执业资格证书信息*/employeeasspractisingcertifications:Set<EmployeeAssPractisingCertification> =>=>=> RelationalSchema.Column>> practisingcertification./***执业资格证书信息*/employeeasspractisingcertifications;
ClassDiagram.Attribut>> School.id:Long =>=>=> RelationalSchema.Column>> school.id PRIMARY KEY;
ClassDiagram.Attribut>> School.schoolname:String =>=>=> RelationalSchema.Column>> school.schoolname;
ClassDiagram.Attribut>> PreviousWorkExperience.id:Long =>=>=> RelationalSchema.Column>> previousworkexperience.id PRIMARY KEY;
ClassDiagram.Attribut>> PreviousWorkExperience./***开始工作时间*/starttime:Calendar =>=>=> RelationalSchema.Column>> previousworkexperience./***开始工作时间*/starttime;
ClassDiagram.Attribut>> PreviousWorkExperience./***结束工作时间*/endtime:Calendar =>=>=> RelationalSchema.Column>> previousworkexperience./***结束工作时间*/endtime;
ClassDiagram.Attribut>> PreviousWorkExperience./***单位名称*/hiredbycompany:String =>=>=> RelationalSchema.Column>> previousworkexperience./***单位名称*/hiredbycompany;
ClassDiagram.Attribut>> PreviousWorkExperience./***部门名称*/departmentname:String =>=>=> RelationalSchema.Column>> previousworkexperience./***部门名称*/departmentname;
ClassDiagram.Attribut>> PreviousWorkExperience./***级别*/rank:String =>=>=> RelationalSchema.Column>> previousworkexperience./***级别*/rank;
ClassDiagram.Attribut>> PreviousWorkExperience./***担任职务*/post:String =>=>=> RelationalSchema.Column>> previousworkexperience./***担任职务*/post;
ClassDiagram.Attribut>> PreviousWorkExperience./***员工*/:Employee =>=>=> RelationalSchema.Column>> previousworkexperience./***员工*/;
ClassDiagram.Attribut>> ProfessionalTitle.employeeassprofessionaltitles:Set<EmployeeAssProfessionalTitle> =>=>=> RelationalSchema.Column>> professionaltitle.employeeassprofessionaltitles;
ClassDiagram.Attribut>> Actor.id:Long =>=>=> RelationalSchema.Column>> actor.id PRIMARY KEY;
ClassDiagram.Attribut>> Actor./***用户编号*/no:String =>=>=> RelationalSchema.Column>> actor./***用户编号*/no;
ClassDiagram.Attribut>> Actor./***用户姓名*/name:String =>=>=> RelationalSchema.Column>> actor./***用户姓名*/name;
ClassDiagram.Attribut>> Actor./***出生日期*注解是日期转化为json数据时，转化为需要的模式*"yyyy-mm-ddhh-mm-ss"*/birth:Calendar =>=>=> RelationalSchema.Column>> actor./***出生日期*注解是日期转化为json数据时，转化为需要的模式*"yyyy-mm-ddhh-mm-ss"*/birth;
ClassDiagram.Attribut>> Actor./***年龄*不需要被映射到数据库表中*/age:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Actor./***身份证号*/idno:String =>=>=> RelationalSchema.Column>> actor./***身份证号*/idno;
ClassDiagram.Attribut>> Actor./***籍贯*/grandpabirthplace:String =>=>=> RelationalSchema.Column>> actor./***籍贯*/grandpabirthplace;
ClassDiagram.Attribut>> Actor./***电话*/mobile:String =>=>=> RelationalSchema.Column>> actor./***电话*/mobile;
ClassDiagram.Attribut>> Actor./***来学校工作的时间*/datetoschool:Calendar =>=>=> RelationalSchema.Column>> actor./***来学校工作的时间*/datetoschool;
ClassDiagram.Attribut>> Actor./***参加工作的时间*/datetowork:Calendar =>=>=> RelationalSchema.Column>> actor./***参加工作的时间*/datetowork;
ClassDiagram.Attribut>> Actor./***退休时间*/datetoretire:Calendar =>=>=> RelationalSchema.Column>> actor./***退休时间*/datetoretire;
ClassDiagram.Attribut>> Actor./***工龄*/workage:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Actor./***紧急电话*/emergencymobile:Long =>=>=> RelationalSchema.Column>> actor./***紧急电话*/emergencymobile;
ClassDiagram.Attribut>> Actor./***家庭地址*/address:String =>=>=> RelationalSchema.Column>> actor./***家庭地址*/address;
ClassDiagram.Attribut>> Actor./***邮箱*/email:String =>=>=> RelationalSchema.Column>> actor./***邮箱*/email;
ClassDiagram.Attribut>> Actor./***qq*/qq:String =>=>=> RelationalSchema.Column>> actor./***qq*/qq;
ClassDiagram.Attribut>> Actor./***微信*/wechat:String =>=>=> RelationalSchema.Column>> actor./***微信*/wechat;
ClassDiagram.Attribut>> EmployeeAssPoliticalParty.pid:Long =>=>=> RelationalSchema.Column>> employeeasspoliticalparty.pid PRIMARY KEY;
ClassDiagram.Attribut>> EmployeeAssPoliticalParty./*	*入党时间	*注解是日期转化为json数据时，转化为需要的模式	*"yyyy-mm-ddhh-mm-ss"	*/membershipfrom:Calendar =>=>=> RelationalSchema.Column>> employeeasspoliticalparty./*	*入党时间	*注解是日期转化为json数据时，转化为需要的模式	*"yyyy-mm-ddhh-mm-ss"	*/membershipfrom;
ClassDiagram.Attribut>> Employee.,char和java.lang.string将被持久化为clob类型.java.sql.blob,,和serializabletype将被持久化为blob类型。//持久化为blob或者clob类型,根据get方法的不同,自动进行clob和blob的转换//@jsonignorephoto:byte =>=>=> RelationalSchema.Column>> employee.,char和java.lang.string将被持久化为clob类型.java.sql.blob,,和serializabletype将被持久化为blob类型。//持久化为blob或者clob类型,根据get方法的不同,自动进行clob和blob的转换//@jsonignorephoto;
ClassDiagram.Attribut>> Employee./***工资号*/salaryno:String =>=>=> RelationalSchema.Column>> employee./***工资号*/salaryno;
ClassDiagram.Attribut>> Employee./**民族*/:Nation =>=>=> RelationalSchema.Column>> employee./**民族*/;
ClassDiagram.Attribut>> Employee./***职工类别*/:EmploymentCategory =>=>=> RelationalSchema.Column>> employee./***职工类别*/;
ClassDiagram.Attribut>> Employee./***学历信息*加上	注解，表示在转化为json的时候，忽略该关联属性*如果没有这个属性，就会出现死循环情况，因为他的实体对象包括的其他实体对象，其他实体对象也包括其他的实体对象，就会陷入死循环中*即通过该实体对象获取到关联实体对象json数据，关联实体对象里又关联该实体对象，就会无限循环下去。*/employeeasseducationqualifications:Set<EmployeeAssEducationQualification> =>=>=> RelationalSchema.Column>> employee./***学历信息*加上	注解，表示在转化为json的时候，忽略该关联属性*如果没有这个属性，就会出现死循环情况，因为他的实体对象包括的其他实体对象，其他实体对象也包括其他的实体对象，就会陷入死循环中*即通过该实体对象获取到关联实体对象json数据，关联实体对象里又关联该实体对象，就会无限循环下去。*/employeeasseducationqualifications;
ClassDiagram.Attribut>> Employee./***员工职务信息记录*/employeeassposts:Set<EmployeeAssPost> =>=>=> RelationalSchema.Column>> employee./***员工职务信息记录*/employeeassposts;
ClassDiagram.Attribut>> Employee./***来校前工作经历*/previousworkexperiences:Set<PreviousWorkExperience> =>=>=> RelationalSchema.Column>> employee./***来校前工作经历*/previousworkexperiences;
ClassDiagram.Attribut>> Employee./***在校工作经历*/schoolworkexperiences:Set<SchoolWorkExperience> =>=>=> RelationalSchema.Column>> employee./***在校工作经历*/schoolworkexperiences;
ClassDiagram.Attribut>> Employee./***奖励信息记录*/rewards:Set<Reward> =>=>=> RelationalSchema.Column>> employee./***奖励信息记录*/rewards;
ClassDiagram.Attribut>> Employee./***访学记录*/visitingacademics:Set<VisitingAcademic> =>=>=> RelationalSchema.Column>> employee./***访学记录*/visitingacademics;
ClassDiagram.Attribut>> Employee./***学术会议信息记录*/academicconferences:Set<AcademicConference> =>=>=> RelationalSchema.Column>> employee./***学术会议信息记录*/academicconferences;
ClassDiagram.Attribut>> Employee./***职称信息记录*/employeeassprofessionaltitles:Set<EmployeeAssProfessionalTitle> =>=>=> RelationalSchema.Column>> employee./***职称信息记录*/employeeassprofessionaltitles;
ClassDiagram.Attribut>> Employee./***执业资格信息记录*/employeeasspractisingcertifications:Set<EmployeeAssPractisingCertification> =>=>=> RelationalSchema.Column>> employee./***执业资格信息记录*/employeeasspractisingcertifications;
ClassDiagram.Attribut>> Employee./***学位信息记录*/employeeassacademicdegrees:Set<EmployeeAssAcademicDegree> =>=>=> RelationalSchema.Column>> employee./***学位信息记录*/employeeassacademicdegrees;
ClassDiagram.Attribut>> Employee./**考勤信息**/attendances:Set<Attendance> =>=>=> RelationalSchema.Column>> employee./**考勤信息**/attendances;
ClassDiagram.Attribut>> Employee.//考勤纸attendancesummaries:Collection<AttendanceSummary> =>=>=> RelationalSchema.Column>> employee.//考勤纸attendancesummaries;
ClassDiagram.Attribut>> Employee./**请假信息**/leaves:Set<Leave> =>=>=> RelationalSchema.Column>> employee./**请假信息**/leaves;
ClassDiagram.Attribut>> Employee./***部门/教研室*/:Department =>=>=> RelationalSchema.Column>> employee./***部门/教研室*/;
ClassDiagram.Attribut>> Sex.id:Long =>=>=> RelationalSchema.Column>> sex.id PRIMARY KEY;
ClassDiagram.Attribut>> Sex.description:String =>=>=> RelationalSchema.Column>> sex.description;
ClassDiagram.Attribut>> AcademicDegree./***学位信息记录*/employeeassacademicdegrees:Set<EmployeeAssAcademicDegree> =>=>=> RelationalSchema.Column>> academicdegree./***学位信息记录*/employeeassacademicdegrees;
ClassDiagram.Attribut>> Appointment.id:Integer =>=>=> RelationalSchema.Column>> appointment.id;
ClassDiagram.Attribut>> Appointment./***日期（年月日:Date =>=>=> RelationalSchema.Column>> appointment./***日期（年月日;
ClassDiagram.Attribut>> Appointment./***事由*/reason:String =>=>=> RelationalSchema.Column>> appointment./***事由*/reason;
ClassDiagram.Attribut>> Appointment./***参加人数*/numofperson:int =>=>=> RelationalSchema.Column>> appointment./***参加人数*/numofperson;
ClassDiagram.Attribut>> Time.id:Integer =>=>=> RelationalSchema.Column>> time.id;
ClassDiagram.Attribut>> Time./***节次*/num:Integer =>=>=> RelationalSchema.Column>> time./***节次*/num;
ClassDiagram.Attribut>> Time./***开始时间*/begin:Date =>=>=> RelationalSchema.Column>> time./***开始时间*/begin;
ClassDiagram.Attribut>> Time./***结束时间*/end:Date =>=>=> RelationalSchema.Column>> time./***结束时间*/end;
ClassDiagram.Attribut>> Monograph.author:String =>=>=> RelationalSchema.Column>> monograph.author;
ClassDiagram.Attribut>> Project.//名称name:String =>=>=> RelationalSchema.Column>> project.//名称name;
ClassDiagram.Attribut>> Project.//编号no:String =>=>=> RelationalSchema.Column>> project.//编号no;
ClassDiagram.Attribut>> Project.//来源resource:String =>=>=> RelationalSchema.Column>> project.//来源resource;
ClassDiagram.Attribut>> Project.//项目负责人leader:String =>=>=> RelationalSchema.Column>> project.//项目负责人leader;
ClassDiagram.Attribut>> Project.//批准部门sponsor:String =>=>=> RelationalSchema.Column>> project.//批准部门sponsor;
ClassDiagram.Attribut>> Project.//立项时间starttime:Calendar =>=>=> RelationalSchema.Column>> project.//立项时间starttime;
ClassDiagram.Attribut>> Project.//结题时间endtime:Calendar =>=>=> RelationalSchema.Column>> project.//结题时间endtime;
ClassDiagram.Attribut>> Project.//经费expenditure:Double =>=>=> RelationalSchema.Column>> project.//经费expenditure;
ClassDiagram.Attribut>> TextBook.editor:String =>=>=> RelationalSchema.Column>> textbook.editor;
ClassDiagram.Attribut>> ScienReasCheckingStatus.id:Long =>=>=> RelationalSchema.Column>> scienreascheckingstatus.id PRIMARY KEY;
ClassDiagram.Attribut>> ScienReasCheckingStatus.//审核状态state:String =>=>=> RelationalSchema.Column>> scienreascheckingstatus.//审核状态state;
ClassDiagram.Attribut>> Thesis.//题目title:String =>=>=> RelationalSchema.Column>> thesis.//题目title;
ClassDiagram.Attribut>> Thesis.//期刊名称name:String =>=>=> RelationalSchema.Column>> thesis.//期刊名称name;
ClassDiagram.Attribut>> Thesis.//发表-年year:String =>=>=> RelationalSchema.Column>> thesis.//发表-年year;
ClassDiagram.Attribut>> Thesis.//发表-期--属性名---issueissue:Integer =>=>=> RelationalSchema.Column>> thesis.//发表-期--属性名---issueissue;
ClassDiagram.Attribut>> Thesis.//发表-卷---属性名---volumevolume:Integer =>=>=> RelationalSchema.Column>> thesis.//发表-卷---属性名---volumevolume;
ClassDiagram.Attribut>> Thesis.//起始页码--属性名--startingpagenostartingpageno:Integer =>=>=> RelationalSchema.Column>> thesis.//起始页码--属性名--startingpagenostartingpageno;
ClassDiagram.Attribut>> Thesis.//结束页码--属性名--endingpagenoendingpageno:Integer =>=>=> RelationalSchema.Column>> thesis.//结束页码--属性名--endingpagenoendingpageno;
ClassDiagram.Attribut>> Awards.//成果名称title:String =>=>=> RelationalSchema.Column>> awards.//成果名称title;
ClassDiagram.Attribut>> Awards.//代表作者author:String =>=>=> RelationalSchema.Column>> awards.//代表作者author;
ClassDiagram.Attribut>> Awards.//奖项名称name:String =>=>=> RelationalSchema.Column>> awards.//奖项名称name;
ClassDiagram.Attribut>> Awards.//批准部门sponsor:String =>=>=> RelationalSchema.Column>> awards.//批准部门sponsor;
ClassDiagram.Attribut>> Awards.//获奖时间dateofaward:Calendar =>=>=> RelationalSchema.Column>> awards.//获奖时间dateofaward;
ClassDiagram.Attribut>> Rank.id:Long =>=>=> RelationalSchema.Column>> rank.id PRIMARY KEY;
ClassDiagram.Attribut>> Rank./***编号*/no:String =>=>=> RelationalSchema.Column>> rank./***编号*/no;
ClassDiagram.Attribut>> Rank./***类别*/description:String =>=>=> RelationalSchema.Column>> rank./***类别*/description;
ClassDiagram.Attribut>> ScientificResearch.id:Long =>=>=> RelationalSchema.Column>> scientificresearch.id PRIMARY KEY;
ClassDiagram.Attribut>> ScientificResearch.//本人位次seating:String =>=>=> RelationalSchema.Column>> scientificresearch.//本人位次seating;
ClassDiagram.Attribut>> ScientificResearch.//参加人数numofparticipants:String =>=>=> RelationalSchema.Column>> scientificresearch.//参加人数numofparticipants;
ClassDiagram.Attribut>> PublishedBook.//名称name:String =>=>=> RelationalSchema.Column>> publishedbook.//名称name;
ClassDiagram.Attribut>> PublishedBook.//出版社press:String =>=>=> RelationalSchema.Column>> publishedbook.//出版社press;
ClassDiagram.Attribut>> PublishedBook.//出版时间publicationtime:Calendar =>=>=> RelationalSchema.Column>> publishedbook.//出版时间publicationtime;
ClassDiagram.Attribut>> PublishedBook.//isbnisbn:String =>=>=> RelationalSchema.Column>> publishedbook.//isbnisbn;
ClassDiagram.Attribut>> PublishedBook.//千字数words:int =>=>=> RelationalSchema.Column>> publishedbook.//千字数words;
ClassDiagram.Attribut>> UserRole./***/serialversionuid:long =>=>=> RelationalSchema.Column>> userrole./***/serialversionuid;
ClassDiagram.Attribut>> UserRole.id:Integer =>=>=> RelationalSchema.Column>> userrole.id PRIMARY KEY;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.id:Integer =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> Resource.id:Integer =>=>=> RelationalSchema.Column>> resource.id PRIMARY KEY;
ClassDiagram.Attribut>> Resource.//easyuitree结点显示的文字text:String =>=>=> RelationalSchema.Column>> resource.//easyuitree结点显示的文字text;
ClassDiagram.Attribut>> Resource.no:String =>=>=> RelationalSchema.Column>> resource.no;
ClassDiagram.Attribut>> Resource./***结点的状态，有两个值openclose*/state:String =>=>=> RelationalSchema.Column>> resource./***结点的状态，有两个值openclose*/state;
ClassDiagram.Attribut>> Resource./***菜单路径*/url:String =>=>=> RelationalSchema.Column>> resource./***菜单路径*/url;
ClassDiagram.Attribut>> Role./***角色id*/id:Integer =>=>=> RelationalSchema.Column>> role./***角色id*/id PRIMARY KEY;
ClassDiagram.Attribut>> Role./***角色描述，*目前有teacher、student、manager*/description:String =>=>=> RelationalSchema.Column>> role./***角色描述，*目前有teacher、student、manager*/description;
ClassDiagram.Attribut>> Role./***英文描述角色名字*/rolename:String =>=>=> RelationalSchema.Column>> role./***英文描述角色名字*/rolename;
ClassDiagram.Attribut>> Attendance.id:Long =>=>=> RelationalSchema.Column>> attendance.id PRIMARY KEY;
ClassDiagram.Attribut>> Attendance.GeneratedName:Employee =>=>=> RelationalSchema.Column>> attendance.GeneratedName;
ClassDiagram.Attribut>> Attendance.GeneratedName:AttendanceSummary =>=>=> RelationalSchema.Column>> attendance.GeneratedName;
ClassDiagram.Attribut>> AttendanceSummary.id:Long =>=>=> RelationalSchema.Column>> attendancesummary.id PRIMARY KEY;
ClassDiagram.Attribut>> AttendanceSummary.//考勤名称attendancename:String =>=>=> RelationalSchema.Column>> attendancesummary.//考勤名称attendancename;
ClassDiagram.Attribut>> AttendanceSummary.//考勤时间attendancetime:Calendar =>=>=> RelationalSchema.Column>> attendancesummary.//考勤时间attendancetime;
ClassDiagram.Attribut>> AttendanceSummary.//考勤人(管理员)attendancemanager:Employee =>=>=> RelationalSchema.Column>> attendancesummary.//考勤人(管理员)attendancemanager;
ClassDiagram.Attribut>> AttendanceSummary.//会议纪要minutes:String =>=>=> RelationalSchema.Column>> attendancesummary.//会议纪要minutes;
ClassDiagram.Attribut>> AttendanceSummary.//实际考勤attendances:List<Attendance> =>=>=> RelationalSchema.Column>> attendancesummary.//实际考勤attendances;
ClassDiagram.Attribut>> AttendanceSummary.//候选人candidates:List<Employee> =>=>=> RelationalSchema.Column>> attendancesummary.//候选人candidates;
ClassDiagram.Attribut>> Leave.id:Long =>=>=> RelationalSchema.Column>> leave.id PRIMARY KEY;
ClassDiagram.Attribut>> Leave.starttime:Calendar =>=>=> RelationalSchema.Column>> leave.starttime;
ClassDiagram.Attribut>> Leave.endtime:Calendar =>=>=> RelationalSchema.Column>> leave.endtime;
ClassDiagram.Attribut>> Leave.realtime:Calendar =>=>=> RelationalSchema.Column>> leave.realtime;
ClassDiagram.Attribut>> Leave.reason:String =>=>=> RelationalSchema.Column>> leave.reason;
ClassDiagram.Attribut>> Leave.GeneratedName:Employee =>=>=> RelationalSchema.Column>> leave.GeneratedName;
ClassDiagram.Attribut>> AbstractDescription.id:Long =>=>=> RelationalSchema.Column>> abstractdescription.id PRIMARY KEY;
ClassDiagram.Attribut>> AbstractDescription.description:String =>=>=> RelationalSchema.Column>> abstractdescription.description;
ClassDiagram.Attribut>> PrivateLeave.leavedescriptionleavedescription:PrivateLeaveDescription =>=>=> RelationalSchema.Column>> privateleave.leavedescriptionleavedescription;
ClassDiagram.Attribut>> UniversityAbsence.GeneratedName:UniversityAbsenceDescription =>=>=> RelationalSchema.Column>> universityabsence.GeneratedName;
ClassDiagram.Attribut>> BusinessLeave.GeneratedName:BusinessLeaveDescription =>=>=> RelationalSchema.Column>> businessleave.GeneratedName;
ClassDiagram.Attribut>> NeglectWork.GeneratedName:NeglectWorkDescription =>=>=> RelationalSchema.Column>> neglectwork.GeneratedName;
ClassDiagram.Attribut>> Presence.GeneratedName:PresenceDescription =>=>=> RelationalSchema.Column>> presence.GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Major  to ClassDiagram.Class>>Set<Classes>;
One-To-One relationship between ClassDiagram.Class>>Major  to ClassDiagram.Class>>minormajor represented by ClassDiagram.Atrribute>>/***双向一对一关系*辅修专业*/;
Many-To-One relationship from ClassDiagram.Class>>Major  to ClassDiagram.Class>>subjects represented by ClassDiagram.Atrribute>>/***专业学科*单向多对一*/;
Many-To-One relationship from ClassDiagram.Class>>Major  to ClassDiagram.Class>>affiliation represented by ClassDiagram.Atrribute>>/***专业所属*单向多对一*/;
Many-To-One relationship from ClassDiagram.Class>>Student_Course  to ClassDiagram.Class>>student represented by ClassDiagram.Atrribute>>/***学生*/;
Many-To-One relationship from ClassDiagram.Class>>Student_Course  to ClassDiagram.Class>>course represented by ClassDiagram.Atrribute>>/***课程*/;
Many-To-One relationship from ClassDiagram.Class>>CoursePlan  to ClassDiagram.Class>>course represented by ClassDiagram.Atrribute>>/***课程*/;
Many-To-One relationship from ClassDiagram.Class>>CoursePlan  to ClassDiagram.Class>>minormajor represented by ClassDiagram.Atrribute>>/***辅修专业*/;
Many-To-One relationship from ClassDiagram.Class>>CoursePlan  to ClassDiagram.Class>>grade represented by ClassDiagram.Atrribute>>/***年级*/;
Many-To-One relationship from ClassDiagram.Class>>CoursePlan  to ClassDiagram.Class>>year represented by ClassDiagram.Atrribute>>/***学年*/;
Many-To-One relationship from ClassDiagram.Class>>CoursePlan  to ClassDiagram.Class>>season represented by ClassDiagram.Atrribute>>/***学期*/;
One-To-Many relationship from ClassDiagram.Class>>Year  to ClassDiagram.Class>>List<CoursePlan>;
One-To-Many relationship from ClassDiagram.Class>>Grade  to ClassDiagram.Class>>List<CoursePlan>;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>classes represented by ClassDiagram.Atrribute>>/***主修班级*双向*/class1;
Many-To-One relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>minorclass represented by ClassDiagram.Atrribute>>/***辅修班级*双向*/;
One-To-Many relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>List<Student_Course>;
One-To-Many relationship from ClassDiagram.Class>>MinorMajor  to ClassDiagram.Class>>Set<MinorClass>;
One-To-One relationship between ClassDiagram.Class>>MinorMajor  to ClassDiagram.Class>>major represented by ClassDiagram.Atrribute>>/***主修专业*双向一对一*/;
One-To-Many relationship from ClassDiagram.Class>>MinorMajor  to ClassDiagram.Class>>List<CoursePlan>;
One-To-Many relationship from ClassDiagram.Class>>Academy  to ClassDiagram.Class>>Set<Major>;
One-To-Many relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>Collection<Student_Course>;
One-To-Many relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>List<CoursePlan>;
Many-To-One relationship from ClassDiagram.Class>>EmployeeAssPractisingCertification  to ClassDiagram.Class>>practisingCertification represented by ClassDiagram.Atrribute>>/***证书*/;
Many-To-One relationship from ClassDiagram.Class>>AcademicConference  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>/***职工*/;
Many-To-One relationship from ClassDiagram.Class>>EmployeeAssPost  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>/***员工*/;
Many-To-One relationship from ClassDiagram.Class>>SchoolWorkExperience  to ClassDiagram.Class>>school represented by ClassDiagram.Atrribute>>/***部门名称*/;
Many-To-One relationship from ClassDiagram.Class>>EmployeeAssProfessionalTitle  to ClassDiagram.Class>>professionalTitle represented by ClassDiagram.Atrribute>>/***职称*/;
Many-To-One relationship from ClassDiagram.Class>>EmployeeAssProfessionalTitle  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>/***员工*/;
Many-To-One relationship from ClassDiagram.Class>>EmployeeAssAcademicDegree  to ClassDiagram.Class>>academicDegree represented by ClassDiagram.Atrribute>>/***学位层次*/;
Many-To-One relationship from ClassDiagram.Class>>EmployeeAssAcademicDegree  to ClassDiagram.Class>>academicDegree represented by ClassDiagram.Atrribute>>/***学位名称*单向*/;
Many-To-One relationship from ClassDiagram.Class>>EmployeeAssEducationQualification  to ClassDiagram.Class>>educationQualification represented by ClassDiagram.Atrribute>>/***学历名称*单向关联，多端维护外键（关联关系）*	@jsonignore当json数据不能被解析的时候*	@jacksoninject反序列时标记该属性应经被注入*	@jsonunwrapped将子json对象的属性添加到封闭的json对象*	自定义反序列化*/;
One-To-Many relationship from ClassDiagram.Class>>PoliticalParty  to ClassDiagram.Class>>Set<EmployeeAssPoliticalParty>;
One-To-Many relationship from ClassDiagram.Class>>School  to ClassDiagram.Class>>Collection<Department>;
Many-To-One relationship from ClassDiagram.Class>>Actor  to ClassDiagram.Class>>sex represented by ClassDiagram.Atrribute>>/***性别*///string;
Many-To-One relationship from ClassDiagram.Class>>Actor  to ClassDiagram.Class>>yesorno represented by ClassDiagram.Atrribute>>/***是否华侨*///stringoverseaschineseornotoverseaschineseornot;
One-To-One relationship between ClassDiagram.Class>>Actor  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>/***用户*/;
Many-To-One relationship from ClassDiagram.Class>>EmployeeAssPoliticalParty  to ClassDiagram.Class>>politicalParty represented by ClassDiagram.Atrribute>>/***党派*/;
Many-To-One relationship from ClassDiagram.Class>>EmployeeAssPoliticalParty  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>/***职工*/;
One-To-Many relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Set<EmployeeAssPoliticalParty>;
Many-To-One relationship from ClassDiagram.Class>>Appointment  to ClassDiagram.Class>>time represented by ClassDiagram.Atrribute>>/***时间段*///@jsonidentityinfo(generator;
Many-To-One relationship from ClassDiagram.Class>>Appointment  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>//用户;
Many-To-One relationship from ClassDiagram.Class>>Appointment  to ClassDiagram.Class>>bookingresources represented by ClassDiagram.Atrribute>>/***教室或设备资源*/bookingadress;
Many-To-One relationship from ClassDiagram.Class>>Appointment  to ClassDiagram.Class>>bookingresources represented by ClassDiagram.Atrribute>>bookingequipments;
Many-To-One relationship from ClassDiagram.Class>>Monograph  to ClassDiagram.Class>>monographRank represented by ClassDiagram.Atrribute>>//专著级别;
Many-To-One relationship from ClassDiagram.Class>>TextBook  to ClassDiagram.Class>>textBookRank represented by ClassDiagram.Atrribute>>//教材级别;
Many-To-One relationship from ClassDiagram.Class>>ProjectFundedByPrivateSector  to ClassDiagram.Class>>projectFundedByPrivateSectorRank represented by ClassDiagram.Atrribute>>projectfundedbysectorrank//横向项目级别projectfundedbysectorrank;
Many-To-One relationship from ClassDiagram.Class>>Thesis  to ClassDiagram.Class>>journalRank represented by ClassDiagram.Atrribute>>//类属性--期刊级别--属性名-***********;
Many-To-One relationship from ClassDiagram.Class>>Thesis  to ClassDiagram.Class>>citation represented by ClassDiagram.Atrribute>>//类属性-收录情况-属性名--值域ei，sci，csci;
Many-To-One relationship from ClassDiagram.Class>>Awards  to ClassDiagram.Class>>awardLevel represented by ClassDiagram.Atrribute>>/***单向：*指明n：1关系*@joincolumn指明外键列名**@onetomany映射1：n关系**双向：mappedby维护关联关系*1：n注意2个实体类的外键名一致*1：1@onetoone*///获奖等级;
Many-To-One relationship from ClassDiagram.Class>>Awards  to ClassDiagram.Class>>awardsRank represented by ClassDiagram.Atrribute>>//奖项级别;
Many-To-One relationship from ClassDiagram.Class>>ScientificResearch  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ScientificResearch  to ClassDiagram.Class>>scienreascheckingstatus represented by ClassDiagram.Atrribute>>//审核状态checkingstatus;
Many-To-One relationship from ClassDiagram.Class>>ProjectFundedByGovernment  to ClassDiagram.Class>>projectFundedByGovernmentRank represented by ClassDiagram.Atrribute>>//纵向项目级别;
Many-To-One relationship from ClassDiagram.Class>>UserRole  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserRole  to ClassDiagram.Class>>role represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<UserRole>;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>actor represented by ClassDiagram.Atrribute>>/***optional;
One-To-Many relationship from ClassDiagram.Class>>Resource  to ClassDiagram.Class>>List<Resource>;
Many-To-One relationship from ClassDiagram.Class>>Resource  to ClassDiagram.Class>>resource represented by ClassDiagram.Atrribute>>/***jpa的自关联*父类*/parent;
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>set<resource>: role_resource(role_id:Role [PK] #FK to Role,resource_id:set<resource> [PK] #FK to set<resource>);
One-To-Many relationship from ClassDiagram.Class>>Role  to ClassDiagram.Class>>List<UserRole>;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Classify  ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>AbstractCategory  ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Actor  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Project   Descriminator>>type: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Rank   Descriminator>>type: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>PublishedBook   Descriminator>>type: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Attendance   Descriminator>>type: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>AbstractDescription   Descriminator>>type: String ;
