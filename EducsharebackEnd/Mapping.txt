ClassDiagram.Class>> Favori =>=>=> RelationalSchema.Table>> favori;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Class>> Basket =>=>=> RelationalSchema.Table>> basket;
ClassDiagram.Class>> Message =>=>=> RelationalSchema.Table>> message;
ClassDiagram.Class>> AppRole =>=>=> RelationalSchema.Table>> approle;
ClassDiagram.Class>> University =>=>=> RelationalSchema.Table>> university;
ClassDiagram.Class>> Faq =>=>=> RelationalSchema.Table>> faq;
ClassDiagram.Class>> Rank =>=>=> RelationalSchema.Table>> rank;
ClassDiagram.Class>> Document =>=>=> RelationalSchema.Table>> document;
ClassDiagram.Class>> Departement =>=>=> RelationalSchema.Table>> departement;
ClassDiagram.Class>> Task =>=>=> RelationalSchema.Table>> task;
ClassDiagram.Class>> Matter =>=>=> RelationalSchema.Table>> matter;
ClassDiagram.Class>> AppUser =>=>=> RelationalSchema.Table>> appuser;
ClassDiagram.Class>> Notification =>=>=> RelationalSchema.Table>> notification;
ClassDiagram.Attribut>> Favori.id:Long =>=>=> RelationalSchema.Column>> favori.id PRIMARY KEY;
ClassDiagram.Attribut>> Favori.documentid:Long =>=>=> RelationalSchema.Column>> favori.documentid;
ClassDiagram.Attribut>> Favori.userid:Long =>=>=> RelationalSchema.Column>> favori.userid;
ClassDiagram.Attribut>> Favori.createdat:Date =>=>=> RelationalSchema.Column>> favori.createdat;
ClassDiagram.Attribut>> Favori.updat:Date =>=>=> RelationalSchema.Column>> favori.updat;
ClassDiagram.Attribut>> Course.id:Long =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.coursename:String =>=>=> RelationalSchema.Column>> course.coursename;
ClassDiagram.Attribut>> Course.createdat:Date =>=>=> RelationalSchema.Column>> course.createdat;
ClassDiagram.Attribut>> Course.updat:Date =>=>=> RelationalSchema.Column>> course.updat;
ClassDiagram.Attribut>> Comment.id:Long =>=>=> RelationalSchema.Column>> comment.id PRIMARY KEY;
ClassDiagram.Attribut>> Comment.content:String =>=>=> RelationalSchema.Column>> comment.content;
ClassDiagram.Attribut>> Comment.commentvalidated:boolean =>=>=> RelationalSchema.Column>> comment.commentvalidated;
ClassDiagram.Attribut>> Comment.createdat:Date =>=>=> RelationalSchema.Column>> comment.createdat;
ClassDiagram.Attribut>> Comment.updat:Date =>=>=> RelationalSchema.Column>> comment.updat;
ClassDiagram.Attribut>> Basket.id:Long =>=>=> RelationalSchema.Column>> basket.id PRIMARY KEY;
ClassDiagram.Attribut>> Basket.createdat:Date =>=>=> RelationalSchema.Column>> basket.createdat;
ClassDiagram.Attribut>> Basket.updat:Date =>=>=> RelationalSchema.Column>> basket.updat;
ClassDiagram.Attribut>> Message.id:Long =>=>=> RelationalSchema.Column>> message.id PRIMARY KEY;
ClassDiagram.Attribut>> Message.email:String =>=>=> RelationalSchema.Column>> message.email;
ClassDiagram.Attribut>> Message.content:String =>=>=> RelationalSchema.Column>> message.content;
ClassDiagram.Attribut>> Message.telnumber:String =>=>=> RelationalSchema.Column>> message.telnumber;
ClassDiagram.Attribut>> Message.firstname:String =>=>=> RelationalSchema.Column>> message.firstname;
ClassDiagram.Attribut>> Message.lastname:String =>=>=> RelationalSchema.Column>> message.lastname;
ClassDiagram.Attribut>> Message.createdat:Date =>=>=> RelationalSchema.Column>> message.createdat;
ClassDiagram.Attribut>> Message.updat:Date =>=>=> RelationalSchema.Column>> message.updat;
ClassDiagram.Attribut>> AppRole.id:Long =>=>=> RelationalSchema.Column>> approle.id PRIMARY KEY;
ClassDiagram.Attribut>> AppRole.rolename:String =>=>=> RelationalSchema.Column>> approle.rolename;
ClassDiagram.Attribut>> University.id:Long =>=>=> RelationalSchema.Column>> university.id PRIMARY KEY;
ClassDiagram.Attribut>> University.universityname:String =>=>=> RelationalSchema.Column>> university.universityname;
ClassDiagram.Attribut>> University.universityacronyme:String =>=>=> RelationalSchema.Column>> university.universityacronyme;
ClassDiagram.Attribut>> University.countryname:String =>=>=> RelationalSchema.Column>> university.countryname;
ClassDiagram.Attribut>> University.createdat:Date =>=>=> RelationalSchema.Column>> university.createdat;
ClassDiagram.Attribut>> University.updat:Date =>=>=> RelationalSchema.Column>> university.updat;
ClassDiagram.Attribut>> Faq.id:Long =>=>=> RelationalSchema.Column>> faq.id PRIMARY KEY;
ClassDiagram.Attribut>> Faq.question:String =>=>=> RelationalSchema.Column>> faq.question;
ClassDiagram.Attribut>> Faq.faqvalidated:String =>=>=> RelationalSchema.Column>> faq.faqvalidated;
ClassDiagram.Attribut>> Faq.createdat:Date =>=>=> RelationalSchema.Column>> faq.createdat;
ClassDiagram.Attribut>> Faq.updat:Date =>=>=> RelationalSchema.Column>> faq.updat;
ClassDiagram.Attribut>> Rank.id:Long =>=>=> RelationalSchema.Column>> rank.id PRIMARY KEY;
ClassDiagram.Attribut>> Rank.rankvalue:Long =>=>=> RelationalSchema.Column>> rank.rankvalue;
ClassDiagram.Attribut>> Rank.documentid:Long =>=>=> RelationalSchema.Column>> rank.documentid;
ClassDiagram.Attribut>> Rank.userid:Long =>=>=> RelationalSchema.Column>> rank.userid;
ClassDiagram.Attribut>> Rank.createdat:Date =>=>=> RelationalSchema.Column>> rank.createdat;
ClassDiagram.Attribut>> Rank.updat:Date =>=>=> RelationalSchema.Column>> rank.updat;
ClassDiagram.Attribut>> Document.id:Long =>=>=> RelationalSchema.Column>> document.id PRIMARY KEY;
ClassDiagram.Attribut>> Document.documentname:String =>=>=> RelationalSchema.Column>> document.documentname;
ClassDiagram.Attribut>> Document.documentmatter:String =>=>=> RelationalSchema.Column>> document.documentmatter;
ClassDiagram.Attribut>> Document.documentvalidated:String =>=>=> RelationalSchema.Column>> document.documentvalidated;
ClassDiagram.Attribut>> Document.documentlevel:String =>=>=> RelationalSchema.Column>> document.documentlevel;
ClassDiagram.Attribut>> Document.documentyear:String =>=>=> RelationalSchema.Column>> document.documentyear;
ClassDiagram.Attribut>> Document.documenttheme:String =>=>=> RelationalSchema.Column>> document.documenttheme;
ClassDiagram.Attribut>> Document.documenttype:String =>=>=> RelationalSchema.Column>> document.documenttype;
ClassDiagram.Attribut>> Document.documentsemestre:Long =>=>=> RelationalSchema.Column>> document.documentsemestre;
ClassDiagram.Attribut>> Document.documentcountry:String =>=>=> RelationalSchema.Column>> document.documentcountry;
ClassDiagram.Attribut>> Document.documentuniversity:String =>=>=> RelationalSchema.Column>> document.documentuniversity;
ClassDiagram.Attribut>> Document.documentdepartment:String =>=>=> RelationalSchema.Column>> document.documentdepartment;
ClassDiagram.Attribut>> Document.documentfileenonce:String =>=>=> RelationalSchema.Column>> document.documentfileenonce;
ClassDiagram.Attribut>> Document.documentfilecorrige:String =>=>=> RelationalSchema.Column>> document.documentfilecorrige;
ClassDiagram.Attribut>> Document.enoncedata:byte =>=>=> RelationalSchema.Column>> document.enoncedata;
ClassDiagram.Attribut>> Document.corrigedata:byte =>=>=> RelationalSchema.Column>> document.corrigedata;
ClassDiagram.Attribut>> Document.createdat:Date =>=>=> RelationalSchema.Column>> document.createdat;
ClassDiagram.Attribut>> Document.updat:Date =>=>=> RelationalSchema.Column>> document.updat;
ClassDiagram.Attribut>> Document.//documentbestouser//@manytoone//@joincolumn(name:Long =>=>=> RelationalSchema.Column>> document.//documentbestouser//@manytoone//@joincolumn(name;
ClassDiagram.Attribut>> Departement.id:Long =>=>=> RelationalSchema.Column>> departement.id PRIMARY KEY;
ClassDiagram.Attribut>> Departement.departementname:String =>=>=> RelationalSchema.Column>> departement.departementname;
ClassDiagram.Attribut>> Departement.createdat:Date =>=>=> RelationalSchema.Column>> departement.createdat;
ClassDiagram.Attribut>> Departement.updat:Date =>=>=> RelationalSchema.Column>> departement.updat;
ClassDiagram.Attribut>> Task.id:int =>=>=> RelationalSchema.Column>> task.id PRIMARY KEY;
ClassDiagram.Attribut>> Task.taskname:String =>=>=> RelationalSchema.Column>> task.taskname;
ClassDiagram.Attribut>> Matter.id:Long =>=>=> RelationalSchema.Column>> matter.id PRIMARY KEY;
ClassDiagram.Attribut>> Matter.mattername:String =>=>=> RelationalSchema.Column>> matter.mattername;
ClassDiagram.Attribut>> Matter.createdat:Date =>=>=> RelationalSchema.Column>> matter.createdat;
ClassDiagram.Attribut>> Matter.updat:Date =>=>=> RelationalSchema.Column>> matter.updat;
ClassDiagram.Attribut>> AppUser.id:Long =>=>=> RelationalSchema.Column>> appuser.id PRIMARY KEY;
ClassDiagram.Attribut>> AppUser.firstname:String =>=>=> RelationalSchema.Column>> appuser.firstname;
ClassDiagram.Attribut>> AppUser.lastname:String =>=>=> RelationalSchema.Column>> appuser.lastname;
ClassDiagram.Attribut>> AppUser.birth:Date =>=>=> RelationalSchema.Column>> appuser.birth;
ClassDiagram.Attribut>> AppUser.email:String =>=>=> RelationalSchema.Column>> appuser.email;
ClassDiagram.Attribut>> AppUser.password:String =>=>=> RelationalSchema.Column>> appuser.password;
ClassDiagram.Attribut>> AppUser.confirmpassword:String =>=>=> RelationalSchema.Column>> appuser.confirmpassword;
ClassDiagram.Attribut>> AppUser.telnumber:String =>=>=> RelationalSchema.Column>> appuser.telnumber;
ClassDiagram.Attribut>> AppUser.cin:String =>=>=> RelationalSchema.Column>> appuser.cin;
ClassDiagram.Attribut>> AppUser.city:String =>=>=> RelationalSchema.Column>> appuser.city;
ClassDiagram.Attribut>> AppUser.avatar:byte =>=>=> RelationalSchema.Column>> appuser.avatar;
ClassDiagram.Attribut>> AppUser.fillename:String =>=>=> RelationalSchema.Column>> appuser.fillename;
ClassDiagram.Attribut>> AppUser.//@notblankuserlevel:String =>=>=> RelationalSchema.Column>> appuser.//@notblankuserlevel;
ClassDiagram.Attribut>> AppUser.//@notblankusersection:String =>=>=> RelationalSchema.Column>> appuser.//@notblankusersection;
ClassDiagram.Attribut>> AppUser.//@notblankuserclass:String =>=>=> RelationalSchema.Column>> appuser.//@notblankuserclass;
ClassDiagram.Attribut>> AppUser.createdat:Date =>=>=> RelationalSchema.Column>> appuser.createdat;
ClassDiagram.Attribut>> AppUser.updat:Date =>=>=> RelationalSchema.Column>> appuser.updat;
ClassDiagram.Attribut>> AppUser.userrole:String =>=>=> RelationalSchema.Column>> appuser.userrole;
ClassDiagram.Attribut>> AppUser.usercountry:String =>=>=> RelationalSchema.Column>> appuser.usercountry;
ClassDiagram.Attribut>> AppUser.useruniversity:String =>=>=> RelationalSchema.Column>> appuser.useruniversity;
ClassDiagram.Attribut>> Notification.id:Long =>=>=> RelationalSchema.Column>> notification.id PRIMARY KEY;
ClassDiagram.Attribut>> Notification.content:String =>=>=> RelationalSchema.Column>> notification.content;
ClassDiagram.Attribut>> Notification.userid:Long =>=>=> RelationalSchema.Column>> notification.userid;
ClassDiagram.Attribut>> Notification.documentid:Long =>=>=> RelationalSchema.Column>> notification.documentid;
ClassDiagram.Attribut>> Notification.createdat:Date =>=>=> RelationalSchema.Column>> notification.createdat;
ClassDiagram.Attribut>> Notification.updat:Date =>=>=> RelationalSchema.Column>> notification.updat;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>document represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>appuser represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>Basket  to ClassDiagram.Class>>appuser represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>Basket  to ClassDiagram.Class>>document represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Faq  to ClassDiagram.Class>>appuser represented by ClassDiagram.Atrribute>>user;
One-To-Many relationship from ClassDiagram.Class>>Document  to ClassDiagram.Class>>List<Comment>;
One-To-Many relationship from ClassDiagram.Class>>Document  to ClassDiagram.Class>>List<Basket>;
One-To-Many relationship from ClassDiagram.Class>>AppUser  to ClassDiagram.Class>>List<Comment>;
One-To-Many relationship from ClassDiagram.Class>>AppUser  to ClassDiagram.Class>>List<Document>;
One-To-Many relationship from ClassDiagram.Class>>AppUser  to ClassDiagram.Class>>List<Basket>;
One-To-Many relationship from ClassDiagram.Class>>AppUser  to ClassDiagram.Class>>List<Faq>;
