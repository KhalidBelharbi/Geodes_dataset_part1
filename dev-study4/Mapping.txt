ClassDiagram.Class>> Parent =>=>=> RelationalSchema.Table>> parent;
ClassDiagram.Class>> Member =>=>=> RelationalSchema.Table>> member;
ClassDiagram.Class>> Album =>=>=> RelationalSchema.Table>> album;
ClassDiagram.Class>> Movie =>=>=> RelationalSchema.Table>> movie;
ClassDiagram.Class>> Team =>=>=> RelationalSchema.Table>> team;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Child =>=>=> RelationalSchema.Table>> child;
ClassDiagram.Attribut>> Parent.id:Long =>=>=> RelationalSchema.Column>> parent.id PRIMARY KEY;
ClassDiagram.Attribut>> Parent.name:String =>=>=> RelationalSchema.Column>> parent.name;
ClassDiagram.Attribut>> Member.id:Long =>=>=> RelationalSchema.Column>> member.id PRIMARY KEY;
ClassDiagram.Attribut>> Member.username:String =>=>=> RelationalSchema.Column>> member.username;
ClassDiagram.Attribut>> Album.artist:String =>=>=> RelationalSchema.Column>> album.artist;
ClassDiagram.Attribut>> Movie.director:String =>=>=> RelationalSchema.Column>> movie.director;
ClassDiagram.Attribut>> Movie.actor:String =>=>=> RelationalSchema.Column>> movie.actor;
ClassDiagram.Attribut>> Team.id:Long =>=>=> RelationalSchema.Column>> team.id PRIMARY KEY;
ClassDiagram.Attribut>> Team.name:String =>=>=> RelationalSchema.Column>> team.name;
ClassDiagram.Attribut>> Book.author:String =>=>=> RelationalSchema.Column>> book.author;
ClassDiagram.Attribut>> Book.isbn:String =>=>=> RelationalSchema.Column>> book.isbn;
ClassDiagram.Attribut>> Item.id:Long =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.name:String =>=>=> RelationalSchema.Column>> item.name;
ClassDiagram.Attribut>> Item.price:int =>=>=> RelationalSchema.Column>> item.price;
ClassDiagram.Attribut>> Child.id:Long =>=>=> RelationalSchema.Column>> child.id PRIMARY KEY;
ClassDiagram.Attribut>> Child.name:String =>=>=> RelationalSchema.Column>> child.name;
One-To-Many relationship from ClassDiagram.Class>>Parent  to ClassDiagram.Class>>List<Child>;
Many-To-One relationship from ClassDiagram.Class>>Member  to ClassDiagram.Class>>Team represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Team  to ClassDiagram.Class>>List<Member>;
Many-To-One relationship from ClassDiagram.Class>>Child  to ClassDiagram.Class>>Parent represented by ClassDiagram.Atrribute>>GeneratedName;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Item  ;
