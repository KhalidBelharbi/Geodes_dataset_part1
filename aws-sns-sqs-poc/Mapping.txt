ClassDiagram.Class>> OrderItem =>=>=> RelationalSchema.Table>> orderitem;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Attribut>> OrderItem.serialversionuid:long =>=>=> RelationalSchema.Column>> orderitem.serialversionuid;
ClassDiagram.Attribut>> OrderItem.orderitemid:UUID =>=>=> RelationalSchema.Column>> orderitem.orderitemid PRIMARY KEY;
ClassDiagram.Attribut>> OrderItem.sku:String =>=>=> RelationalSchema.Column>> orderitem.sku;
ClassDiagram.Attribut>> OrderItem.amount:Integer =>=>=> RelationalSchema.Column>> orderitem.amount;
ClassDiagram.Attribut>> OrderItem.branchid:String =>=>=> RelationalSchema.Column>> orderitem.branchid;
ClassDiagram.Attribut>> OrderItem.cost:Double =>=>=> RelationalSchema.Column>> orderitem.cost;
ClassDiagram.Attribut>> OrderItem.item:Status =>=>=> RelationalSchema.Column>> orderitem.item;
ClassDiagram.Attribut>> Order.serialversionuid:long =>=>=> RelationalSchema.Column>> order.serialversionuid;
ClassDiagram.Attribut>> Order.orderid:String =>=>=> RelationalSchema.Column>> order.orderid PRIMARY KEY;
ClassDiagram.Attribut>> Order.customerid:String =>=>=> RelationalSchema.Column>> order.customerid;
ClassDiagram.Attribut>> Order.walletid:String =>=>=> RelationalSchema.Column>> order.walletid;
ClassDiagram.Attribut>> Order.GeneratedName:Status =>=>=> RelationalSchema.Column>> order.GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>List<OrderItem>;
