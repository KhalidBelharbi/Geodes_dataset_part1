<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="org.hibernate.search.spi" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="org.hibernate.search.bridge.spi" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nopackagetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alternatedocument" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="missingspatialpoi" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spatialcontainedintest" >
      <xs:complexContent>
       <xs:extension base="searchinitializationtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="spatialsearchsortbydistanceandpagingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="expected_results_count" type="xs:long" />
          <xs:element name="center_lat" type="xs:double" />
          <xs:element name="center_lon" type="xs:double" />
          <xs:element name="search_distance" type="xs:double" />
          <xs:element name="entitiesidsset" type="xs:anyType" />
          <xs:element name="idx" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="poi" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nongeopoi" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="benchwithgeonames" >
      <xs:sequence>
        <xs:element name="hibernateconfigurationfile" type="xs:string" />
        <xs:element name="geonamesdatafile" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spatialindexingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="homelatitude" type="xs:double" />
        <xs:element name="homelongitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getteruser" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="homelatitude" type="xs:double" />
        <xs:element name="homelongitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="restaurant" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="position" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userex" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="homelatitude" type="xs:double" />
        <xs:element name="homelongitude" type="xs:double" />
        <xs:element name="worklatitude" type="xs:double" />
        <xs:element name="worklongitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userrange" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="homelatitude" type="xs:double" />
        <xs:element name="homelongitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rangeevent" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spatialhashhelpertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="position" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pointtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rangehotel" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doubleindexedpoi" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hotel" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rectangletest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="can" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummysimilarity" >
      <xs:complexContent>
       <xs:extension base="classicsimilarity">
         <xs:sequence>
          <xs:element name="const" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="similaritytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dummysimilarity2" >
      <xs:complexContent>
       <xs:extension base="classicsimilarity">
         <xs:sequence>
          <xs:element name="const" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="personpk" nillable="true" minOccurs="0" />
        <xs:element name="favoritecolor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitidtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="programmaticembeddedittest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedidtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personpkbridge" >
      <xs:sequence>
        <xs:element name="first_name_suffix" type="xs:string" />
        <xs:element name="last_name_suffix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plainperson" >
      <xs:sequence>
        <xs:element name="id" type="personpk" nillable="true" minOccurs="0" />
        <xs:element name="favoritecolor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="studententity" >
      <xs:sequence>
        <xs:element name="regid" type="registrationid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="personpk" nillable="true" minOccurs="0" />
        <xs:element name="favoritecolor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmaticembeddeditwithmetadataprovidingbridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedidwithmetadataprovidingbridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plainperson" >
      <xs:sequence>
        <xs:element name="id" type="personpk" nillable="true" minOccurs="0" />
        <xs:element name="favoritecolor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personpkmetadataproviderbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unorderedidscantest" >
      <xs:complexContent>
       <xs:extension base="javareflectionmanager">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="registrationid" >
      <xs:sequence>
        <xs:element name="studentid" type="xs:long" />
        <xs:element name="department" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="studentfieldbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedidwithdocumentidtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositedidmassindexingtest" >
      <xs:sequence>
        <xs:element name="ftsbuilder" type="fulltextsessionbuilder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personcustomdocumentid" >
      <xs:sequence>
        <xs:element name="personnames" type="personpk" nillable="true" minOccurs="0" />
        <xs:element name="favoritecolor" type="xs:string" />
        <xs:element name="securitynumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitidtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="article" >
      <xs:sequence>
        <xs:element name="articleid" type="xs:long" />
        <xs:element name="documentid" type="xs:long" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statisticstest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="directoryprovidername" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="states" type="state" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentofbirthevent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="person" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="event" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recursivegraphtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parentofbirthevents" type="parentofbirthevent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="birth" type="event" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parentsof" type="parentofbirthevent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="children" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyitemfieldbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="root" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="leaf" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldbridgeonlazyfieldreindextest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="leaf" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="lazyitem" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractproduct" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="features" type="productfeature" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedobjectidinclusiontest" >
      <xs:sequence>
        <xs:element name="metadataprovider" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statecandidate" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="state" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doubleinsertembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="lastupdon" type="xs:dateTime" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="phonenumbers" type="phone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="notes" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="lastupdon" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="contact" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="address1" type="xs:string" />
        <xs:element name="address2" type="xs:string" />
        <xs:element name="town" type="xs:string" />
        <xs:element name="county" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="postcode" type="xs:string" />
        <xs:element name="active" type="xs:anyType" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="lastupdon" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="contact" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="businesscontact" >
      <xs:complexContent>
       <xs:extension base="contact">
         <xs:sequence>
          <xs:element name="businessname" type="xs:string" />
          <xs:element name="url" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personalcontact" >
      <xs:complexContent>
       <xs:extension base="contact">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="firstname" type="xs:string" />
          <xs:element name="surname" type="xs:string" />
          <xs:element name="ofbirth" type="xs:dateTime" />
          <xs:element name="notifybirthday" type="xs:anyType" />
          <xs:element name="myfacesurl" type="xs:string" />
          <xs:element name="remindercount" type="xs:long" />
          <xs:element name="reset" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="attributes" type="attribute" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="helpitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="tags" type="helpitemtag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity2fordoc0" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="uid" type="xs:long" />
        <xs:element name="optlock" type="xs:long" />
        <xs:element name="entity1" type="entity1fordoc0" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1forunindexed" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="uid" type="xs:long" />
        <xs:element name="optlock" type="xs:long" />
        <xs:element name="entities2" type="entity2forunindexed" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="helpitemtag" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="helpitem" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="tag" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity2forunindexed" >
      <xs:sequence>
        <xs:element name="*/serialversionuid" type="xs:long" />
        <xs:element name="/***identifiantunique*/uid" type="xs:long" />
        <xs:element name="/***controledeversionoptimiste*/optlock" type="xs:long" />
        <xs:element name="entity1" type="entity1forunindexed" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1fordoc0" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="uid" type="xs:long" />
        <xs:element name="optlock" type="xs:long" />
        <xs:element name="entities2" type="entity2fordoc0" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nestedcontainedintest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazym2ocontainedintest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tag" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="helpitems" type="helpitemtag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="placesvisited" type="place" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributevalue" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="attribute" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="places" type="place" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attribute" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="values" type="attributevalue" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nestedembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="place" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="visitedby" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplechildentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="simpleparententity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="son" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="dad" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productshootingbrief" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="articles" type="productarticle" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="models" type="productmodel" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="containedinreindexpropagationtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="containedinwithoutindexedembeddedreindexpropagationtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productarticle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="colorcode" type="xs:string" />
        <xs:element name="//theinformationmodel" type="productmodel" nillable="true" minOccurs="0" />
        <xs:element name="shootingbrief" type="productshootingbrief" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productreferencecode" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="model" type="productmodel" nillable="true" minOccurs="0" />
        <xs:element name="rawvalue" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="grandpa" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dad" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="grandpa" nillable="true" minOccurs="0" />
        <xs:element name="sons" type="son" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleparententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="child" type="simplechildentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productmodel" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="mainreferencecode" type="productreferencecode" nillable="true" minOccurs="0" />
        <xs:element name="additionalreferencecodes" type="productreferencecode" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="articles" type="productarticle" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="shootingbrief" type="productshootingbrief" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updateindexedembeddedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="ordernumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hero" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="secretidentity" type="xs:string" />
        <xs:element name="GeneratedName" type="villain" nillable="true" minOccurs="0" />
        <xs:element name="sortable" type="villain" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="villain" >
      <xs:sequence>
        <xs:element name="id_sort" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="hero" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedsortableidfieldtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="lex" type="xs:string" />
          <xs:element name="darkseid" type="xs:string" />
          <xs:element name="clark" type="xs:string" />
          <xs:element name="thrown" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="woman" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="man" >
      <xs:sequence>
        <xs:element name="no_pet" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="pet" nillable="true" minOccurs="0" />
        <xs:element name="partner" type="woman" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="puppy" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pet" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="puppies" type="puppy" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="tricks" type="trick" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trick" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="reward" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultpathswithnestedindexedembeddedtest" >
      <xs:sequence>
        <xs:element name="sfholder" type="xs:anyType" />
        <xs:element name="helper" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="a" type="entitya" nillable="true" minOccurs="0" />
        <xs:element name="indexed" type="entityc" nillable="true" minOccurs="0" />
        <xs:element name="skipped" type="entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="b2" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="skipped" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplepathcaseembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="b2" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="skipped" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="a" type="entitya" nillable="true" minOccurs="0" />
        <xs:element name="indexed" type="entityc" nillable="true" minOccurs="0" />
        <xs:element name="skipped" type="entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="prefixedembeddedcaseinpathtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="b2" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="skipped" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="insidethreshold" type="xs:string" />
        <xs:element name="a" type="entitya" nillable="true" minOccurs="0" />
        <xs:element name="indexed" type="entityc" nillable="true" minOccurs="0" />
        <xs:element name="skipped" type="entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathrespectdepthcaseembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="renamedfieldpathcaseembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="b2" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="skipped" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="a" type="entitya" nillable="true" minOccurs="0" />
        <xs:element name="indexed" type="entityc" nillable="true" minOccurs="0" />
        <xs:element name="skipped" type="entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathembeddeddepthtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parents" type="human" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="child" type="human" nillable="true" minOccurs="0" />
        <xs:element name="surname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="b2" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="anotherfield" type="xs:string" />
        <xs:element name="skipped" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="a" type="entitya" nillable="true" minOccurs="0" />
        <xs:element name="indexed" type="entityc" nillable="true" minOccurs="0" />
        <xs:element name="skipped" type="entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplepathcaseembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="b2" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="skipped" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="a" type="entitya" nillable="true" minOccurs="0" />
        <xs:element name="indexed" type="entityc" nillable="true" minOccurs="0" />
        <xs:element name="skipped" type="entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultdepthpathcaseembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="referencesindexedembeddeda" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
        <xs:element name="2" type="b" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathnotindexedcase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="e" type="referencesc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidprefixcase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldrenamedembeddedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="container" type="fieldrenamedcontainerentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="depthmatchespathdepthcase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="e" type="referencesindexedembeddeda" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidembeddedwithoutpathscase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="embedded" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deeppathsimpletypecase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embedded" >
      <xs:sequence>
        <xs:element name="e1" type="xs:string" />
        <xs:element name="e2" type="xs:anyType" />
        <xs:element name="e3" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidembeddedpathcase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="e" type="invalidembeddedwithoutpathscase" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deeppathwithleadingprefixcase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
        <xs:element name="2" type="a" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="c" nillable="true" minOccurs="0" />
        <xs:element name="skipped" type="c" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testinvalidpaths" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="referencesc" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//intentionallynot@indexedembedded" type="c" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidembeddednonleafcase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="e" type="invalidembeddedwithoutpathscase" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidnonleafusecase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="depthexceedspathtestcase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="e" type="referencesindexedembeddeda" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidshallowpathcase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
        <xs:element name="2" type="b" nillable="true" minOccurs="0" />
        <xs:element name="indexed" type="xs:string" />
        <xs:element name="notindexed" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldrenamedcontainerentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="embedded" type="fieldrenamedembeddedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="a" type="entitya" nillable="true" minOccurs="0" />
        <xs:element name="indexed" type="entityc" nillable="true" minOccurs="0" />
        <xs:element name="skipped" type="entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="b2" type="entityb" nillable="true" minOccurs="0" />
        <xs:element name="document" type="documententity" nillable="true" minOccurs="0" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="skipped" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="b" type="entityb" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idincludedinpathcaseembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="" type="entitya" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="documententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="documentid" type="xs:string" />
        <xs:element name="c" type="entityc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedentitynotindexedtest" >
      <xs:sequence>
        <xs:element name="metadataprovider" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="authors" type="author" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="orders" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="containedinentityinheritancetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="polymorphicassociationtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="init_name" type="xs:string" />
          <xs:element name="edit_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="level1" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="level2child" type="derivedlevel2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="level3" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="level2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedlevel2" >
      <xs:complexContent>
       <xs:extension base="level2">
         <xs:sequence>
          <xs:element name="parent" type="level1" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concreteentity" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="content" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchafteruninitializedproxyentityloadingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="entityid" type="xs:anyType" />
          <xs:element name="entityreferenceid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyabstractentityreference" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="entity" type="abstractentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="level2" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="child" type="level3" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="ownedby" type="person" nillable="true" minOccurs="0" />
        <xs:element name="residents" type="resident" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="towers" type="tower" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyindirectcollectionbridgereindextest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="leaf" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="collectionitems" type="collectionitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedentity" >
      <xs:sequence>
        <xs:element name="field1_field_name" type="xs:string" />
        <xs:element name="field2_field_name" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="itemswithfieldannotation" type="collectionitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="itemswithfieldsannotation" type="collectionitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="keywords" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="root" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="leaf" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionofstringsfieldbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionitemfieldbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldoncollectionreindextest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="candidate" type="statecandidate" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonindexedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personwithbrokensocialsecuritynumber" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parents" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="children" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workdoneonentitiestest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="documentidcontainedintest" >
      <xs:complexContent>
       <xs:extension base="recursivegraphtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recursivegraphtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="integratorresource" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recursivegraphincludepathstest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="brokenmammal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="brokenmammal" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="socialperson" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="friends" type="socialperson" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="friendsreverse" type="socialperson" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workingperson" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parents" type="workingperson" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="children" type="workingperson" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="employees" type="workingperson" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="employers" type="workingperson" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:complexContent>
       <xs:extension base="abstractproduct">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resident" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tower" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productfeature" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="product" type="abstractproduct" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="termvectortest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timeouttest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="fts" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="allseikoclocks" type="xs:anyType" />
          <xs:element name="allswatchclocks" type="xs:anyType" />
          <xs:element name="nomatch" type="xs:anyType" />
          <xs:element name="matchall" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpatimeouttest" >
      <xs:complexContent>
       <xs:extension base="jpatestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clock" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="brand" type="xs:string" />
        <xs:element name="durability" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="truck" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="horsepower" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedcollectionfacetingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="voltaire" type="author" nillable="true" minOccurs="0" />
          <xs:element name="hugo" type="author" nillable="true" minOccurs="0" />
          <xs:element name="moliere" type="author" nillable="true" minOccurs="0" />
          <xs:element name="proust" type="author" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractfacettest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="colors" type="xs:string" />
          <xs:element name="makes" type="xs:string" />
          <xs:element name="ccs" type="xs:long" />
          <xs:element name="albums" type="xs:string" />
          <xs:element name="albumprices" type="xs:long" />
          <xs:element name="releasedates" type="xs:string" />
          <xs:element name="fruits" type="xs:string" />
          <xs:element name="fruitprices" type="xs:double" />
          <xs:element name="horsepowers" type="xs:anyType" />
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="tx" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="noqueryresultsfacetingtest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
          <xs:element name="facetname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ingredient" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="numberfacetingtest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="facetfilteringtest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recipe" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ingredients" type="ingredient" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="companyname" type="xs:string" />
        <xs:element name="companyfacilities" type="companyfacility" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplefacetingtest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
          <xs:element name="facetname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="collating_analyzer_name" type="xs:string" />
        <xs:element name="cubic_capacity_" type="xs:string" />
        <xs:element name="//thosefacetnamesmustbedifferentfromthesourcefieldname,fortestingpurposescubic_capacity__facet__encoding" type="xs:string" />
        <xs:element name="cubic_capacity__facet_numeric_encoding" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="color" type="xs:string" />
        <xs:element name="make" type="xs:string" />
        <xs:element name="cubiccapacity" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringfacetingtest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rangefacetingtest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
          <xs:element name="indexfieldname" type="xs:string" />
          <xs:element name="pricerange" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullvaluesfacetingtest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="facetunknownfieldfailuretest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="companyfacility" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="GeneratedName" type="company" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonefacetingtest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
          <xs:element name="indexfieldname" type="xs:string" />
          <xs:element name="facetname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cd" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:long" />
        <xs:element name="releaseyear" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webshoptest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="authors" type="author" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="edgecasefacettest" >
      <xs:complexContent>
       <xs:extension base="abstractfacettest">
         <xs:sequence>
          <xs:element name="facetname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multivaluedfacetingtest" >
      <xs:sequence>
        <xs:element name="sfholder" type="xs:anyType" />
        <xs:element name="helper" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fruit" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="facetindexingfailuretest" >
      <xs:sequence>
        <xs:element name="factoryholder" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectloadingpublicfieldtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="fieldfoo" type="xs:anyType" />
          <xs:element name="fieldbar" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="body" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="authors" type="author" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="main" type="author" nillable="true" minOccurs="0" />
        <xs:element name="publication" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexnulllucenedocumentcontenttest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="value" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="fallback" type="xs:string" />
        <xs:element name="dummy" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummystringbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmaticindexandquerynulltest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexandquerynulltest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="programmaticconfiguredvalue" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clock" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brand" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectiontomapresulttransformer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spouse" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentity" >
      <xs:sequence>
        <xs:element name="entityid" type="xs:long" />
        <xs:element name="documentid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectloaderhelpertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="byteman" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="communitycollege" >
      <xs:complexContent>
       <xs:extension base="college">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primaryschool" >
      <xs:complexContent>
       <xs:extension base="school">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="school" >
      <xs:complexContent>
       <xs:extension base="educationalinstitution">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="college" >
      <xs:complexContent>
       <xs:extension base="educationalinstitution">
         <xs:sequence>
          <xs:element name="identifier" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectloadingcrosshierarchytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="university" >
      <xs:complexContent>
       <xs:extension base="educationalinstitution">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="educationalinstitution" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="highschool" >
      <xs:complexContent>
       <xs:extension base="school">
         <xs:sequence>
          <xs:element name="identifier" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dvd" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explanationtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="electricalproperties" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="content" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productarticle" >
      <xs:sequence>
        <xs:element name="articleid" type="xs:anyType" />
        <xs:element name="header" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="creation" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="dept" type="xs:string" />
        <xs:element name="hire" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lucenequerytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryvalidationtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectionquerytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scrollableresultstest" >
      <xs:sequence>
        <xs:element name="builder" type="fulltextsessionbuilder" nillable="true" minOccurs="0" />
        <xs:element name="sess" type="fulltextsession" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="countercallsprojectiontomapresulttransformer" >
      <xs:complexContent>
       <xs:extension base="projectiontomapresulttransformer">
         <xs:sequence>
          <xs:element name="transformtuplecounter" type="xs:long" />
          <xs:element name="transformlistcounter" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="custombooststrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedfieldboosttest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subtitle" >
      <xs:sequence>
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="title" >
      <xs:sequence>
        <xs:element name="value" type="xs:string" />
        <xs:element name="GeneratedName" type="subtitle" nillable="true" minOccurs="0" />
        <xs:element name="//rankoriginaltitlehitsabithigherthanthesubtitle,butlowerthanthemaintitle(seeclass)" type="localizedtitle" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localizedtitle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="magazine" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="title" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldboosttest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="library" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="author" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customfieldbooststrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boostedgetdescriptionlibrary" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="author" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boosteddescriptionlibrary" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="author" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicboostingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicboosteddescriptionlibrary" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dynscore" type="xs:double" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boostedfielddescriptionlibrary" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="author" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="calendarday" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="day" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="husband" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="GeneratedName" type="spouse" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectiontodelimstringresulttransformer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="authors" type="author" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="combicar" >
      <xs:complexContent>
       <xs:extension base="abstractcar">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bike" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="kurztext" type="xs:string" />
        <xs:element name="hascolor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcar" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="kurztext" type="xs:string" />
        <xs:element name="hascolor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedcriteriatest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sportcar" >
      <xs:complexContent>
       <xs:extension base="abstractcar">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsizeoncriteriatest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tractor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="kurztext" type="xs:string" />
        <xs:element name="hascolor" type="xs:anyType" />
        <xs:element name="owner" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="territory" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortonfieldsfromcustombridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortwithindexuninvertingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortusingentitymanagertest" >
      <xs:complexContent>
       <xs:extension base="jpatestcase">
         <xs:sequence>
          <xs:element name="encoding_time_zone" type="xs:anyType" />
          <xs:element name="em" type="fulltextentitymanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sorttest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explorer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="exploredcountries" type="xs:long" />
        <xs:element name="nameparts" type="xs:anyType" />
        <xs:element name="/*	*don'tstoretheidin"favorite"directlyasthiscouldconflict	*withthewiththeelasticsearchbackend	*/@field(name" type="territory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thatcher" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//intentionallywithoutsortablefield//@sortablefield(forfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plumber" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//intentionallywithoutsortablefield//@sortablefield(forfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bricklayer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballteam" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="debtinmillions" type="xs:double" />
        <xs:element name="nrtitles" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryunindexedentitytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiclassesqueryloadertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="lucene" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryloadertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alternatebook" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="summary" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kernel" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="codename" type="xs:string" />
        <xs:element name="product" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaobjectinitializerandhierarchyinheritancetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="byteman" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="strictkernel" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="codename" type="xs:string" />
        <xs:element name="product" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strictsecondlcandpclookuptest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondlcandpclookuptest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectlookupanddatabaseretrievalconfigurationtest" >
      <xs:sequence>
        <xs:element name="byteman" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="luceneprojectionquerytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compressiontest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="htmlboldfieldbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="largedocument" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicnrtfunctionalitytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fsbasednrtfunctionalitytest" >
      <xs:complexContent>
       <xs:extension base="basicnrtfunctionalitytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="suspect" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="physicaldescription" type="xs:string" />
        <xs:element name="suspectcharge" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detective" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="physicaldescription" type="xs:string" />
        <xs:element name="badge" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sharingbufferindexprovidertest" >
      <xs:complexContent>
       <xs:extension base="searchtask">
         <xs:sequence>
          <xs:element name="readerprovider" type="extendedsharingbufferreaderprovider" nillable="true" minOccurs="0" />
          <xs:element name="startsignal" type="xs:anyType" />
          <xs:element name="searchtask" type="xs:anyType" />
          <xs:element name="changetask" type="xs:anyType" />
          <xs:element name="directoryswitchtask" type="xs:anyType" />
          <xs:element name="countdonesearches" type="xs:anyType" />
          <xs:element name="countdoneindexmods" type="xs:anyType" />
          <xs:element name="searches_num" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extendedsharingbufferreaderprovider" >
      <xs:complexContent>
       <xs:extension base="sharingbufferreaderprovider">
         <xs:sequence>
          <xs:element name="num_directory_providers" type="xs:long" />
          <xs:element name="createdreadershistory" type="xs:anyType" />
          <xs:element name="manipulators" type="xs:anyType" />
          <xs:element name="directories" type="xs:anyType" />
          <xs:element name="currentdirectoryindex" type="xs:anyType" />
          <xs:element name="volatilecurrentdirectory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filterondirectorytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldaccesstest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fsdirectorytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="directorylifecycletest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customlockfactoryprovider" >
      <xs:sequence>
        <xs:element name="//arealimplementationwouldprobablynotuseafieldusefultokeepthetestsimple.optionvalue" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customlockprovidertest" >
      <xs:sequence>
        <xs:element name="single_instance_lock_fqn" type="xs:string" />
        <xs:element name="simple_lock_fqn" type="xs:string" />
        <xs:element name="native_lock_fqn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="retryinitializetest" >
      <xs:sequence>
        <xs:element name="slave" type="fulltextsessionbuilder" nillable="true" minOccurs="0" />
        <xs:element name="master" type="fulltextsessionbuilder" nillable="true" minOccurs="0" />
        <xs:element name="root" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fsslaveandmasterdptest" >
      <xs:complexContent>
       <xs:extension base="multiplesftestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="/***theluceneindexdirectorywhichissharedbetweenmasterandslave.*/mastercopy" type="xs:string" />
          <xs:element name="/***theluceneindexdirectorywhichisspecifictothemasternode.*/mastermain" type="xs:string" />
          <xs:element name="/***theluceneindexdirectorywhichisspecifictotheslavenode.*/slave" type="xs:string" />
          <xs:element name="/***theluceneindexdirectorywhichisspecifictotheslavenode.*/slaveunready" type="xs:string" />
          <xs:element name="root" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplesftestcase" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="sessionfactories" type="xs:anyType" />
          <xs:element name="cfgs" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="lasttest" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="directoryproviderhelpertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="closecheckingdirectoryprovider" >
      <xs:complexContent>
       <xs:extension base="ramdirectoryprovider">
         <xs:sequence>
          <xs:element name="volatileinitialized" type="xs:anyType" />
          <xs:element name="volatilestopped" type="xs:anyType" />
          <xs:element name="volatilestarted" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="snowstorm" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="location" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fsslavedirectoryprovidertestingextension" >
      <xs:complexContent>
       <xs:extension base="fsslavedirectoryprovider">
         <xs:sequence>
          <xs:element name="volatiletaskscheduled" type="xs:anyType" />
          <xs:element name="volatiletaskscheduledperiod" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ramdirectorytest" >
      <xs:complexContent>
       <xs:extension base="searchinitializationtestbase">
         <xs:sequence>
          <xs:element name="logged" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fsdirectoryselectiontest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionsynchronizationtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtychecksdisabledtest" >
      <xs:complexContent>
       <xs:extension base="skipindexingworkforunaffectingchangestest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="skipindexingworkforunaffectingchangestest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usingidentifierrollbacktest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rollbacktransactiontest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fulltextsessionandentitymanagercreationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leaf" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tree" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="species" type="xs:string" />
        <xs:element name="leaves" type="leaf" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="body" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="authors" type="author" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="main" type="author" nillable="true" minOccurs="0" />
        <xs:element name="publication" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="purgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clock" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brand" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="itemid" type="xs:long" />
        <xs:element name="catalogitems" type="catalogitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noopclassbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="consumer" >
      <xs:sequence>
        <xs:element name="consumerid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="catalogs" type="catalog" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catalogitem" >
      <xs:sequence>
        <xs:element name="catalogitemid" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="catalog" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="locationid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="locationgroup" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionupdateeventtest" >
      <xs:sequence>
        <xs:element name="with_class_bridge_on_item" type="xs:anyType" />
        <xs:element name="without_class_bridge_on_item" type="xs:anyType" />
        <xs:element name="with_class_bridge_on_catalog" type="xs:anyType" />
        <xs:element name="without_class_bridge_on_catalog" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locationgroup" >
      <xs:sequence>
        <xs:element name="groupid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="locations" type="location" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletebytermtest" >
      <xs:complexContent>
       <xs:extension base="rootnonindexed">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexreaderseeoptimizedindextest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="indexbasepath" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updateoperationstest" >
      <xs:complexContent>
       <xs:extension base="indexablefield>)}">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasswithcollectionfield" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="collection" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritedcollectionfieldcollectionupdateeventtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="first_collection_value" type="xs:string" />
          <xs:element name="second_collection_value" type="xs:string" />
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionofstringsfieldbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityextendingmappedsuperclasswithcollectionfield" >
      <xs:complexContent>
       <xs:extension base="mappedsuperclasswithcollectionfield">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="songwithlongtitle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="band" type="xs:string" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionupdateeventssecondtest" >
      <xs:sequence>
        <xs:element name="loadcountlistener" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catalog" >
      <xs:sequence>
        <xs:element name="catalogid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="catalogitems" type="catalogitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="consumers" type="consumer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bridgedreversebagcollectionupdateeventtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workertestcase" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="logged" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="food" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asyncworkertest" >
      <xs:complexContent>
       <xs:extension base="workertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="syncworkertest" >
      <xs:complexContent>
       <xs:extension base="workertestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="drink" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrencytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workduplicationtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="default" type="emailaddress" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="worksequencestest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="searchfactory" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emailaddress" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="isdefaultaddress" type="xs:anyType" />
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="specialperson" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="emailaddressset" type="emailaddress" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transientfieldsdirtytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazycollectionsupdatingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="busstop" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="roadname" type="xs:string" />
        <xs:element name="busses" type="busline" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="servicecomments" type="xs:string" />
        <xs:element name="starting" type="xs:dateTime" />
        <xs:element name="transientnummethodcalls" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="busline" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="buslinename" type="xs:string" />
        <xs:element name="stops" type="busstop" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="buslinecode" type="xs:anyType" />
        <xs:element name="operating" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactiontest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaulttestresourcemanager" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="test" type="testconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="baseindexdir" type="xs:anyType" />
        <xs:element name="/*eachofthefollowingfieldsneedstobecleaneduponclose*/sessionfactory" type="xs:anyType" />
        <xs:element name="multitenancy" type="multitenancytesthelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="searchfactory" nillable="true" minOccurs="0" />
        <xs:element name="configurationsettings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectioninitializetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="massindexererrorreportingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchsizeconfigurationtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacytirepkbridge" >
      <xs:sequence>
        <xs:element name="car_id" type="xs:string" />
        <xs:element name="tire_id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secretbook" >
      <xs:complexContent>
       <xs:extension base="an">
         <xs:sequence>
          <xs:element name="allcopiesburnt" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacycarplantpk" >
      <xs:sequence>
        <xs:element name="plantid" type="xs:string" />
        <xs:element name="carid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modernbook" >
      <xs:complexContent>
       <xs:extension base="book">
         <xs:sequence>
          <xs:element name="isbn" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extendedissueentity" >
      <xs:complexContent>
       <xs:extension base="issueentity">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="firstpublishedin" type="nation" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="issueentity" >
      <xs:sequence>
        <xs:element name="jiracode" type="xs:string" />
        <xs:element name="jiradescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legacycarplant" >
      <xs:sequence>
        <xs:element name="id" type="legacycarplantpk" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="car" type="legacycar" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="titleable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="progressmonitortest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexinggeneratedcorpustest" >
      <xs:complexContent>
       <xs:extension base="titleable>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="book_num" type="xs:long" />
          <xs:element name="ancientbook_num" type="xs:long" />
          <xs:element name="secretbook_num" type="xs:long" />
          <xs:element name="dvd_num" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="builder" type="fulltextsessionbuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexedembeddedproxyrootentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="lazyentity" type="indexedembeddedproxylazyentity" nillable="true" minOccurs="0" />
        <xs:element name="lazyentity2" type="indexedembeddedproxylazyentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="databasemultitenancytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="/***metamectenantidentifier*/metamec_tid" type="xs:string" />
          <xs:element name="/***geochrontenantidentifier*/geochron_tid" type="xs:string" />
          <xs:element name="metamec_models" type="xs:anyType" />
          <xs:element name="geochron_models" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacycar" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="tires" type="legacytire" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="massindexercancellingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="custommassindexerfactorytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ancientbook" >
      <xs:complexContent>
       <xs:extension base="book">
         <xs:sequence>
          <xs:element name="cataloguegroupname" type="xs:string" />
          <xs:element name="alternativetitles" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nation" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="librarieshave" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchindexertest" >
      <xs:complexContent>
       <xs:extension base="massindexerimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="massindexerindexedembeddedproxytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="test_name_content" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacytirepk" >
      <xs:sequence>
        <xs:element name="carid" type="xs:string" />
        <xs:element name="tireid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clock" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brand" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedembeddedproxylazyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legacycarplantpkbridge" >
      <xs:sequence>
        <xs:element name="plant_id" type="xs:string" />
        <xs:element name="car_id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentdata" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dvd" >
      <xs:sequence>
        <xs:element name="unusuallynamedidentifier" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="firstpublishedin" type="nation" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="weirdlyidentifiedentity" >
      <xs:sequence>
        <xs:element name="testsid" type="xs:long" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legacytire" >
      <xs:sequence>
        <xs:element name="id" type="legacytirepk" nillable="true" minOccurs="0" />
        <xs:element name="tiresize" type="xs:long" />
        <xs:element name="car" type="legacycar" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="avoidduplicatestest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tostringtest" >
      <xs:complexContent>
       <xs:extension base="jpatestcase">
         <xs:sequence>
          <xs:element name="entitymanager" type="fulltextentitymanager" nillable="true" minOccurs="0" />
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="lucene" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bretzel" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="saltqty" type="xs:long" />
        <xs:element name="weight" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spatialqueryingjpatest" >
      <xs:complexContent>
       <xs:extension base="jpatestcase">
         <xs:sequence>
          <xs:element name="//usealarge,butreasonabledistance:elasticsearch5can'thandle.max_valueforinstancelarge_distance_km" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpatestcase" >
      <xs:sequence>
        <xs:element name="factory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerserializationtest" >
      <xs:complexContent>
       <xs:extension base="jpatestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymanagertest" >
      <xs:complexContent>
       <xs:extension base="jpatestcase">
         <xs:sequence>
          <xs:element name="em" type="fulltextentitymanager" nillable="true" minOccurs="0" />
          <xs:element name="" type="bretzel" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specificshardingstrategy" >
      <xs:complexContent>
       <xs:extension base="idhashshardingstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productsavailabilityshardingstrategy" >
      <xs:sequence>
        <xs:element name="availableproductsindex" type="xs:anyType" />
        <xs:element name="toorderproductsindex" type="xs:anyType" />
        <xs:element name="both" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicshardingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="elephant" type="animal" nillable="true" minOccurs="0" />
          <xs:element name="spider" type="animal" nillable="true" minOccurs="0" />
          <xs:element name="bear" type="animal" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="available" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idshardingstrategytest" >
      <xs:sequence>
        <xs:element name="managerfactory" type="xs:anyType" />
        <xs:element name="shardstrategy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="directoryselectiontest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customershardingstrategytest" >
      <xs:sequence>
        <xs:element name="managerfactory" type="xs:anyType" />
        <xs:element name="shardstrategy" type="customershardingstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="email" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="body" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="directoryproviderforquerytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customershardingstrategy" >
      <xs:sequence>
        <xs:element name="s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shardstest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="managerfactory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:complexContent>
       <xs:extension base="being">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritancetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fish" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="numberofdorsalfins" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bird" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="numberofeggs" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="hassweatglands" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="being" >
      <xs:sequence>
        <xs:element name="weight" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eagle" >
      <xs:complexContent>
       <xs:extension base="bird">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="body" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="authors" type="iauthor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iauthor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="profile" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="comments" type="icomment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="book" type="ibook" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="comment" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="parent" type="iprofile" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="root" type="icomment" nillable="true" minOccurs="0" />
        <xs:element name="replies" type="icomment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iprofile" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="icomment" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ibook" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="GeneratedName" type="embeddablecategories" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventbasedembeddablecollectionupdatetest" >
      <xs:complexContent>
       <xs:extension base="jpatestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="categoriesbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablecategories" >
      <xs:sequence>
        <xs:element name="categories" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cheeserollingcompetitor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="nickname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtycheckingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="article" >
      <xs:complexContent>
       <xs:extension base="blog">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manualindexingonlyinterceptortest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="testentities" type="foo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="totalarticle" >
      <xs:complexContent>
       <xs:extension base="article">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blogstatus" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexingactioninterceptortest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="" type="blog" nillable="true" minOccurs="0" />
          <xs:element name="" type="article" nillable="true" minOccurs="0" />
          <xs:element name="" type="totalarticle" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blog" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="status" type="blogstatus" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexwhenpublishedinterceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptedmassindexertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetname" type="xs:string" />
        <xs:element name="housenumber" type="xs:anyType" />
        <xs:element name="flatnumber" type="xs:anyType" />
        <xs:element name="persons" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchandenversintegrationtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="harrypotter" type="person" nillable="true" minOccurs="0" />
          <xs:element name="hermionegranger" type="person" nillable="true" minOccurs="0" />
          <xs:element name="privetdrive" type="address" nillable="true" minOccurs="0" />
          <xs:element name="grimmauldplace" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="surname" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="skiplog" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimizationtriggertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workqueuelengthconfiguredtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="asyncbackendlongworkliststresstest" >
      <xs:complexContent>
       <xs:extension base="syncbackendlongworkliststresstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="syncbackendlongworkliststresstest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="/*needstobesensiblyhigherthanorg.hibernate.search.batchindexing.executors.queue_max_length*/num_saved_entities" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clock" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brand" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classleveltestpoi" >
      <xs:sequence>
        <xs:element name="poiid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exclusiveindextest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productcatalog" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="equipmenttype" >
      <xs:sequence>
        <xs:element name="equips" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maskedpropertiestest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexembeddedprogrammaticallymappedtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmaticsearchmappingfactory" >
      <xs:sequence>
        <xs:element name="en_analyzer_name" type="xs:string" />
        <xs:element name="english_analyzer_name" type="xs:string" />
        <xs:element name="deutsch_analyzer_name" type="xs:string" />
        <xs:element name="ngram_analyzer_name" type="xs:string" />
        <xs:element name="lowercase_normalizer_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="providedidentry" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="blurb" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custombackendtest" >
      <xs:complexContent>
       <xs:extension base="backendqueueprocessor>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resourcenotfoundmessagetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexmanageroverridetest" >
      <xs:complexContent>
       <xs:extension base="directorybasedindexmanager">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="luceneprogrammaticmappingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="departments" >
      <xs:sequence>
        <xs:element name="deptsid" type="xs:long" />
        <xs:element name="network" type="xs:string" />
        <xs:element name="manufacturer" type="xs:string" />
        <xs:element name="branchhead" type="xs:string" />
        <xs:element name="branch" type="xs:string" />
        <xs:element name="maxemployees" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catdeptsfieldsclassbridge" >
      <xs:sequence>
        <xs:element name="sepchar" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nosearchentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="indexedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="embedded" type="embeddedentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstraptest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurationreadtestcase" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="luceneindexingparameterstest" >
      <xs:complexContent>
       <xs:extension base="configurationreadtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manualindexingstrategytest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatesearchintegratortest" >
      <xs:complexContent>
       <xs:extension base="unitilsjunit4">
         <xs:sequence>
          <xs:element name="search_disabled" type="xs:anyType" />
          <xs:element name="search_enabled" type="xs:anyType" />
          <xs:element name="search_implicitly_enabled" type="xs:anyType" />
          <xs:element name="mock" type="xs:anyType" />
          <xs:element name="mock" type="xs:anyType" />
          <xs:element name="mock" type="xs:anyType" />
          <xs:element name="mock" type="xs:anyType" />
          <xs:element name="mock" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="mock" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="duplicationstrategytest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatesearchsessionfactoryobservertest" >
      <xs:sequence>
        <xs:element name="byteman" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shardsconfigurationtest" >
      <xs:complexContent>
       <xs:extension base="configurationreadtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uselessshardingstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storenormstest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="price" type="xs:long" />
        <xs:element name="GeneratedName" type="productcatalog" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderlineclassbridge" >
      <xs:sequence>
        <xs:element name="fieldname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressclassbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="addressid" type="xs:long" />
        <xs:element name="street1" type="xs:string" />
        <xs:element name="street2" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="created" type="xs:dateTime" />
        <xs:element name="lastupdated" type="xs:anyType" />
        <xs:element name="owner" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="latlonganntestpoi" >
      <xs:sequence>
        <xs:element name="poiid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmaticmappingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="securityfilterfactory" >
      <xs:sequence>
        <xs:element name="ownername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blogentry" >
      <xs:sequence>
        <xs:element name="en_analyzer_name" type="xs:string" />
        <xs:element name="de_analyzer_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="language" type="xs:string" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custombooststrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tokenizationtest" >
      <xs:sequence>
        <xs:element name="default_field_name" type="xs:string" />
        <xs:element name="logged" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customfieldbooststrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="memberleveltestpoi" >
      <xs:sequence>
        <xs:element name="poiid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="latitude" type="xs:double" />
        <xs:element name="longitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicboosteddesclibrary" >
      <xs:sequence>
        <xs:element name="libraryid" type="xs:long" />
        <xs:element name="dynscore" type="xs:double" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationparsehelpertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchtestbase" >
      <xs:sequence>
        <xs:element name="performance_tests_enabled" type="xs:anyType" />
        <xs:element name="//accessonlyviagetter,sinceinstancegetslazilyinitializedtestresourcemanager" type="defaulttestresourcemanager" nillable="true" minOccurs="0" />
        <xs:element name="//accessonlyviagetter,sinceinstancegetslazilyinitialized" type="backendtesthelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="luceneerrorhandlingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="testtypeid" type="xs:anyType" />
          <xs:element name="work_counter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="errorhandlingduringdocumentcreationtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockerrorhandler" >
      <xs:complexContent>
       <xs:extension base="logerrorhandler">
         <xs:sequence>
          <xs:element name="volatileerrormessage" type="xs:string" />
          <xs:element name="volatilelastexception" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentmergeerrorhandledtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="analyzerfortests2" >
      <xs:complexContent>
       <xs:extension base="abstracttestanalyzer">
         <xs:sequence>
          <xs:element name="tokens" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="streamwrappingtokenizer" >
      <xs:complexContent>
       <xs:extension base="tokenizer">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="termattribute" type="xs:anyType" />
          <xs:element name="tokens" type="xs:string" />
          <xs:element name="position" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="analyzerinheritancetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclass" >
      <xs:complexContent>
       <xs:extension base="baseclass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customanalyzerimplementationinclassbridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="normalizerfortests1" >
      <xs:complexContent>
       <xs:extension base="abstracttestanalyzer">
         <xs:sequence>
          <xs:element name="tokens" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alarmentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="property" type="xs:string" />
        <xs:element name="alarmdescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="insertwhitespacefilter" >
      <xs:complexContent>
       <xs:extension base="tokenfilter">
         <xs:sequence>
          <xs:element name="termatt" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="analyzerbuildertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="team" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="(name" type="xs:string" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="analyzerbuilderindexingtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="analyzername" type="xs:string" />
          <xs:element name="toindex" type="xs:string" />
          <xs:element name="expectedtokens" type="xs:string" />
          <xs:element name="unexpectedtokens" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertwhitespacefilterfactory" >
      <xs:complexContent>
       <xs:extension base="tokenfilterfactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubleanalyzertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="analyzertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="analyzerfortests3" >
      <xs:complexContent>
       <xs:extension base="abstracttestanalyzer">
         <xs:sequence>
          <xs:element name="tokens" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mycomponent" >
      <xs:sequence>
        <xs:element name="componentproperty" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="languagediscriminator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracttestanalyzer" >
      <xs:complexContent>
       <xs:extension base="analyzer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customanalyzerdefinitioninclassbridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blogentry" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="language" type="xs:string" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="references" type="blogentry" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="analyzerfortests1" >
      <xs:complexContent>
       <xs:extension base="abstracttestanalyzer">
         <xs:sequence>
          <xs:element name="tokens" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtokenizer" >
      <xs:complexContent>
       <xs:extension base="tokenizerfactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="article" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="language" type="xs:string" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="references" type="article" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="analyzerfortests4" >
      <xs:complexContent>
       <xs:extension base="abstracttestanalyzer">
         <xs:sequence>
          <xs:element name="tokens" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="entity" type="xs:string" />
        <xs:element name="property" type="xs:string" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="notanalyzed" type="xs:string" />
        <xs:element name="component" type="mycomponent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="duplicatedanalyzerdefinitiontest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datesplitbridge" >
      <xs:sequence>
        <xs:element name="gmt" type="xs:anyType" />
        <xs:element name="year_suffix" type="xs:string" />
        <xs:element name="month_suffix" type="xs:string" />
        <xs:element name="day_suffix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="departments" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="network" type="xs:string" />
        <xs:element name="manufacturer" type="xs:string" />
        <xs:element name="branchhead" type="xs:string" />
        <xs:element name="branch" type="xs:string" />
        <xs:element name="maxemployees" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloud" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="1" type="xs:long" />
        <xs:element name="2" type="xs:long" />
        <xs:element name="v1" type="xs:anyType" />
        <xs:element name="egerv2" type="xs:long" />
        <xs:element name="1" type="xs:double" />
        <xs:element name="2" type="xs:double" />
        <xs:element name="1" type="xs:double" />
        <xs:element name="2" type="xs:double" />
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="my" type="xs:dateTime" />
        <xs:element name="year" type="xs:dateTime" />
        <xs:element name="month" type="xs:dateTime" />
        <xs:element name="day" type="xs:dateTime" />
        <xs:element name="hour" type="xs:dateTime" />
        <xs:element name="minute" type="xs:dateTime" />
        <xs:element name="second" type="xs:dateTime" />
        <xs:element name="millisecond" type="xs:dateTime" />
        <xs:element name="customfieldbridge" type="xs:string" />
        <xs:element name="custombridge" type="xs:string" />
        <xs:element name="char1" type="xs:anyType" />
        <xs:element name="2" type="xs:anyType" />
        <xs:element name="type" type="cloudtype" nillable="true" minOccurs="0" />
        <xs:element name="storm" type="xs:anyType" />
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="my" type="xs:anyType" />
        <xs:element name="year" type="xs:anyType" />
        <xs:element name="month" type="xs:anyType" />
        <xs:element name="day" type="xs:anyType" />
        <xs:element name="minute" type="xs:anyType" />
        <xs:element name="second" type="xs:anyType" />
        <xs:element name="hour" type="xs:anyType" />
        <xs:element name="millisecond" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paddedintegerbridge" >
      <xs:sequence>
        <xs:element name="padding_property" type="xs:string" />
        <xs:element name="//defaultpadding" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tikabridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="test_mp3_document" type="xs:string" />
          <xs:element name="integratorresource" type="xs:anyType" />
          <xs:element name="testmp3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraybridgenullembeddedtestentity" >
      <xs:sequence>
        <xs:element name="null_token" type="xs:string" />
        <xs:element name="null_numeric_token" type="xs:string" />
        <xs:element name="null_embedded" type="xs:string" />
        <xs:element name="null_embedded_numeric" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nullindexed" type="xs:anyType" />
        <xs:element name="numericnullindexed" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bridgeprovidertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chain" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="theater" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="theater" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="movie" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="movie" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="theaterbridgeprovider1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conflictingbridgedefinitiontest" >
      <xs:sequence>
        <xs:element name="integratorresource" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="moviebridgeprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="theaterbridgeprovider2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gangster" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incorrectobjecttostring" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iterablebridgetestentity" >
      <xs:sequence>
        <xs:element name="null_token" type="xs:string" />
        <xs:element name="null_numeric_token" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nullindexed" type="xs:anyType" />
        <xs:element name="nullnotindexed" type="xs:anyType" />
        <xs:element name="numericnullindexed" type="xs:anyType" />
        <xs:element name="numericnullnotindexed" type="xs:anyType" />
        <xs:element name="dates" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapbridgenullembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="withoutnull" type="mapbridgenullembeddedtestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullentry" type="mapbridgenullembeddedtestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullembedded" type="mapbridgenullembeddedtestentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="studentssizebridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teacher" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraybridgetestentity" >
      <xs:sequence>
        <xs:element name="null_token" type="xs:string" />
        <xs:element name="null_numeric_token" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nullindexed" type="xs:anyType" />
        <xs:element name="nullnotindexed" type="xs:string" />
        <xs:element name="numericnullindexed" type="xs:anyType" />
        <xs:element name="numericnullnotindexed" type="xs:long" />
        <xs:element name="primitive" type="xs:double" />
        <xs:element name="s" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iterablebridgenullembeddedtestentity" >
      <xs:sequence>
        <xs:element name="null_token" type="xs:string" />
        <xs:element name="null_numeric_token" type="xs:string" />
        <xs:element name="null_embedded" type="xs:string" />
        <xs:element name="null_embedded_numeric" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nullindexed" type="xs:anyType" />
        <xs:element name="numericnullindexed" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classbridgeandprojectiontest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classbridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="incorrectset" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iterablebridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="withoutnull" type="iterablebridgetestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullentry" type="iterablebridgetestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullembedded" type="iterablebridgetestentity" nillable="true" minOccurs="0" />
          <xs:element name="indexed" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="network" type="xs:string" />
        <xs:element name="branchhead" type="xs:string" />
        <xs:element name="branch" type="xs:string" />
        <xs:element name="maxemployees" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraybridgenullembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="withoutnull" type="arraybridgenullembeddedtestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullentry" type="arraybridgenullembeddedtestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullembedded" type="arraybridgenullembeddedtestentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unresolvedbridgetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapbridgenullembeddedtestentity" >
      <xs:sequence>
        <xs:element name="null_token" type="xs:string" />
        <xs:element name="null_numeric_token" type="xs:string" />
        <xs:element name="null_embedded" type="xs:string" />
        <xs:element name="null_embedded_numeric" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nullindexed" type="xs:anyType" />
        <xs:element name="numericnullindexed" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incorrectget" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catdeptsfieldsclassbridge" >
      <xs:sequence>
        <xs:element name="sepchar" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bridgeconversionerrortest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="numericbigdecimalbridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraybridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="withoutnull" type="arraybridgetestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullentry" type="arraybridgetestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullembedded" type="arraybridgetestentity" nillable="true" minOccurs="0" />
          <xs:element name="indexed" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="equipmenttype" >
      <xs:sequence>
        <xs:element name="equips" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iterablebridgenullembeddedtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="withoutnull" type="iterablebridgenullembeddedtestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullentry" type="iterablebridgenullembeddedtestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullembedded" type="iterablebridgenullembeddedtestentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapbridgetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
          <xs:element name="withoutnull" type="mapbridgetestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullentry" type="mapbridgetestentity" nillable="true" minOccurs="0" />
          <xs:element name="withnullembedded" type="mapbridgetestentity" nillable="true" minOccurs="0" />
          <xs:element name="indexed" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="truncatestringbridge" >
      <xs:sequence>
        <xs:element name="div" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catfieldsclassbridge" >
      <xs:sequence>
        <xs:element name="sepchar" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapbridgetestentity" >
      <xs:sequence>
        <xs:element name="null_token" type="xs:string" />
        <xs:element name="null_numeric_token" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nullindexed" type="xs:anyType" />
        <xs:element name="nullnotindexed" type="xs:anyType" />
        <xs:element name="numericnullindexed" type="xs:anyType" />
        <xs:element name="numericnullnotindexed" type="xs:anyType" />
        <xs:element name="dates" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloudtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="truncatefieldbridge" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="grade" type="xs:string" />
        <xs:element name="GeneratedName" type="teacher" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentflushtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="stored_entries" type="xs:long" />
          <xs:element name="indexedelements" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testresourcemanager" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchinitializationtestbase" >
      <xs:sequence>
        <xs:element name="testresourcemanager" type="defaulttestresourcemanager" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="backendtesthelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextfilterdefsannotationtest" >
      <xs:sequence>
        <xs:element name="thrown" type="xs:anyType" />
        <xs:element name="sfholder" type="xs:anyType" />
        <xs:element name="integratorresource" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soap" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="perfume" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bestdriversfilterfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextfilterdefannotationtest" >
      <xs:sequence>
        <xs:element name="thrown" type="xs:anyType" />
        <xs:element name="sfholder" type="xs:anyType" />
        <xs:element name="integratorresource" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="driver" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="teacher" type="xs:string" />
        <xs:element name="score" type="xs:long" />
        <xs:element name="delivery" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="securityfilterfactory" >
      <xs:sequence>
        <xs:element name="login" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldconstraintfilterfactory" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="excludeallfilterfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instancebasedexcludeallfilterfactory" >
      <xs:sequence>
        <xs:element name="volatilecreationcount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullreturningemptyfilter" >
      <xs:complexContent>
       <xs:extension base="query">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldconstraintfilterwithoutkeymethod" >
      <xs:complexContent>
       <xs:extension base="query">
         <xs:sequence>
          <xs:element name="instances" type="fieldconstraintfilterwithoutkeymethod" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="field" type="xs:string" />
          <xs:element name="value" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="fullname" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="employer" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rolefilterfactory" >
      <xs:sequence>
        <xs:element name="role" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldconstraintfilterfactory" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instancebasedexcludeallfilter" >
      <xs:complexContent>
       <xs:extension base="filter">
         <xs:sequence>
          <xs:element name="volatileconstructorcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rolefilterfactory" >
      <xs:sequence>
        <xs:element name="role" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bestdriversfilter" >
      <xs:complexContent>
       <xs:extension base="querywrapperfilter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="soap" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="perfume" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="excludeallfilterfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="fullname" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="employer" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securityfilterfactory" >
      <xs:sequence>
        <xs:element name="login" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullreturningemptyfilter" >
      <xs:complexContent>
       <xs:extension base="filter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="excludeallfilter" >
      <xs:complexContent>
       <xs:extension base="filter">
         <xs:sequence>
          <xs:element name="invokedonreaders" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="driver" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="teacher" type="xs:string" />
        <xs:element name="score" type="xs:long" />
        <xs:element name="delivery" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filtertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="cachingpolicy" type="xs:anyType" />
          <xs:element name="query" type="xs:anyType" />
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldconstraintfilterwithoutkeymethod" >
      <xs:complexContent>
       <xs:extension base="filter">
         <xs:sequence>
          <xs:element name="instances" type="fieldconstraintfilterwithoutkeymethod" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="field" type="xs:string" />
          <xs:element name="value" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fulltimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldconstraintfilterfactorywithoutkeymethod" >
      <xs:sequence>
        <xs:element name="builtfilters" type="xs:anyType" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ormfiltertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fulltextfiltertest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="cachingpolicy" type="xs:anyType" />
          <xs:element name="query" type="xs:anyType" />
          <xs:element name="" type="fulltextsession" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anddocidsetstest" >
      <xs:sequence>
        <xs:element name="testdatafrom0to9" type="xs:anyType" />
        <xs:element name="testdatafrom1to10" type="xs:anyType" />
        <xs:element name="testdatafrom1to9" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldconstraintfilterfactorywithoutkeymethod" >
      <xs:sequence>
        <xs:element name="builtfilters" type="xs:anyType" />
        <xs:element name="field" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="counter" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nombeansenabledtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexcontrolmbeantest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="statisticsbean" type="xs:anyType" />
          <xs:element name="indexbean" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexcontrolmbeanwithsuffixtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="jndi_app_suffix" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="indexbean" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutablesearchfactoryandjmxtest" >
      <xs:sequence>
        <xs:element name="integratorresource" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextsessionbuilder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="indexrootdirectory" type="xs:anyType" />
        <xs:element name="cfg" type="xs:anyType" />
        <xs:element name="annotatedclasses" type="xs:anyType" />
        <xs:element name="sessionfactory" type="xs:anyType" />
        <xs:element name="usingfilesystem" type="xs:anyType" />
        <xs:element name="additionalloadeventlisteners" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ddltransactionisolatortestingimpl" >
      <xs:complexContent>
       <xs:extension base="ddltransactionisolatornonjtaimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="immutabletestconfiguration" >
      <xs:sequence>
        <xs:element name="tenantids" type="xs:anyType" />
        <xs:element name="annotatedclasses" type="xs:anyType" />
        <xs:element name="settings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourcecleanupfunctions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assertingmassindexerprogressmonitor" >
      <xs:sequence>
        <xs:element name="monitor" type="xs:anyType" />
        <xs:element name="totalcount" type="xs:anyType" />
        <xs:element name="finishedcount" type="xs:anyType" />
        <xs:element name="addeddocuments" type="xs:anyType" />
        <xs:element name="expectedaddeddocuments" type="xs:long" />
        <xs:element name="expectedtotalcount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatemanualconfiguration" >
      <xs:complexContent>
       <xs:extension base="searchconfigurationfortest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multitenancytesthelper" >
      <xs:sequence>
        <xs:element name="tenantids" type="xs:anyType" />
        <xs:element name="multitenancyenabled" type="xs:anyType" />
        <xs:element name="multitenantconnectionprovider" type="xs:anyType" />
        <xs:element name="tenantspecificconnectionproviders" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backendtesthelper" >
      <xs:complexContent>
       <xs:extension base="backendtesthelper">
         <xs:sequence>
          <xs:element name="elastic_search_test_helper_class_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="massindexusingmanualflushtest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimizetest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entite" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="titre" type="xs:string" />
        <xs:element name="GeneratedName" type="categorie" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="categorie" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="nom" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessiontest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
          <xs:element name="sess_proxy_interfaces" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="delegationwrapper" >
      <xs:sequence>
        <xs:element name="realsession" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="massindextest" >
      <xs:complexContent>
       <xs:extension base="searchtestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="domain" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="email" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="body" type="xs:string" />
        <xs:element name="header" type="xs:string" />
        <xs:element name="GeneratedName" type="domain" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notpackagedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventsourcetransactioncontext" >
      <xs:complexContent>
       <xs:extension base="service>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="//thistransientisrequiredtobreakrecursiveserializationtransientflushlistener" type="fulltextindexeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="//constructortimeistooearlytodefinethevalueofrealtxinprogress,//postponeit,otherwisedoing//"opensession-begintransaction"//willbehaveas"outoftransaction"inthewholesessionlifespan.realtxinprogress" type="xs:anyType" />
          <xs:element name="realtxinprogressinitialized" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="noninitializedintegratorstate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventsintegratorstate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimaleventsintegratorstate" >
      <xs:sequence>
        <xs:element name="eventsdisabled" type="xs:anyType" />
        <xs:element name="skipdirtychecks" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initializingintegratorstate" >
      <xs:sequence>
        <xs:element name="extendedintegratorfuture" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextindexeventlistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="volatilestate" type="eventsintegratorstate" nillable="true" minOccurs="0" />
        <xs:element name="flushsynch" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchconfigurationfromhibernatecore" >
      <xs:complexContent>
       <xs:extension base="searchconfigurationbase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="beanresolver" nillable="true" minOccurs="0" />
          <xs:element name="providedservices" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="//forcompatibilityreasonsonly.shouldberemoved?seehsearch-1890legacyconfiguration" type="xs:anyType" />
          <xs:element name="multitenancyenabled" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="delegatingbeanresolver" >
      <xs:sequence>
        <xs:element name="hibernateormbeanresolver" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delegatingclassloaderservice" >
      <xs:sequence>
        <xs:element name="asprovidedbyhibernateorm.thisistheclassloaderwhichweattempttousefirst.*/hibernateclassloaderservice" type="xs:anyType" />
        <xs:element name="/***asearchinternalclassloaderservicewhichinparticulartriestousethecurrentclassloader.thiscanbe*necessaryincasetheormclassloadercanduetomodularitynotaccesstherequiredresources*/internal" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatecoreiduniquenessresolver" >
      <xs:sequence>
        <xs:element name="entities" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delegatingnamedresolver" >
      <xs:sequence>
        <xs:element name="namingservice" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextsessionimpl" >
      <xs:complexContent>
       <xs:extension base="sessiondelegatorbaseimpl">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="transientsearchfactory" type="xs:anyType" />
          <xs:element name="transientapi" type="searchfactory" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implementationfactory" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextsharedsessionbuilderdelegator" >
      <xs:sequence>
        <xs:element name="builder" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchfactoryimpl" >
      <xs:sequence>
        <xs:element name="searchintegrator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="search" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexcontrol" >
      <xs:sequence>
        <xs:element name="hibernate" type="xs:anyType" />
        <xs:element name="extendedintegrator" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="numberofobjectloadingthreads" type="xs:long" />
        <xs:element name="numberoffetchingthreads" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatesessionloadinginitializer" >
      <xs:complexContent>
       <xs:extension base="hibernatestatelessinitializer">
         <xs:sequence>
          <xs:element name="hibernatesession" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatestatelessinitializer" >
      <xs:sequence>
        <xs:element name="instance" type="hibernatestatelessinitializer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="massindexer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="search" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextentitymanager" >
      <xs:complexContent>
       <xs:extension base="an">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fulltextquery" >
      <xs:complexContent>
       <xs:extension base="query,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifierconsumerdocumentproducer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="source" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="monitor" type="xs:anyType" />
        <xs:element name="entityindexbindings" type="xs:anyType" />
        <xs:element name="idname" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="backend" type="xs:anyType" />
        <xs:element name="producerendsignal" type="xs:anyType" />
        <xs:element name="transactiontimeout" type="xs:anyType" />
        <xs:element name="tenantid" type="xs:string" />
        <xs:element name="/***thejtatransactionmanageror{@codenull}ifnotinajtaenvironment*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="errorhandledrunnable" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="extendedintegrator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierproducer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="destination" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="indexedtype" type="xs:anyType" />
        <xs:element name="monitor" type="xs:anyType" />
        <xs:element name="objectslimit" type="xs:long" />
        <xs:element name="idfetchsize" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="tenantid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionallywrapinjtatransaction" >
      <xs:complexContent>
       <xs:extension base="errorhandledrunnable">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="statelesssessionawarerunnable" nillable="true" minOccurs="0" />
          <xs:element name="batchcontext" type="batchtransactionalcontext" nillable="true" minOccurs="0" />
          <xs:element name="transactiontimeout" type="xs:anyType" />
          <xs:element name="wrapintransaction" type="xs:anyType" />
          <xs:element name="tenantid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchtransactionalcontext" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="factory" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="extendedintegrator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="massindexerimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="extendedintegrator" type="xs:anyType" />
        <xs:element name="sessionfactory" type="xs:anyType" />
        <xs:element name="rootentities" type="xs:anyType" />
        <xs:element name="//defaultsettingsdefinedhere:typestoindexinparallel" type="xs:long" />
        <xs:element name="//loadingthemainentity,alsoresponsibleforloadingoflazy@indexedembeddedcollectionsdocumentbuilderthreads" type="xs:long" />
        <xs:element name="objectloadingbatchsize" type="xs:long" />
        <xs:element name="//meansnolimitatallobjectslimit" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="optimizeatend" type="xs:anyType" />
        <xs:element name="purgeatstart" type="xs:anyType" />
        <xs:element name="optimizeafterpurge" type="xs:anyType" />
        <xs:element name="monitor" type="xs:anyType" />
        <xs:element name="//reasonabledefaultasweonlyloadidsidfetchsize" type="xs:long" />
        <xs:element name="tenantidentifier" type="xs:string" />
        <xs:element name="idloadingtransactiontimeout" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="producerconsumerqueue" >
      <xs:sequence>
        <xs:element name="default_buff_length" type="xs:long" />
        <xs:element name="exittoken" type="xs:anyType" />
        <xs:element name="hereasexittokenneedstobeputinthequeuetoo:queue" type="xs:anyType" />
        <xs:element name="producerstowaitfor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchcoordinator" >
      <xs:complexContent>
       <xs:extension base="errorhandledrunnable">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="//entitytypestoreindexexcludingallsubtypesofeach-otherrootentities" type="xs:anyType" />
          <xs:element name="sessionfactory" type="xs:anyType" />
          <xs:element name="typestoindexinparallel" type="xs:long" />
          <xs:element name="documentbuilderthreads" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="objectloadingbatchsize" type="xs:long" />
          <xs:element name="optimizeatend" type="xs:anyType" />
          <xs:element name="purgeatstart" type="xs:anyType" />
          <xs:element name="optimizeafterpurge" type="xs:anyType" />
          <xs:element name="endallsignal" type="xs:anyType" />
          <xs:element name="monitor" type="xs:anyType" />
          <xs:element name="objectslimit" type="xs:long" />
          <xs:element name="idfetchsize" type="xs:long" />
          <xs:element name="transactiontimeout" type="xs:anyType" />
          <xs:element name="tenantid" type="xs:string" />
          <xs:element name="indexingtasks" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleindexingprogressmonitor" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="documentsdonecounter" type="xs:anyType" />
        <xs:element name="totalcounter" type="xs:anyType" />
        <xs:element name="volatilestarttime" type="xs:long" />
        <xs:element name="logafternumberofdocuments" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultmassindexerfactory" >
      <xs:sequence>
        <xs:element name="object_array" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchindexingworkspace" >
      <xs:complexContent>
       <xs:extension base="errorhandledrunnable">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sessionfactory" type="xs:anyType" />
          <xs:element name="primarykeystream" type="xs:anyType" />
          <xs:element name="documentbuilderthreads" type="xs:long" />
          <xs:element name="indexedtype" type="xs:anyType" />
          <xs:element name="idnameofindexedtype" type="xs:string" />
          <xs:element name="//statuscontrol//releasedwhenwestopaddingdocumentstoindexproducerendsignal" type="xs:anyType" />
          <xs:element name="//releasedwhenwereleasealllocksandindexwriterendallsignal" type="xs:anyType" />
          <xs:element name="//progressmonitormonitor" type="xs:anyType" />
          <xs:element name="//loadingoptions" type="xs:anyType" />
          <xs:element name="objectloadingbatchsize" type="xs:long" />
          <xs:element name="backend" type="xs:anyType" />
          <xs:element name="objectslimit" type="xs:long" />
          <xs:element name="idfetchsize" type="xs:long" />
          <xs:element name="transactiontimeout" type="xs:anyType" />
          <xs:element name="tenantid" type="xs:string" />
          <xs:element name="tasks" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statelesssessionawarerunnable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="massindexerwithtenant" >
      <xs:complexContent>
       <xs:extension base="massindexer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="massindexerfactory" >
      <xs:sequence>
        <xs:element name="mass_indexer_factory_classname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextsharedsessionbuilder" >
      <xs:complexContent>
       <xs:extension base="sharedsessionbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="searchfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextquery" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistencecontextobjectinitializer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="delegate" type="objectinitializer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loaderhelper" >
      <xs:sequence>
        <xs:element name="objectnotfoundexceptions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lookupobjectinitializer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="instance" type="lookupobjectinitializer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectloaderbuilder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="targetedentities" type="xs:anyType" />
        <xs:element name="session" type="xs:anyType" />
        <xs:element name="extendedintegrator" type="xs:anyType" />
        <xs:element name="indexedtargetedentities" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="lookupmethod" type="xs:anyType" />
        <xs:element name="retrievalmethod" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiclassesqueryloader" >
      <xs:complexContent>
       <xs:extension base="abstractloader">
         <xs:sequence>
          <xs:element name="session" type="xs:anyType" />
          <xs:element name="extendedintegrator" type="xs:anyType" />
          <xs:element name="entitymetadata" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="objectinitializer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityinfoloadkey" >
      <xs:sequence>
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractloader" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="taketimings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectinitializationcontext" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="entitytype" type="xs:anyType" />
        <xs:element name="extendedintegrator" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="session" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectionloader" >
      <xs:sequence>
        <xs:element name="object" type="loader" nillable="true" minOccurs="0" />
        <xs:element name="projectthis" type="xs:anyType" />
        <xs:element name="transformer" type="xs:anyType" />
        <xs:element name="aliases" type="xs:string" />
        <xs:element name="loaderbuilder" type="objectloaderbuilder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryloader" >
      <xs:complexContent>
       <xs:extension base="abstractloader">
         <xs:sequence>
          <xs:element name="session" type="xs:anyType" />
          <xs:element name="entitytype" type="xs:anyType" />
          <xs:element name="extendedintegrator" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="isexplicitcriteria" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="objectinitializer" nillable="true" minOccurs="0" />
          <xs:element name="sizesafe" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaobjectinitializer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="max_in_clause" type="xs:long" />
        <xs:element name="instance" type="criteriaobjectinitializer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondlevelcacheobjectinitializer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="delegate" type="objectinitializer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectloaderhelper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectinitializer" >
      <xs:sequence>
        <xs:element name="entity_not_yet_initialized" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrollableresultsimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="first" type="xs:long" />
        <xs:element name="max" type="xs:long" />
        <xs:element name="fetchsize" type="xs:long" />
        <xs:element name="GeneratedName" type="loader" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="session" type="xs:anyType" />
        <xs:element name="hasthisprojection" type="xs:anyType" />
        <xs:element name="resultscontext" type="xs:anyType" />
        <xs:element name="current" type="xs:long" />
        <xs:element name="closed" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iteratorimpl" >
      <xs:sequence>
        <xs:element name="entityinfos" type="xs:anyType" />
        <xs:element name="index" type="xs:long" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="next" type="xs:anyType" />
        <xs:element name="nextobjectindex" type="xs:long" />
        <xs:element name="GeneratedName" type="loader" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextqueryimpl" >
      <xs:complexContent>
       <xs:extension base="abstractproducedquery">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="fetchsize" type="xs:long" />
          <xs:element name="hsearchquery" type="xs:anyType" />
          <xs:element name="session" type="xs:anyType" />
          <xs:element name="firstresult" type="xs:anyType" />
          <xs:element name="maxresults" type="xs:anyType" />
          <xs:element name="hints" type="xs:anyType" />
          <xs:element name="no" type="loader" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="environmentsynchronizer" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanresolver" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatesearchintegrator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="auto_register" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchfactoryreference" >
      <xs:sequence>
        <xs:element name="volatileextendedintegrator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatesessionfactoryservice" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="searchfactoryservicecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatesearchsessionfactoryobserver" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="namingservice" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="environmentsynchronizer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="beanresolver" nillable="true" minOccurs="0" />
        <xs:element name="listener" type="fulltextindexeventlistener" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="extendedsearchintegratorfuture" type="xs:anyType" />
        <xs:element name="//guardedbysynchronizationonthisjmx" type="jmxhook" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaulthibernatesessionfactoryservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmxhook" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="indexcontrolmbeanname" type="xs:string" />
        <xs:element name="indexcontrolmbeanenabled" type="xs:anyType" />
        <xs:element name="//guardedbysynchronizationregisteredifenabled" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contexthelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fulltextsession" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blueprint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="org.hibernate.integrator.spi" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="org.hibernate.service.spi" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="org.hibernate.search.hcore.impl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 