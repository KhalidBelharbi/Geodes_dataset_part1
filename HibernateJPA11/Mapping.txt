ClassDiagram.Class>> AlternateDocument =>=>=> RelationalSchema.Table>> alternatedocument;
ClassDiagram.Class>> MissingSpatialPOI =>=>=> RelationalSchema.Table>> missingspatialpoi;
ClassDiagram.Class>> SpatialContainedInTest =>=>=> RelationalSchema.Table>> spatialcontainedintest;
ClassDiagram.Class>> SpatialSearchSortByDistanceAndPagingTest =>=>=> RelationalSchema.Table>> spatialsearchsortbydistanceandpagingtest;
ClassDiagram.Class>> POI =>=>=> RelationalSchema.Table>> poi;
ClassDiagram.Class>> NonGeoPOI =>=>=> RelationalSchema.Table>> nongeopoi;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> GetterUser =>=>=> RelationalSchema.Table>> getteruser;
ClassDiagram.Class>> Restaurant =>=>=> RelationalSchema.Table>> restaurant;
ClassDiagram.Class>> UserEx =>=>=> RelationalSchema.Table>> userex;
ClassDiagram.Class>> UserRange =>=>=> RelationalSchema.Table>> userrange;
ClassDiagram.Class>> RangeEvent =>=>=> RelationalSchema.Table>> rangeevent;
ClassDiagram.Class>> RangeHotel =>=>=> RelationalSchema.Table>> rangehotel;
ClassDiagram.Class>> DoubleIndexedPOI =>=>=> RelationalSchema.Table>> doubleindexedpoi;
ClassDiagram.Class>> Hotel =>=>=> RelationalSchema.Table>> hotel;
ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> Can =>=>=> RelationalSchema.Table>> can;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Animal =>=>=> RelationalSchema.Table>> animal;
ClassDiagram.Class>> PlainPerson =>=>=> RelationalSchema.Table>> plainperson;
ClassDiagram.Class>> StudentEntity =>=>=> RelationalSchema.Table>> studententity;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> PlainPerson =>=>=> RelationalSchema.Table>> plainperson;
ClassDiagram.Class>> PersonCustomDocumentId =>=>=> RelationalSchema.Table>> personcustomdocumentid;
ClassDiagram.Class>> Article =>=>=> RelationalSchema.Table>> article;
ClassDiagram.Class>> StatisticsTest =>=>=> RelationalSchema.Table>> statisticstest;
ClassDiagram.Class>> Document =>=>=> RelationalSchema.Table>> document;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> ParentOfBirthEvent =>=>=> RelationalSchema.Table>> parentofbirthevent;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> Root =>=>=> RelationalSchema.Table>> root;
ClassDiagram.Class>> LazyItem =>=>=> RelationalSchema.Table>> lazyitem;
ClassDiagram.Class>> Leaf =>=>=> RelationalSchema.Table>> leaf;
ClassDiagram.Class>> AbstractProduct =>=>=> RelationalSchema.Table>> abstractproduct;
ClassDiagram.Class>> EmbeddedObjectIdInclusionTest =>=>=> RelationalSchema.Table>> embeddedobjectidinclusiontest;
ClassDiagram.Class>> StateCandidate =>=>=> RelationalSchema.Table>> statecandidate;
ClassDiagram.Class>> Contact =>=>=> RelationalSchema.Table>> contact;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> BusinessContact =>=>=> RelationalSchema.Table>> businesscontact;
ClassDiagram.Class>> PersonalContact =>=>=> RelationalSchema.Table>> personalcontact;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> HelpItem =>=>=> RelationalSchema.Table>> helpitem;
ClassDiagram.Class>> HelpItemTag =>=>=> RelationalSchema.Table>> helpitemtag;
ClassDiagram.Class>> Tag =>=>=> RelationalSchema.Table>> tag;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> AttributeValue =>=>=> RelationalSchema.Table>> attributevalue;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Attribute =>=>=> RelationalSchema.Table>> attribute;
ClassDiagram.Class>> Place =>=>=> RelationalSchema.Table>> place;
ClassDiagram.Class>> SimpleChildEntity =>=>=> RelationalSchema.Table>> simplechildentity;
ClassDiagram.Class>> Son =>=>=> RelationalSchema.Table>> son;
ClassDiagram.Class>> ProductShootingBrief =>=>=> RelationalSchema.Table>> productshootingbrief;
ClassDiagram.Class>> ProductArticle =>=>=> RelationalSchema.Table>> productarticle;
ClassDiagram.Class>> ProductReferenceCode =>=>=> RelationalSchema.Table>> productreferencecode;
ClassDiagram.Class>> Grandpa =>=>=> RelationalSchema.Table>> grandpa;
ClassDiagram.Class>> Dad =>=>=> RelationalSchema.Table>> dad;
ClassDiagram.Class>> SimpleParentEntity =>=>=> RelationalSchema.Table>> simpleparententity;
ClassDiagram.Class>> ProductModel =>=>=> RelationalSchema.Table>> productmodel;
ClassDiagram.Class>> UpdateIndexedEmbeddedCollectionTest =>=>=> RelationalSchema.Table>> updateindexedembeddedcollectiontest;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Hero =>=>=> RelationalSchema.Table>> hero;
ClassDiagram.Class>> Villain =>=>=> RelationalSchema.Table>> villain;
ClassDiagram.Class>> Woman =>=>=> RelationalSchema.Table>> woman;
ClassDiagram.Class>> Man =>=>=> RelationalSchema.Table>> man;
ClassDiagram.Class>> Puppy =>=>=> RelationalSchema.Table>> puppy;
ClassDiagram.Class>> Pet =>=>=> RelationalSchema.Table>> pet;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> Human =>=>=> RelationalSchema.Table>> human;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> ReferencesIndexedEmbeddedA =>=>=> RelationalSchema.Table>> referencesindexedembeddeda;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> PathNotIndexedCase =>=>=> RelationalSchema.Table>> pathnotindexedcase;
ClassDiagram.Class>> InvalidPrefixCase =>=>=> RelationalSchema.Table>> invalidprefixcase;
ClassDiagram.Class>> FieldRenamedEmbeddedEntity =>=>=> RelationalSchema.Table>> fieldrenamedembeddedentity;
ClassDiagram.Class>> DepthMatchesPathDepthCase =>=>=> RelationalSchema.Table>> depthmatchespathdepthcase;
ClassDiagram.Class>> InvalidEmbeddedWithoutPathsCase =>=>=> RelationalSchema.Table>> invalidembeddedwithoutpathscase;
ClassDiagram.Class>> DeepPathSimpleTypeCase =>=>=> RelationalSchema.Table>> deeppathsimpletypecase;
ClassDiagram.Class>> InvalidEmbeddedPathCase =>=>=> RelationalSchema.Table>> invalidembeddedpathcase;
ClassDiagram.Class>> DeepPathWithLeadingPrefixCase =>=>=> RelationalSchema.Table>> deeppathwithleadingprefixcase;
ClassDiagram.Class>> B =>=>=> RelationalSchema.Table>> b;
ClassDiagram.Class>> ReferencesC =>=>=> RelationalSchema.Table>> referencesc;
ClassDiagram.Class>> InvalidEmbeddedNonLeafCase =>=>=> RelationalSchema.Table>> invalidembeddednonleafcase;
ClassDiagram.Class>> InvalidNonLeafUseCase =>=>=> RelationalSchema.Table>> invalidnonleafusecase;
ClassDiagram.Class>> DepthExceedsPathTestCase =>=>=> RelationalSchema.Table>> depthexceedspathtestcase;
ClassDiagram.Class>> InvalidShallowPathCase =>=>=> RelationalSchema.Table>> invalidshallowpathcase;
ClassDiagram.Class>> C =>=>=> RelationalSchema.Table>> c;
ClassDiagram.Class>> FieldRenamedContainerEntity =>=>=> RelationalSchema.Table>> fieldrenamedcontainerentity;
ClassDiagram.Class>> EntityB =>=>=> RelationalSchema.Table>> entityb;
ClassDiagram.Class>> EntityC =>=>=> RelationalSchema.Table>> entityc;
ClassDiagram.Class>> EntityA =>=>=> RelationalSchema.Table>> entitya;
ClassDiagram.Class>> DocumentEntity =>=>=> RelationalSchema.Table>> documententity;
ClassDiagram.Class>> EmbeddedEntityNotIndexedTest =>=>=> RelationalSchema.Table>> embeddedentitynotindexedtest;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> ContainedInEntityInheritanceTest =>=>=> RelationalSchema.Table>> containedinentityinheritancetest;
ClassDiagram.Class>> Level1 =>=>=> RelationalSchema.Table>> level1;
ClassDiagram.Class>> Level3 =>=>=> RelationalSchema.Table>> level3;
ClassDiagram.Class>> DerivedLevel2 =>=>=> RelationalSchema.Table>> derivedlevel2;
ClassDiagram.Class>> ConcreteEntity =>=>=> RelationalSchema.Table>> concreteentity;
ClassDiagram.Class>> AbstractEntity =>=>=> RelationalSchema.Table>> abstractentity;
ClassDiagram.Class>> LazyAbstractEntityReference =>=>=> RelationalSchema.Table>> lazyabstractentityreference;
ClassDiagram.Class>> Level2 =>=>=> RelationalSchema.Table>> level2;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Leaf =>=>=> RelationalSchema.Table>> leaf;
ClassDiagram.Class>> CollectionItem =>=>=> RelationalSchema.Table>> collectionitem;
ClassDiagram.Class>> IndexedEntity =>=>=> RelationalSchema.Table>> indexedentity;
ClassDiagram.Class>> Root =>=>=> RelationalSchema.Table>> root;
ClassDiagram.Class>> State =>=>=> RelationalSchema.Table>> state;
ClassDiagram.Class>> NonIndexedEntity =>=>=> RelationalSchema.Table>> nonindexedentity;
ClassDiagram.Class>> PersonWithBrokenSocialSecurityNumber =>=>=> RelationalSchema.Table>> personwithbrokensocialsecuritynumber;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> BrokenMammal =>=>=> RelationalSchema.Table>> brokenmammal;
ClassDiagram.Class>> SocialPerson =>=>=> RelationalSchema.Table>> socialperson;
ClassDiagram.Class>> WorkingPerson =>=>=> RelationalSchema.Table>> workingperson;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Tower =>=>=> RelationalSchema.Table>> tower;
ClassDiagram.Class>> ProductFeature =>=>=> RelationalSchema.Table>> productfeature;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Clock =>=>=> RelationalSchema.Table>> clock;
ClassDiagram.Class>> Truck =>=>=> RelationalSchema.Table>> truck;
ClassDiagram.Class>> Ingredient =>=>=> RelationalSchema.Table>> ingredient;
ClassDiagram.Class>> Recipe =>=>=> RelationalSchema.Table>> recipe;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Car =>=>=> RelationalSchema.Table>> car;
ClassDiagram.Class>> CompanyFacility =>=>=> RelationalSchema.Table>> companyfacility;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Cd =>=>=> RelationalSchema.Table>> cd;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Fruit =>=>=> RelationalSchema.Table>> fruit;
ClassDiagram.Class>> ObjectLoadingPublicFieldTest =>=>=> RelationalSchema.Table>> objectloadingpublicfieldtest;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Value =>=>=> RelationalSchema.Table>> value;
ClassDiagram.Class>> ProgrammaticConfiguredValue =>=>=> RelationalSchema.Table>> programmaticconfiguredvalue;
ClassDiagram.Class>> Clock =>=>=> RelationalSchema.Table>> clock;
ClassDiagram.Class>> Spouse =>=>=> RelationalSchema.Table>> spouse;
ClassDiagram.Class>> TestEntity =>=>=> RelationalSchema.Table>> testentity;
ClassDiagram.Class>> CommunityCollege =>=>=> RelationalSchema.Table>> communitycollege;
ClassDiagram.Class>> PrimarySchool =>=>=> RelationalSchema.Table>> primaryschool;
ClassDiagram.Class>> College =>=>=> RelationalSchema.Table>> college;
ClassDiagram.Class>> University =>=>=> RelationalSchema.Table>> university;
ClassDiagram.Class>> HighSchool =>=>=> RelationalSchema.Table>> highschool;
ClassDiagram.Class>> Dvd =>=>=> RelationalSchema.Table>> dvd;
ClassDiagram.Class>> ElectricalProperties =>=>=> RelationalSchema.Table>> electricalproperties;
ClassDiagram.Class>> ProductArticle =>=>=> RelationalSchema.Table>> productarticle;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> QueryValidationTest =>=>=> RelationalSchema.Table>> queryvalidationtest;
ClassDiagram.Class>> LocalizedTitle =>=>=> RelationalSchema.Table>> localizedtitle;
ClassDiagram.Class>> Magazine =>=>=> RelationalSchema.Table>> magazine;
ClassDiagram.Class>> Library =>=>=> RelationalSchema.Table>> library;
ClassDiagram.Class>> BoostedGetDescriptionLibrary =>=>=> RelationalSchema.Table>> boostedgetdescriptionlibrary;
ClassDiagram.Class>> BoostedDescriptionLibrary =>=>=> RelationalSchema.Table>> boosteddescriptionlibrary;
ClassDiagram.Class>> DynamicBoostedDescriptionLibrary =>=>=> RelationalSchema.Table>> dynamicboosteddescriptionlibrary;
ClassDiagram.Class>> BoostedFieldDescriptionLibrary =>=>=> RelationalSchema.Table>> boostedfielddescriptionlibrary;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> CalendarDay =>=>=> RelationalSchema.Table>> calendarday;
ClassDiagram.Class>> Husband =>=>=> RelationalSchema.Table>> husband;
ClassDiagram.Class>> Music =>=>=> RelationalSchema.Table>> music;
ClassDiagram.Class>> CombiCar =>=>=> RelationalSchema.Table>> combicar;
ClassDiagram.Class>> Bike =>=>=> RelationalSchema.Table>> bike;
ClassDiagram.Class>> AbstractCar =>=>=> RelationalSchema.Table>> abstractcar;
ClassDiagram.Class>> SportCar =>=>=> RelationalSchema.Table>> sportcar;
ClassDiagram.Class>> Tractor =>=>=> RelationalSchema.Table>> tractor;
ClassDiagram.Class>> Territory =>=>=> RelationalSchema.Table>> territory;
ClassDiagram.Class>> SortTest =>=>=> RelationalSchema.Table>> sorttest;
ClassDiagram.Class>> Explorer =>=>=> RelationalSchema.Table>> explorer;
ClassDiagram.Class>> Thatcher =>=>=> RelationalSchema.Table>> thatcher;
ClassDiagram.Class>> Plumber =>=>=> RelationalSchema.Table>> plumber;
ClassDiagram.Class>> BrickLayer =>=>=> RelationalSchema.Table>> bricklayer;
ClassDiagram.Class>> FootballTeam =>=>=> RelationalSchema.Table>> footballteam;
ClassDiagram.Class>> AlternateBook =>=>=> RelationalSchema.Table>> alternatebook;
ClassDiagram.Class>> Kernel =>=>=> RelationalSchema.Table>> kernel;
ClassDiagram.Class>> CriteriaObjectInitializerAndHierarchyInheritanceTest =>=>=> RelationalSchema.Table>> criteriaobjectinitializerandhierarchyinheritancetest;
ClassDiagram.Class>> StrictKernel =>=>=> RelationalSchema.Table>> strictkernel;
ClassDiagram.Class>> ObjectLookupAndDatabaseRetrievalConfigurationTest =>=>=> RelationalSchema.Table>> objectlookupanddatabaseretrievalconfigurationtest;
ClassDiagram.Class>> LargeDocument =>=>=> RelationalSchema.Table>> largedocument;
ClassDiagram.Class>> Suspect =>=>=> RelationalSchema.Table>> suspect;
ClassDiagram.Class>> Detective =>=>=> RelationalSchema.Table>> detective;
ClassDiagram.Class>> Document =>=>=> RelationalSchema.Table>> document;
ClassDiagram.Class>> SnowStorm =>=>=> RelationalSchema.Table>> snowstorm;
ClassDiagram.Class>> TransactionSynchronizationTest =>=>=> RelationalSchema.Table>> transactionsynchronizationtest;
ClassDiagram.Class>> Leaf =>=>=> RelationalSchema.Table>> leaf;
ClassDiagram.Class>> Tree =>=>=> RelationalSchema.Table>> tree;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Clock =>=>=> RelationalSchema.Table>> clock;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Consumer =>=>=> RelationalSchema.Table>> consumer;
ClassDiagram.Class>> CatalogItem =>=>=> RelationalSchema.Table>> catalogitem;
ClassDiagram.Class>> Location =>=>=> RelationalSchema.Table>> location;
ClassDiagram.Class>> LocationGroup =>=>=> RelationalSchema.Table>> locationgroup;
ClassDiagram.Class>> DeleteByTermTest =>=>=> RelationalSchema.Table>> deletebytermtest;
ClassDiagram.Class>> EntityExtendingMappedSuperclassWithCollectionField =>=>=> RelationalSchema.Table>> entityextendingmappedsuperclasswithcollectionfield;
ClassDiagram.Class>> SongWithLongTitle =>=>=> RelationalSchema.Table>> songwithlongtitle;
ClassDiagram.Class>> Catalog =>=>=> RelationalSchema.Table>> catalog;
ClassDiagram.Class>> BridgedReverseBagCollectionUpdateEventTest =>=>=> RelationalSchema.Table>> bridgedreversebagcollectionupdateeventtest;
ClassDiagram.Class>> Employer =>=>=> RelationalSchema.Table>> employer;
ClassDiagram.Class>> Food =>=>=> RelationalSchema.Table>> food;
ClassDiagram.Class>> Drink =>=>=> RelationalSchema.Table>> drink;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> EmailAddress =>=>=> RelationalSchema.Table>> emailaddress;
ClassDiagram.Class>> SpecialPerson =>=>=> RelationalSchema.Table>> specialperson;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> TransientFieldsDirtyTest =>=>=> RelationalSchema.Table>> transientfieldsdirtytest;
ClassDiagram.Class>> BusStop =>=>=> RelationalSchema.Table>> busstop;
ClassDiagram.Class>> BusLine =>=>=> RelationalSchema.Table>> busline;
ClassDiagram.Class>> SecretBook =>=>=> RelationalSchema.Table>> secretbook;
ClassDiagram.Class>> ModernBook =>=>=> RelationalSchema.Table>> modernbook;
ClassDiagram.Class>> ExtendedIssueEntity =>=>=> RelationalSchema.Table>> extendedissueentity;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> IssueEntity =>=>=> RelationalSchema.Table>> issueentity;
ClassDiagram.Class>> LegacyCarPlant =>=>=> RelationalSchema.Table>> legacycarplant;
ClassDiagram.Class>> IndexedEmbeddedProxyRootEntity =>=>=> RelationalSchema.Table>> indexedembeddedproxyrootentity;
ClassDiagram.Class>> LegacyCar =>=>=> RelationalSchema.Table>> legacycar;
ClassDiagram.Class>> AncientBook =>=>=> RelationalSchema.Table>> ancientbook;
ClassDiagram.Class>> Nation =>=>=> RelationalSchema.Table>> nation;
ClassDiagram.Class>> Clock =>=>=> RelationalSchema.Table>> clock;
ClassDiagram.Class>> IndexedEmbeddedProxyLazyEntity =>=>=> RelationalSchema.Table>> indexedembeddedproxylazyentity;
ClassDiagram.Class>> ConcurrentData =>=>=> RelationalSchema.Table>> concurrentdata;
ClassDiagram.Class>> Dvd =>=>=> RelationalSchema.Table>> dvd;
ClassDiagram.Class>> WeirdlyIdentifiedEntity =>=>=> RelationalSchema.Table>> weirdlyidentifiedentity;
ClassDiagram.Class>> LegacyTire =>=>=> RelationalSchema.Table>> legacytire;
ClassDiagram.Class>> ToStringTest =>=>=> RelationalSchema.Table>> tostringtest;
ClassDiagram.Class>> Bretzel =>=>=> RelationalSchema.Table>> bretzel;
ClassDiagram.Class>> DynamicShardingTest =>=>=> RelationalSchema.Table>> dynamicshardingtest;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Animal =>=>=> RelationalSchema.Table>> animal;
ClassDiagram.Class>> Furniture =>=>=> RelationalSchema.Table>> furniture;
ClassDiagram.Class>> Email =>=>=> RelationalSchema.Table>> email;
ClassDiagram.Class>> Animal =>=>=> RelationalSchema.Table>> animal;
ClassDiagram.Class>> Fish =>=>=> RelationalSchema.Table>> fish;
ClassDiagram.Class>> Bird =>=>=> RelationalSchema.Table>> bird;
ClassDiagram.Class>> Mammal =>=>=> RelationalSchema.Table>> mammal;
ClassDiagram.Class>> Eagle =>=>=> RelationalSchema.Table>> eagle;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Profile =>=>=> RelationalSchema.Table>> profile;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> CheeseRollingCompetitor =>=>=> RelationalSchema.Table>> cheeserollingcompetitor;
ClassDiagram.Class>> Article =>=>=> RelationalSchema.Table>> article;
ClassDiagram.Class>> ManualIndexingOnlyInterceptorTest =>=>=> RelationalSchema.Table>> manualindexingonlyinterceptortest;
ClassDiagram.Class>> TotalArticle =>=>=> RelationalSchema.Table>> totalarticle;
ClassDiagram.Class>> Blog =>=>=> RelationalSchema.Table>> blog;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Clock =>=>=> RelationalSchema.Table>> clock;
ClassDiagram.Class>> ClassLevelTestPoI =>=>=> RelationalSchema.Table>> classleveltestpoi;
ClassDiagram.Class>> ExclusiveIndexTest =>=>=> RelationalSchema.Table>> exclusiveindextest;
ClassDiagram.Class>> ProductCatalog =>=>=> RelationalSchema.Table>> productcatalog;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> ProvidedIdEntry =>=>=> RelationalSchema.Table>> providedidentry;
ClassDiagram.Class>> ResourceNotFoundMessageTest =>=>=> RelationalSchema.Table>> resourcenotfoundmessagetest;
ClassDiagram.Class>> LobTest =>=>=> RelationalSchema.Table>> lobtest;
ClassDiagram.Class>> IndexManagerOverrideTest =>=>=> RelationalSchema.Table>> indexmanageroverridetest;
ClassDiagram.Class>> Departments =>=>=> RelationalSchema.Table>> departments;
ClassDiagram.Class>> NoSearchEntity =>=>=> RelationalSchema.Table>> nosearchentity;
ClassDiagram.Class>> EmbeddedEntity =>=>=> RelationalSchema.Table>> embeddedentity;
ClassDiagram.Class>> IndexedEntity =>=>=> RelationalSchema.Table>> indexedentity;
ClassDiagram.Class>> ManualIndexingStrategyTest =>=>=> RelationalSchema.Table>> manualindexingstrategytest;
ClassDiagram.Class>> HibernateSearchSessionFactoryObserverTest =>=>=> RelationalSchema.Table>> hibernatesearchsessionfactoryobservertest;
ClassDiagram.Class>> StoreNormsTest =>=>=> RelationalSchema.Table>> storenormstest;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> LatLongAnnTestPoi =>=>=> RelationalSchema.Table>> latlonganntestpoi;
ClassDiagram.Class>> BlogEntry =>=>=> RelationalSchema.Table>> blogentry;
ClassDiagram.Class>> OrderLine =>=>=> RelationalSchema.Table>> orderline;
ClassDiagram.Class>> TokenizationTest =>=>=> RelationalSchema.Table>> tokenizationtest;
ClassDiagram.Class>> MemberLevelTestPoI =>=>=> RelationalSchema.Table>> memberleveltestpoi;
ClassDiagram.Class>> DynamicBoostedDescLibrary =>=>=> RelationalSchema.Table>> dynamicboosteddesclibrary;
ClassDiagram.Class>> Foo =>=>=> RelationalSchema.Table>> foo;
ClassDiagram.Class>> SubClass =>=>=> RelationalSchema.Table>> subclass;
ClassDiagram.Class>> BaseClass =>=>=> RelationalSchema.Table>> baseclass;
ClassDiagram.Class>> CustomAnalyzerImplementationInClassBridgeTest =>=>=> RelationalSchema.Table>> customanalyzerimplementationinclassbridgetest;
ClassDiagram.Class>> AlarmEntity =>=>=> RelationalSchema.Table>> alarmentity;
ClassDiagram.Class>> Team =>=>=> RelationalSchema.Table>> team;
ClassDiagram.Class>> Entity1 =>=>=> RelationalSchema.Table>> entity1;
ClassDiagram.Class>> CustomAnalyzerDefinitionInClassBridgeTest =>=>=> RelationalSchema.Table>> customanalyzerdefinitioninclassbridgetest;
ClassDiagram.Class>> BlogEntry =>=>=> RelationalSchema.Table>> blogentry;
ClassDiagram.Class>> Article =>=>=> RelationalSchema.Table>> article;
ClassDiagram.Class>> Entity2 =>=>=> RelationalSchema.Table>> entity2;
ClassDiagram.Class>> MyEntity =>=>=> RelationalSchema.Table>> myentity;
ClassDiagram.Class>> Departments =>=>=> RelationalSchema.Table>> departments;
ClassDiagram.Class>> Cloud =>=>=> RelationalSchema.Table>> cloud;
ClassDiagram.Class>> TikaBridgeTest =>=>=> RelationalSchema.Table>> tikabridgetest;
ClassDiagram.Class>> ArrayBridgeNullEmbeddedTestEntity =>=>=> RelationalSchema.Table>> arraybridgenullembeddedtestentity;
ClassDiagram.Class>> Chain =>=>=> RelationalSchema.Table>> chain;
ClassDiagram.Class>> Theater =>=>=> RelationalSchema.Table>> theater;
ClassDiagram.Class>> Movie =>=>=> RelationalSchema.Table>> movie;
ClassDiagram.Class>> Gangster =>=>=> RelationalSchema.Table>> gangster;
ClassDiagram.Class>> IncorrectObjectToString =>=>=> RelationalSchema.Table>> incorrectobjecttostring;
ClassDiagram.Class>> IterableBridgeTestEntity =>=>=> RelationalSchema.Table>> iterablebridgetestentity;
ClassDiagram.Class>> Teacher =>=>=> RelationalSchema.Table>> teacher;
ClassDiagram.Class>> ArrayBridgeTestEntity =>=>=> RelationalSchema.Table>> arraybridgetestentity;
ClassDiagram.Class>> IterableBridgeNullEmbeddedTestEntity =>=>=> RelationalSchema.Table>> iterablebridgenullembeddedtestentity;
ClassDiagram.Class>> IncorrectSet =>=>=> RelationalSchema.Table>> incorrectset;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> MapBridgeNullEmbeddedTestEntity =>=>=> RelationalSchema.Table>> mapbridgenullembeddedtestentity;
ClassDiagram.Class>> IncorrectGet =>=>=> RelationalSchema.Table>> incorrectget;
ClassDiagram.Class>> BridgeConversionErrorTest =>=>=> RelationalSchema.Table>> bridgeconversionerrortest;
ClassDiagram.Class>> NumericBigDecimalBridgeTest =>=>=> RelationalSchema.Table>> numericbigdecimalbridgetest;
ClassDiagram.Class>> MapBridgeTestEntity =>=>=> RelationalSchema.Table>> mapbridgetestentity;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> ConcurrentFlushTest =>=>=> RelationalSchema.Table>> concurrentflushtest;
ClassDiagram.Class>> Soap =>=>=> RelationalSchema.Table>> soap;
ClassDiagram.Class>> Driver =>=>=> RelationalSchema.Table>> driver;
ClassDiagram.Class>> FullTimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> Soap =>=>=> RelationalSchema.Table>> soap;
ClassDiagram.Class>> Driver =>=>=> RelationalSchema.Table>> driver;
ClassDiagram.Class>> FullTimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> OrmFilterTest =>=>=> RelationalSchema.Table>> ormfiltertest;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> Counter =>=>=> RelationalSchema.Table>> counter;
ClassDiagram.Class>> Entite =>=>=> RelationalSchema.Table>> entite;
ClassDiagram.Class>> Categorie =>=>=> RelationalSchema.Table>> categorie;
ClassDiagram.Class>> Domain =>=>=> RelationalSchema.Table>> domain;
ClassDiagram.Class>> Email =>=>=> RelationalSchema.Table>> email;
ClassDiagram.Class>> NotPackagedEntity =>=>=> RelationalSchema.Table>> notpackagedentity;
ClassDiagram.Attribut>> AlternateDocument.id:Long =>=>=> RelationalSchema.Column>> alternatedocument.id PRIMARY KEY;
ClassDiagram.Attribut>> AlternateDocument.title:String =>=>=> RelationalSchema.Column>> alternatedocument.title;
ClassDiagram.Attribut>> AlternateDocument.summary:String =>=>=> RelationalSchema.Column>> alternatedocument.summary;
ClassDiagram.Attribut>> AlternateDocument.text:String =>=>=> RelationalSchema.Column>> alternatedocument.text;
ClassDiagram.Attribut>> MissingSpatialPOI.id:Integer =>=>=> RelationalSchema.Column>> missingspatialpoi.id PRIMARY KEY;
ClassDiagram.Attribut>> MissingSpatialPOI.name:String =>=>=> RelationalSchema.Column>> missingspatialpoi.name;
ClassDiagram.Attribut>> MissingSpatialPOI.type:String =>=>=> RelationalSchema.Column>> missingspatialpoi.type;
ClassDiagram.Attribut>> MissingSpatialPOI.latitude:double =>=>=> RelationalSchema.Column>> missingspatialpoi.latitude;
ClassDiagram.Attribut>> MissingSpatialPOI.longitude:double =>=>=> RelationalSchema.Column>> missingspatialpoi.longitude;
ClassDiagram.Attribut>> SpatialSearchSortByDistanceAndPagingTest.GeneratedName:Log =>=>=> RelationalSchema.Column>> spatialsearchsortbydistanceandpagingtest.GeneratedName;
ClassDiagram.Attribut>> SpatialSearchSortByDistanceAndPagingTest.expected_results_count:int =>=>=> RelationalSchema.Column>> spatialsearchsortbydistanceandpagingtest.expected_results_count;
ClassDiagram.Attribut>> SpatialSearchSortByDistanceAndPagingTest.center_lat:double =>=>=> RelationalSchema.Column>> spatialsearchsortbydistanceandpagingtest.center_lat;
ClassDiagram.Attribut>> SpatialSearchSortByDistanceAndPagingTest.center_lon:double =>=>=> RelationalSchema.Column>> spatialsearchsortbydistanceandpagingtest.center_lon;
ClassDiagram.Attribut>> SpatialSearchSortByDistanceAndPagingTest.search_distance:double =>=>=> RelationalSchema.Column>> spatialsearchsortbydistanceandpagingtest.search_distance;
ClassDiagram.Attribut>> SpatialSearchSortByDistanceAndPagingTest.entitiesidsset:Map<Long,Integer> =>=>=> RelationalSchema.Column>> spatialsearchsortbydistanceandpagingtest.entitiesidsset;
ClassDiagram.Attribut>> SpatialSearchSortByDistanceAndPagingTest.idx:int =>=>=> RelationalSchema.Column>> spatialsearchsortbydistanceandpagingtest.idx;
ClassDiagram.Attribut>> POI.id:Integer =>=>=> RelationalSchema.Column>> poi.id PRIMARY KEY;
ClassDiagram.Attribut>> POI.name:String =>=>=> RelationalSchema.Column>> poi.name;
ClassDiagram.Attribut>> POI.type:String =>=>=> RelationalSchema.Column>> poi.type;
ClassDiagram.Attribut>> POI.latitude:Double =>=>=> RelationalSchema.Column>> poi.latitude;
ClassDiagram.Attribut>> POI.longitude:Double =>=>=> RelationalSchema.Column>> poi.longitude;
ClassDiagram.Attribut>> NonGeoPOI.id:Integer =>=>=> RelationalSchema.Column>> nongeopoi.id PRIMARY KEY;
ClassDiagram.Attribut>> NonGeoPOI.name:String =>=>=> RelationalSchema.Column>> nongeopoi.name;
ClassDiagram.Attribut>> NonGeoPOI.type:String =>=>=> RelationalSchema.Column>> nongeopoi.type;
ClassDiagram.Attribut>> NonGeoPOI.latitude:Double =>=>=> RelationalSchema.Column>> nongeopoi.latitude;
ClassDiagram.Attribut>> NonGeoPOI.longitude:Double =>=>=> RelationalSchema.Column>> nongeopoi.longitude;
ClassDiagram.Attribut>> User.id:Integer =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.homelatitude:Double =>=>=> RelationalSchema.Column>> user.homelatitude;
ClassDiagram.Attribut>> User.homelongitude:Double =>=>=> RelationalSchema.Column>> user.homelongitude;
ClassDiagram.Attribut>> GetterUser.id:Integer =>=>=> RelationalSchema.Column>> getteruser.id PRIMARY KEY;
ClassDiagram.Attribut>> GetterUser.homelatitude:Double =>=>=> RelationalSchema.Column>> getteruser.homelatitude;
ClassDiagram.Attribut>> GetterUser.homelongitude:Double =>=>=> RelationalSchema.Column>> getteruser.homelongitude;
ClassDiagram.Attribut>> Restaurant.id:Integer =>=>=> RelationalSchema.Column>> restaurant.id PRIMARY KEY;
ClassDiagram.Attribut>> Restaurant.name:String =>=>=> RelationalSchema.Column>> restaurant.name;
ClassDiagram.Attribut>> Restaurant.GeneratedName:Position =>=>=> RelationalSchema.Column>> restaurant.GeneratedName;
ClassDiagram.Attribut>> UserEx.id:Integer =>=>=> RelationalSchema.Column>> userex.id PRIMARY KEY;
ClassDiagram.Attribut>> UserEx.homelatitude:Double =>=>=> RelationalSchema.Column>> userex.homelatitude;
ClassDiagram.Attribut>> UserEx.homelongitude:Double =>=>=> RelationalSchema.Column>> userex.homelongitude;
ClassDiagram.Attribut>> UserEx.worklatitude:Double =>=>=> RelationalSchema.Column>> userex.worklatitude;
ClassDiagram.Attribut>> UserEx.worklongitude:Double =>=>=> RelationalSchema.Column>> userex.worklongitude;
ClassDiagram.Attribut>> UserRange.id:Integer =>=>=> RelationalSchema.Column>> userrange.id PRIMARY KEY;
ClassDiagram.Attribut>> UserRange.homelatitude:Double =>=>=> RelationalSchema.Column>> userrange.homelatitude;
ClassDiagram.Attribut>> UserRange.homelongitude:Double =>=>=> RelationalSchema.Column>> userrange.homelongitude;
ClassDiagram.Attribut>> RangeEvent.id:Integer =>=>=> RelationalSchema.Column>> rangeevent.id PRIMARY KEY;
ClassDiagram.Attribut>> RangeEvent.name:String =>=>=> RelationalSchema.Column>> rangeevent.name;
ClassDiagram.Attribut>> RangeEvent.GeneratedName:Date =>=>=> RelationalSchema.Column>> rangeevent.GeneratedName;
ClassDiagram.Attribut>> RangeEvent.latitude:double =>=>=> RelationalSchema.Column>> rangeevent.latitude;
ClassDiagram.Attribut>> RangeEvent.longitude:double =>=>=> RelationalSchema.Column>> rangeevent.longitude;
ClassDiagram.Attribut>> RangeHotel.id:Integer =>=>=> RelationalSchema.Column>> rangehotel.id PRIMARY KEY;
ClassDiagram.Attribut>> RangeHotel.name:String =>=>=> RelationalSchema.Column>> rangehotel.name;
ClassDiagram.Attribut>> RangeHotel.type:String =>=>=> RelationalSchema.Column>> rangehotel.type;
ClassDiagram.Attribut>> RangeHotel.latitude:double =>=>=> RelationalSchema.Column>> rangehotel.latitude;
ClassDiagram.Attribut>> RangeHotel.longitude:double =>=>=> RelationalSchema.Column>> rangehotel.longitude;
ClassDiagram.Attribut>> DoubleIndexedPOI.id:Integer =>=>=> RelationalSchema.Column>> doubleindexedpoi.id PRIMARY KEY;
ClassDiagram.Attribut>> DoubleIndexedPOI.name:String =>=>=> RelationalSchema.Column>> doubleindexedpoi.name;
ClassDiagram.Attribut>> DoubleIndexedPOI.type:String =>=>=> RelationalSchema.Column>> doubleindexedpoi.type;
ClassDiagram.Attribut>> DoubleIndexedPOI.latitude:double =>=>=> RelationalSchema.Column>> doubleindexedpoi.latitude;
ClassDiagram.Attribut>> DoubleIndexedPOI.longitude:double =>=>=> RelationalSchema.Column>> doubleindexedpoi.longitude;
ClassDiagram.Attribut>> Hotel.id:Integer =>=>=> RelationalSchema.Column>> hotel.id PRIMARY KEY;
ClassDiagram.Attribut>> Hotel.name:String =>=>=> RelationalSchema.Column>> hotel.name;
ClassDiagram.Attribut>> Hotel.type:String =>=>=> RelationalSchema.Column>> hotel.type;
ClassDiagram.Attribut>> Hotel.latitude:double =>=>=> RelationalSchema.Column>> hotel.latitude;
ClassDiagram.Attribut>> Hotel.longitude:double =>=>=> RelationalSchema.Column>> hotel.longitude;
ClassDiagram.Attribut>> Event.id:Integer =>=>=> RelationalSchema.Column>> event.id PRIMARY KEY;
ClassDiagram.Attribut>> Event.name:String =>=>=> RelationalSchema.Column>> event.name;
ClassDiagram.Attribut>> Event.GeneratedName:Date =>=>=> RelationalSchema.Column>> event.GeneratedName;
ClassDiagram.Attribut>> Event.latitude:double =>=>=> RelationalSchema.Column>> event.latitude;
ClassDiagram.Attribut>> Event.longitude:double =>=>=> RelationalSchema.Column>> event.longitude;
ClassDiagram.Attribut>> Can.id:Integer =>=>=> RelationalSchema.Column>> can.id PRIMARY KEY;
ClassDiagram.Attribut>> Can.name:String =>=>=> RelationalSchema.Column>> can.name;
ClassDiagram.Attribut>> Person.id:PersonPK =>=>=> RelationalSchema.Column>> person.id;
ClassDiagram.Attribut>> Person.favoritecolor:String =>=>=> RelationalSchema.Column>> person.favoritecolor;
ClassDiagram.Attribut>> Animal.id:Integer =>=>=> RelationalSchema.Column>> animal.id PRIMARY KEY;
ClassDiagram.Attribut>> Animal.name:String =>=>=> RelationalSchema.Column>> animal.name;
ClassDiagram.Attribut>> PlainPerson.id:PersonPK =>=>=> RelationalSchema.Column>> plainperson.id;
ClassDiagram.Attribut>> PlainPerson.favoritecolor:String =>=>=> RelationalSchema.Column>> plainperson.favoritecolor;
ClassDiagram.Attribut>> StudentEntity.regid:RegistrationId =>=>=> RelationalSchema.Column>> studententity.regid;
ClassDiagram.Attribut>> StudentEntity.name:String =>=>=> RelationalSchema.Column>> studententity.name;
ClassDiagram.Attribut>> Person.id:PersonPK =>=>=> RelationalSchema.Column>> person.id;
ClassDiagram.Attribut>> Person.favoritecolor:String =>=>=> RelationalSchema.Column>> person.favoritecolor;
ClassDiagram.Attribut>> PlainPerson.id:PersonPK =>=>=> RelationalSchema.Column>> plainperson.id;
ClassDiagram.Attribut>> PlainPerson.favoritecolor:String =>=>=> RelationalSchema.Column>> plainperson.favoritecolor;
ClassDiagram.Attribut>> PersonCustomDocumentId.personnames:PersonPK =>=>=> RelationalSchema.Column>> personcustomdocumentid.personnames;
ClassDiagram.Attribut>> PersonCustomDocumentId.favoritecolor:String =>=>=> RelationalSchema.Column>> personcustomdocumentid.favoritecolor;
ClassDiagram.Attribut>> PersonCustomDocumentId.securitynumber:String =>=>=> RelationalSchema.Column>> personcustomdocumentid.securitynumber;
ClassDiagram.Attribut>> Article.articleid:long =>=>=> RelationalSchema.Column>> article.articleid PRIMARY KEY;
ClassDiagram.Attribut>> Article.documentid:int =>=>=> RelationalSchema.Column>> article.documentid;
ClassDiagram.Attribut>> Article.text:String =>=>=> RelationalSchema.Column>> article.text;
ClassDiagram.Attribut>> StatisticsTest.directoryprovidername:String =>=>=> RelationalSchema.Column>> statisticstest.directoryprovidername;
ClassDiagram.Attribut>> Document.id:Long =>=>=> RelationalSchema.Column>> document.id PRIMARY KEY;
ClassDiagram.Attribut>> Document.title:String =>=>=> RelationalSchema.Column>> document.title;
ClassDiagram.Attribut>> Document.summary:String =>=>=> RelationalSchema.Column>> document.summary;
ClassDiagram.Attribut>> Document.text:String =>=>=> RelationalSchema.Column>> document.text;
ClassDiagram.Attribut>> Country.id:Integer =>=>=> RelationalSchema.Column>> country.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.name:String =>=>=> RelationalSchema.Column>> country.name;
ClassDiagram.Attribut>> ParentOfBirthEvent.id:Long =>=>=> RelationalSchema.Column>> parentofbirthevent.id PRIMARY KEY;
ClassDiagram.Attribut>> ParentOfBirthEvent.GeneratedName:Event =>=>=> RelationalSchema.Column>> parentofbirthevent.GeneratedName;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.birth:Event =>=>=> RelationalSchema.Column>> person.birth;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Event.id:Long =>=>=> RelationalSchema.Column>> event.id PRIMARY KEY;
ClassDiagram.Attribut>> Root.id:Integer =>=>=> RelationalSchema.Column>> root.id PRIMARY KEY;
ClassDiagram.Attribut>> Root.name:String =>=>=> RelationalSchema.Column>> root.name;
ClassDiagram.Attribut>> LazyItem.id:Integer =>=>=> RelationalSchema.Column>> lazyitem.id PRIMARY KEY;
ClassDiagram.Attribut>> Leaf.id:Integer =>=>=> RelationalSchema.Column>> leaf.id PRIMARY KEY;
ClassDiagram.Attribut>> AbstractProduct.id:Integer =>=>=> RelationalSchema.Column>> abstractproduct.id PRIMARY KEY;
ClassDiagram.Attribut>> AbstractProduct.name:String =>=>=> RelationalSchema.Column>> abstractproduct.name;
ClassDiagram.Attribut>> EmbeddedObjectIdInclusionTest.metadataprovider:AnnotationMetadataProvider =>=>=> RelationalSchema.Column>> embeddedobjectidinclusiontest.metadataprovider;
ClassDiagram.Attribut>> StateCandidate.id:int =>=>=> RelationalSchema.Column>> statecandidate.id PRIMARY KEY;
ClassDiagram.Attribut>> StateCandidate.name:String =>=>=> RelationalSchema.Column>> statecandidate.name;
ClassDiagram.Attribut>> Contact.serialversionuid:long =>=>=> RelationalSchema.Column>> contact.serialversionuid;
ClassDiagram.Attribut>> Contact.id:long =>=>=> RelationalSchema.Column>> contact.id PRIMARY KEY;
ClassDiagram.Attribut>> Contact.email:String =>=>=> RelationalSchema.Column>> contact.email;
ClassDiagram.Attribut>> Contact.createdon:Date =>=>=> RelationalSchema.Column>> contact.createdon;
ClassDiagram.Attribut>> Contact.lastupdon:Date =>=>=> RelationalSchema.Column>> contact.lastupdon;
ClassDiagram.Attribut>> Contact.notes:String =>=>=> RelationalSchema.Column>> contact.notes;
ClassDiagram.Attribut>> Phone.serialversionuid:long =>=>=> RelationalSchema.Column>> phone.serialversionuid;
ClassDiagram.Attribut>> Phone.id:long =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.number:String =>=>=> RelationalSchema.Column>> phone.number;
ClassDiagram.Attribut>> Phone.type:String =>=>=> RelationalSchema.Column>> phone.type;
ClassDiagram.Attribut>> Phone.createdon:Date =>=>=> RelationalSchema.Column>> phone.createdon;
ClassDiagram.Attribut>> Phone.lastupdon:Date =>=>=> RelationalSchema.Column>> phone.lastupdon;
ClassDiagram.Attribut>> Address.serialversionuid:long =>=>=> RelationalSchema.Column>> address.serialversionuid;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.address1:String =>=>=> RelationalSchema.Column>> address.address1;
ClassDiagram.Attribut>> Address.address2:String =>=>=> RelationalSchema.Column>> address.address2;
ClassDiagram.Attribut>> Address.town:String =>=>=> RelationalSchema.Column>> address.town;
ClassDiagram.Attribut>> Address.county:String =>=>=> RelationalSchema.Column>> address.county;
ClassDiagram.Attribut>> Address.country:String =>=>=> RelationalSchema.Column>> address.country;
ClassDiagram.Attribut>> Address.postcode:String =>=>=> RelationalSchema.Column>> address.postcode;
ClassDiagram.Attribut>> Address.active:boolean =>=>=> RelationalSchema.Column>> address.active;
ClassDiagram.Attribut>> Address.createdon:Date =>=>=> RelationalSchema.Column>> address.createdon;
ClassDiagram.Attribut>> Address.lastupdon:Date =>=>=> RelationalSchema.Column>> address.lastupdon;
ClassDiagram.Attribut>> BusinessContact.businessname:String =>=>=> RelationalSchema.Column>> businesscontact.businessname;
ClassDiagram.Attribut>> BusinessContact.url:String =>=>=> RelationalSchema.Column>> businesscontact.url;
ClassDiagram.Attribut>> PersonalContact.serialversionuid:long =>=>=> RelationalSchema.Column>> personalcontact.serialversionuid;
ClassDiagram.Attribut>> PersonalContact.firstname:String =>=>=> RelationalSchema.Column>> personalcontact.firstname;
ClassDiagram.Attribut>> PersonalContact.surname:String =>=>=> RelationalSchema.Column>> personalcontact.surname;
ClassDiagram.Attribut>> PersonalContact.ofbirth:Date =>=>=> RelationalSchema.Column>> personalcontact.ofbirth;
ClassDiagram.Attribut>> PersonalContact.notifybirthday:boolean =>=>=> RelationalSchema.Column>> personalcontact.notifybirthday;
ClassDiagram.Attribut>> PersonalContact.myfacesurl:String =>=>=> RelationalSchema.Column>> personalcontact.myfacesurl;
ClassDiagram.Attribut>> PersonalContact.remindercount:int =>=>=> RelationalSchema.Column>> personalcontact.remindercount;
ClassDiagram.Attribut>> PersonalContact.reset:boolean =>=>=> RelationalSchema.Column>> personalcontact.reset;
ClassDiagram.Attribut>> Product.id:long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> HelpItem.id:Long =>=>=> RelationalSchema.Column>> helpitem.id PRIMARY KEY;
ClassDiagram.Attribut>> HelpItem.version:Long =>=>=> RelationalSchema.Column>> helpitem.version;
ClassDiagram.Attribut>> HelpItem.title:String =>=>=> RelationalSchema.Column>> helpitem.title;
ClassDiagram.Attribut>> HelpItemTag.serialversionuid:long =>=>=> RelationalSchema.Column>> helpitemtag.serialversionuid;
ClassDiagram.Attribut>> HelpItemTag.id:Long =>=>=> RelationalSchema.Column>> helpitemtag.id PRIMARY KEY;
ClassDiagram.Attribut>> HelpItemTag.version:Long =>=>=> RelationalSchema.Column>> helpitemtag.version;
ClassDiagram.Attribut>> Tag.id:Long =>=>=> RelationalSchema.Column>> tag.id PRIMARY KEY;
ClassDiagram.Attribut>> Tag.version:Long =>=>=> RelationalSchema.Column>> tag.version;
ClassDiagram.Attribut>> Tag.name:String =>=>=> RelationalSchema.Column>> tag.name;
ClassDiagram.Attribut>> Person.id:long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> AttributeValue.id:long =>=>=> RelationalSchema.Column>> attributevalue.id PRIMARY KEY;
ClassDiagram.Attribut>> AttributeValue.value:String =>=>=> RelationalSchema.Column>> attributevalue.value;
ClassDiagram.Attribut>> Address.id:Long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.street:String =>=>=> RelationalSchema.Column>> address.street;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Attribute.id:long =>=>=> RelationalSchema.Column>> attribute.id PRIMARY KEY;
ClassDiagram.Attribut>> Place.id:Long =>=>=> RelationalSchema.Column>> place.id PRIMARY KEY;
ClassDiagram.Attribut>> Place.name:String =>=>=> RelationalSchema.Column>> place.name;
ClassDiagram.Attribut>> SimpleChildEntity.id:Long =>=>=> RelationalSchema.Column>> simplechildentity.id PRIMARY KEY;
ClassDiagram.Attribut>> Son.id:Long =>=>=> RelationalSchema.Column>> son.id PRIMARY KEY;
ClassDiagram.Attribut>> Son.name:String =>=>=> RelationalSchema.Column>> son.name;
ClassDiagram.Attribut>> Son.GeneratedName:Dad =>=>=> RelationalSchema.Column>> son.GeneratedName;
ClassDiagram.Attribut>> ProductShootingBrief.id:Long =>=>=> RelationalSchema.Column>> productshootingbrief.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductShootingBrief.name:String =>=>=> RelationalSchema.Column>> productshootingbrief.name;
ClassDiagram.Attribut>> ProductArticle.id:Long =>=>=> RelationalSchema.Column>> productarticle.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductArticle.colorcode:String =>=>=> RelationalSchema.Column>> productarticle.colorcode;
ClassDiagram.Attribut>> ProductReferenceCode.id:Long =>=>=> RelationalSchema.Column>> productreferencecode.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductReferenceCode.rawvalue:String =>=>=> RelationalSchema.Column>> productreferencecode.rawvalue;
ClassDiagram.Attribut>> Grandpa.id:Long =>=>=> RelationalSchema.Column>> grandpa.id PRIMARY KEY;
ClassDiagram.Attribut>> Grandpa.name:String =>=>=> RelationalSchema.Column>> grandpa.name;
ClassDiagram.Attribut>> Dad.id:Long =>=>=> RelationalSchema.Column>> dad.id PRIMARY KEY;
ClassDiagram.Attribut>> Dad.name:String =>=>=> RelationalSchema.Column>> dad.name;
ClassDiagram.Attribut>> Dad.GeneratedName:Grandpa =>=>=> RelationalSchema.Column>> dad.GeneratedName;
ClassDiagram.Attribut>> SimpleParentEntity.id:Long =>=>=> RelationalSchema.Column>> simpleparententity.id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleParentEntity.name:String =>=>=> RelationalSchema.Column>> simpleparententity.name;
ClassDiagram.Attribut>> ProductModel.id:Long =>=>=> RelationalSchema.Column>> productmodel.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.id:Integer =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.ordernumber:String =>=>=> RelationalSchema.Column>> order.ordernumber;
ClassDiagram.Attribut>> Hero.id:Integer =>=>=> RelationalSchema.Column>> hero.id PRIMARY KEY;
ClassDiagram.Attribut>> Hero.secretidentity:String =>=>=> RelationalSchema.Column>> hero.secretidentity;
ClassDiagram.Attribut>> Villain.id_sort:String =>=>=> RelationalSchema.Column>> villain.id_sort;
ClassDiagram.Attribut>> Villain.id:Integer =>=>=> RelationalSchema.Column>> villain.id PRIMARY KEY;
ClassDiagram.Attribut>> Villain.name:String =>=>=> RelationalSchema.Column>> villain.name;
ClassDiagram.Attribut>> Woman.id:Integer =>=>=> RelationalSchema.Column>> woman.id PRIMARY KEY;
ClassDiagram.Attribut>> Woman.name:String =>=>=> RelationalSchema.Column>> woman.name;
ClassDiagram.Attribut>> Man.no_pet:String =>=>=> RelationalSchema.Column>> man.no_pet;
ClassDiagram.Attribut>> Man.id:Integer =>=>=> RelationalSchema.Column>> man.id PRIMARY KEY;
ClassDiagram.Attribut>> Man.name:String =>=>=> RelationalSchema.Column>> man.name;
ClassDiagram.Attribut>> Puppy.id:Integer =>=>=> RelationalSchema.Column>> puppy.id PRIMARY KEY;
ClassDiagram.Attribut>> Puppy.name:String =>=>=> RelationalSchema.Column>> puppy.name;
ClassDiagram.Attribut>> Pet.id:Integer =>=>=> RelationalSchema.Column>> pet.id PRIMARY KEY;
ClassDiagram.Attribut>> Pet.name:String =>=>=> RelationalSchema.Column>> pet.name;
ClassDiagram.Attribut>> Pet.tricks:List<Trick> =>=>=> RelationalSchema.Column>> pet.tricks;
ClassDiagram.Attribut>> EntityB.id:int =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.id:int =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.field:String =>=>=> RelationalSchema.Column>> entityc.field;
ClassDiagram.Attribut>> EntityC.skipped:String =>=>=> RelationalSchema.Column>> entityc.skipped;
ClassDiagram.Attribut>> EntityA.id:int =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.id:int =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.field:String =>=>=> RelationalSchema.Column>> entityc.field;
ClassDiagram.Attribut>> EntityC.skipped:String =>=>=> RelationalSchema.Column>> entityc.skipped;
ClassDiagram.Attribut>> EntityB.id:int =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA.id:int =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.id:int =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.field:String =>=>=> RelationalSchema.Column>> entityc.field;
ClassDiagram.Attribut>> EntityC.skipped:String =>=>=> RelationalSchema.Column>> entityc.skipped;
ClassDiagram.Attribut>> EntityB.id:int =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB.insidethreshold:String =>=>=> RelationalSchema.Column>> entityb.insidethreshold;
ClassDiagram.Attribut>> EntityA.id:int =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.id:int =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.field:String =>=>=> RelationalSchema.Column>> entityc.field;
ClassDiagram.Attribut>> EntityC.skipped:String =>=>=> RelationalSchema.Column>> entityc.skipped;
ClassDiagram.Attribut>> EntityB.id:int =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA.id:int =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> Human.id:int =>=>=> RelationalSchema.Column>> human.id PRIMARY KEY;
ClassDiagram.Attribut>> Human.name:String =>=>=> RelationalSchema.Column>> human.name;
ClassDiagram.Attribut>> Human.surname:String =>=>=> RelationalSchema.Column>> human.surname;
ClassDiagram.Attribut>> EntityC.id:int =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.field:String =>=>=> RelationalSchema.Column>> entityc.field;
ClassDiagram.Attribut>> EntityC.anotherfield:String =>=>=> RelationalSchema.Column>> entityc.anotherfield;
ClassDiagram.Attribut>> EntityC.skipped:String =>=>=> RelationalSchema.Column>> entityc.skipped;
ClassDiagram.Attribut>> EntityB.id:int =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA.id:int =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityA.id:int =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.id:int =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.field:String =>=>=> RelationalSchema.Column>> entityc.field;
ClassDiagram.Attribut>> EntityC.skipped:String =>=>=> RelationalSchema.Column>> entityc.skipped;
ClassDiagram.Attribut>> EntityB.id:int =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> ReferencesIndexedEmbeddedA.id:int =>=>=> RelationalSchema.Column>> referencesindexedembeddeda.id PRIMARY KEY;
ClassDiagram.Attribut>> A.id:int =>=>=> RelationalSchema.Column>> a.id PRIMARY KEY;
ClassDiagram.Attribut>> PathNotIndexedCase.id:int =>=>=> RelationalSchema.Column>> pathnotindexedcase.id PRIMARY KEY;
ClassDiagram.Attribut>> InvalidPrefixCase.id:int =>=>=> RelationalSchema.Column>> invalidprefixcase.id PRIMARY KEY;
ClassDiagram.Attribut>> FieldRenamedEmbeddedEntity.id:Integer =>=>=> RelationalSchema.Column>> fieldrenamedembeddedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> FieldRenamedEmbeddedEntity.field:String =>=>=> RelationalSchema.Column>> fieldrenamedembeddedentity.field;
ClassDiagram.Attribut>> DepthMatchesPathDepthCase.id:int =>=>=> RelationalSchema.Column>> depthmatchespathdepthcase.id PRIMARY KEY;
ClassDiagram.Attribut>> InvalidEmbeddedWithoutPathsCase.id:int =>=>=> RelationalSchema.Column>> invalidembeddedwithoutpathscase.id PRIMARY KEY;
ClassDiagram.Attribut>> InvalidEmbeddedWithoutPathsCase.GeneratedName:Embedded =>=>=> RelationalSchema.Column>> invalidembeddedwithoutpathscase.GeneratedName;
ClassDiagram.Attribut>> DeepPathSimpleTypeCase.id:int =>=>=> RelationalSchema.Column>> deeppathsimpletypecase.id PRIMARY KEY;
ClassDiagram.Attribut>> InvalidEmbeddedPathCase.id:int =>=>=> RelationalSchema.Column>> invalidembeddedpathcase.id PRIMARY KEY;
ClassDiagram.Attribut>> DeepPathWithLeadingPrefixCase.id:int =>=>=> RelationalSchema.Column>> deeppathwithleadingprefixcase.id PRIMARY KEY;
ClassDiagram.Attribut>> B.id:int =>=>=> RelationalSchema.Column>> b.id PRIMARY KEY;
ClassDiagram.Attribut>> ReferencesC.id:int =>=>=> RelationalSchema.Column>> referencesc.id PRIMARY KEY;
ClassDiagram.Attribut>> InvalidEmbeddedNonLeafCase.id:int =>=>=> RelationalSchema.Column>> invalidembeddednonleafcase.id PRIMARY KEY;
ClassDiagram.Attribut>> InvalidNonLeafUseCase.id:int =>=>=> RelationalSchema.Column>> invalidnonleafusecase.id PRIMARY KEY;
ClassDiagram.Attribut>> DepthExceedsPathTestCase.id:int =>=>=> RelationalSchema.Column>> depthexceedspathtestcase.id PRIMARY KEY;
ClassDiagram.Attribut>> InvalidShallowPathCase.id:int =>=>=> RelationalSchema.Column>> invalidshallowpathcase.id PRIMARY KEY;
ClassDiagram.Attribut>> C.id:int =>=>=> RelationalSchema.Column>> c.id PRIMARY KEY;
ClassDiagram.Attribut>> C.indexed:String =>=>=> RelationalSchema.Column>> c.indexed;
ClassDiagram.Attribut>> C.notindexed:String =>=>=> RelationalSchema.Column>> c.notindexed;
ClassDiagram.Attribut>> FieldRenamedContainerEntity.id:Integer =>=>=> RelationalSchema.Column>> fieldrenamedcontainerentity.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityB.id:int =>=>=> RelationalSchema.Column>> entityb.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.id:String =>=>=> RelationalSchema.Column>> entityc.id PRIMARY KEY;
ClassDiagram.Attribut>> EntityC.field:String =>=>=> RelationalSchema.Column>> entityc.field;
ClassDiagram.Attribut>> EntityC.skipped:String =>=>=> RelationalSchema.Column>> entityc.skipped;
ClassDiagram.Attribut>> EntityA.id:int =>=>=> RelationalSchema.Column>> entitya.id PRIMARY KEY;
ClassDiagram.Attribut>> DocumentEntity.id:long =>=>=> RelationalSchema.Column>> documententity.id PRIMARY KEY;
ClassDiagram.Attribut>> DocumentEntity.documentid:String =>=>=> RelationalSchema.Column>> documententity.documentid;
ClassDiagram.Attribut>> EmbeddedEntityNotIndexedTest.metadataprovider:AnnotationMetadataProvider =>=>=> RelationalSchema.Column>> embeddedentitynotindexedtest.metadataprovider;
ClassDiagram.Attribut>> Author.id:Integer =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.name:String =>=>=> RelationalSchema.Column>> author.name;
ClassDiagram.Attribut>> Product.id:Integer =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Level1.id:Integer =>=>=> RelationalSchema.Column>> level1.id PRIMARY KEY;
ClassDiagram.Attribut>> Level3.id:Integer =>=>=> RelationalSchema.Column>> level3.id PRIMARY KEY;
ClassDiagram.Attribut>> Level3.name:String =>=>=> RelationalSchema.Column>> level3.name;
ClassDiagram.Attribut>> ConcreteEntity.content:String =>=>=> RelationalSchema.Column>> concreteentity.content;
ClassDiagram.Attribut>> AbstractEntity.id:Integer =>=>=> RelationalSchema.Column>> abstractentity.id PRIMARY KEY;
ClassDiagram.Attribut>> LazyAbstractEntityReference.id:Integer =>=>=> RelationalSchema.Column>> lazyabstractentityreference.id PRIMARY KEY;
ClassDiagram.Attribut>> Level2.id:Integer =>=>=> RelationalSchema.Column>> level2.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.id:Long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.street:String =>=>=> RelationalSchema.Column>> address.street;
ClassDiagram.Attribut>> Address.ownedby:Person =>=>=> RelationalSchema.Column>> address.ownedby;
ClassDiagram.Attribut>> Address.residents:Set<Resident> =>=>=> RelationalSchema.Column>> address.residents;
ClassDiagram.Attribut>> Leaf.id:Integer =>=>=> RelationalSchema.Column>> leaf.id PRIMARY KEY;
ClassDiagram.Attribut>> CollectionItem.id:Integer =>=>=> RelationalSchema.Column>> collectionitem.id PRIMARY KEY;
ClassDiagram.Attribut>> IndexedEntity.field1_field_name:String =>=>=> RelationalSchema.Column>> indexedentity.field1_field_name;
ClassDiagram.Attribut>> IndexedEntity.field2_field_name:String =>=>=> RelationalSchema.Column>> indexedentity.field2_field_name;
ClassDiagram.Attribut>> IndexedEntity.id:Integer =>=>=> RelationalSchema.Column>> indexedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> IndexedEntity.name:String =>=>=> RelationalSchema.Column>> indexedentity.name;
ClassDiagram.Attribut>> IndexedEntity.keywords:Set<String> =>=>=> RelationalSchema.Column>> indexedentity.keywords;
ClassDiagram.Attribut>> Root.id:Integer =>=>=> RelationalSchema.Column>> root.id PRIMARY KEY;
ClassDiagram.Attribut>> Root.name:String =>=>=> RelationalSchema.Column>> root.name;
ClassDiagram.Attribut>> State.id:Integer =>=>=> RelationalSchema.Column>> state.id PRIMARY KEY;
ClassDiagram.Attribut>> State.name:String =>=>=> RelationalSchema.Column>> state.name;
ClassDiagram.Attribut>> NonIndexedEntity.id:int =>=>=> RelationalSchema.Column>> nonindexedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> PersonWithBrokenSocialSecurityNumber.id:Long =>=>=> RelationalSchema.Column>> personwithbrokensocialsecuritynumber.id PRIMARY KEY;
ClassDiagram.Attribut>> PersonWithBrokenSocialSecurityNumber.name:String =>=>=> RelationalSchema.Column>> personwithbrokensocialsecuritynumber.name;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> BrokenMammal.id:Long =>=>=> RelationalSchema.Column>> brokenmammal.id PRIMARY KEY;
ClassDiagram.Attribut>> SocialPerson.id:Long =>=>=> RelationalSchema.Column>> socialperson.id PRIMARY KEY;
ClassDiagram.Attribut>> SocialPerson.name:String =>=>=> RelationalSchema.Column>> socialperson.name;
ClassDiagram.Attribut>> WorkingPerson.id:Integer =>=>=> RelationalSchema.Column>> workingperson.id PRIMARY KEY;
ClassDiagram.Attribut>> WorkingPerson.name:String =>=>=> RelationalSchema.Column>> workingperson.name;
ClassDiagram.Attribut>> Tower.id:Long =>=>=> RelationalSchema.Column>> tower.id PRIMARY KEY;
ClassDiagram.Attribut>> Tower.name:String =>=>=> RelationalSchema.Column>> tower.name;
ClassDiagram.Attribut>> ProductFeature.id:Integer =>=>=> RelationalSchema.Column>> productfeature.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductFeature.name:String =>=>=> RelationalSchema.Column>> productfeature.name;
ClassDiagram.Attribut>> Author.id:Integer =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.name:String =>=>=> RelationalSchema.Column>> author.name;
ClassDiagram.Attribut>> Clock.id:Long =>=>=> RelationalSchema.Column>> clock.id PRIMARY KEY;
ClassDiagram.Attribut>> Clock.model:String =>=>=> RelationalSchema.Column>> clock.model;
ClassDiagram.Attribut>> Clock.brand:String =>=>=> RelationalSchema.Column>> clock.brand;
ClassDiagram.Attribut>> Clock.durability:Long =>=>=> RelationalSchema.Column>> clock.durability;
ClassDiagram.Attribut>> Truck.id:int =>=>=> RelationalSchema.Column>> truck.id PRIMARY KEY;
ClassDiagram.Attribut>> Truck.horsepower:Integer =>=>=> RelationalSchema.Column>> truck.horsepower;
ClassDiagram.Attribut>> Ingredient.id:int =>=>=> RelationalSchema.Column>> ingredient.id PRIMARY KEY;
ClassDiagram.Attribut>> Ingredient.name:String =>=>=> RelationalSchema.Column>> ingredient.name;
ClassDiagram.Attribut>> Recipe.id:int =>=>=> RelationalSchema.Column>> recipe.id PRIMARY KEY;
ClassDiagram.Attribut>> Recipe.name:String =>=>=> RelationalSchema.Column>> recipe.name;
ClassDiagram.Attribut>> Company.id:int =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.companyname:String =>=>=> RelationalSchema.Column>> company.companyname;
ClassDiagram.Attribut>> Car.collating_analyzer_name:String =>=>=> RelationalSchema.Column>> car.collating_analyzer_name;
ClassDiagram.Attribut>> Car.cubic_capacity_:String =>=>=> RelationalSchema.Column>> car.cubic_capacity_;
ClassDiagram.Attribut>> Car.//thosefacetnamesmustbedifferentfromthesourcefieldname,fortestingpurposescubic_capacity__facet__encoding:String =>=>=> RelationalSchema.Column>> car.//thosefacetnamesmustbedifferentfromthesourcefieldname,fortestingpurposescubic_capacity__facet__encoding;
ClassDiagram.Attribut>> Car.cubic_capacity__facet_numeric_encoding:String =>=>=> RelationalSchema.Column>> car.cubic_capacity__facet_numeric_encoding;
ClassDiagram.Attribut>> Car.id:int =>=>=> RelationalSchema.Column>> car.id PRIMARY KEY;
ClassDiagram.Attribut>> Car.color:String =>=>=> RelationalSchema.Column>> car.color;
ClassDiagram.Attribut>> Car.make:String =>=>=> RelationalSchema.Column>> car.make;
ClassDiagram.Attribut>> Car.cubiccapacity:Integer =>=>=> RelationalSchema.Column>> car.cubiccapacity;
ClassDiagram.Attribut>> CompanyFacility.id:int =>=>=> RelationalSchema.Column>> companyfacility.id PRIMARY KEY;
ClassDiagram.Attribut>> CompanyFacility.country:String =>=>=> RelationalSchema.Column>> companyfacility.country;
ClassDiagram.Attribut>> Author.id:Integer =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.name:String =>=>=> RelationalSchema.Column>> author.name;
ClassDiagram.Attribut>> Cd.id:int =>=>=> RelationalSchema.Column>> cd.id PRIMARY KEY;
ClassDiagram.Attribut>> Cd.name:String =>=>=> RelationalSchema.Column>> cd.name;
ClassDiagram.Attribut>> Cd.price:int =>=>=> RelationalSchema.Column>> cd.price;
ClassDiagram.Attribut>> Cd.releaseyear:Date =>=>=> RelationalSchema.Column>> cd.releaseyear;
ClassDiagram.Attribut>> Book.id:Integer =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.name:String =>=>=> RelationalSchema.Column>> book.name;
ClassDiagram.Attribut>> Fruit.id:int =>=>=> RelationalSchema.Column>> fruit.id PRIMARY KEY;
ClassDiagram.Attribut>> Fruit.name:String =>=>=> RelationalSchema.Column>> fruit.name;
ClassDiagram.Attribut>> Fruit.price:Double =>=>=> RelationalSchema.Column>> fruit.price;
ClassDiagram.Attribut>> ObjectLoadingPublicFieldTest.fieldfoo:Query =>=>=> RelationalSchema.Column>> objectloadingpublicfieldtest.fieldfoo;
ClassDiagram.Attribut>> ObjectLoadingPublicFieldTest.fieldbar:Query =>=>=> RelationalSchema.Column>> objectloadingpublicfieldtest.fieldbar;
ClassDiagram.Attribut>> Book.id:Integer =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.body:String =>=>=> RelationalSchema.Column>> book.body;
ClassDiagram.Attribut>> Book.summary:String =>=>=> RelationalSchema.Column>> book.summary;
ClassDiagram.Attribut>> Book.main:Author =>=>=> RelationalSchema.Column>> book.main;
ClassDiagram.Attribut>> Book.publication:Date =>=>=> RelationalSchema.Column>> book.publication;
ClassDiagram.Attribut>> Value.id:int =>=>=> RelationalSchema.Column>> value.id PRIMARY KEY;
ClassDiagram.Attribut>> Value.value:String =>=>=> RelationalSchema.Column>> value.value;
ClassDiagram.Attribut>> Value.fallback:String =>=>=> RelationalSchema.Column>> value.fallback;
ClassDiagram.Attribut>> Value.dummy:String =>=>=> RelationalSchema.Column>> value.dummy;
ClassDiagram.Attribut>> ProgrammaticConfiguredValue.id:int =>=>=> RelationalSchema.Column>> programmaticconfiguredvalue.id PRIMARY KEY;
ClassDiagram.Attribut>> ProgrammaticConfiguredValue.value:String =>=>=> RelationalSchema.Column>> programmaticconfiguredvalue.value;
ClassDiagram.Attribut>> Clock.id:Integer =>=>=> RelationalSchema.Column>> clock.id PRIMARY KEY;
ClassDiagram.Attribut>> Clock.brand:String =>=>=> RelationalSchema.Column>> clock.brand;
ClassDiagram.Attribut>> Spouse.id:Long =>=>=> RelationalSchema.Column>> spouse.id PRIMARY KEY;
ClassDiagram.Attribut>> Spouse.firstname:String =>=>=> RelationalSchema.Column>> spouse.firstname;
ClassDiagram.Attribut>> TestEntity.entityid:int =>=>=> RelationalSchema.Column>> testentity.entityid PRIMARY KEY;
ClassDiagram.Attribut>> TestEntity.documentid:String =>=>=> RelationalSchema.Column>> testentity.documentid;
ClassDiagram.Attribut>> PrimarySchool.id:Short =>=>=> RelationalSchema.Column>> primaryschool.id PRIMARY KEY;
ClassDiagram.Attribut>> College.identifier:Long =>=>=> RelationalSchema.Column>> college.identifier PRIMARY KEY;
ClassDiagram.Attribut>> University.id:Integer =>=>=> RelationalSchema.Column>> university.id PRIMARY KEY;
ClassDiagram.Attribut>> HighSchool.identifier:Long =>=>=> RelationalSchema.Column>> highschool.identifier PRIMARY KEY;
ClassDiagram.Attribut>> Dvd.id:Integer =>=>=> RelationalSchema.Column>> dvd.id PRIMARY KEY;
ClassDiagram.Attribut>> Dvd.title:String =>=>=> RelationalSchema.Column>> dvd.title;
ClassDiagram.Attribut>> Dvd.description:String =>=>=> RelationalSchema.Column>> dvd.description;
ClassDiagram.Attribut>> ElectricalProperties.id:int =>=>=> RelationalSchema.Column>> electricalproperties.id PRIMARY KEY;
ClassDiagram.Attribut>> ElectricalProperties.content:String =>=>=> RelationalSchema.Column>> electricalproperties.content;
ClassDiagram.Attribut>> ProductArticle.articleid:Integer =>=>=> RelationalSchema.Column>> productarticle.articleid PRIMARY KEY;
ClassDiagram.Attribut>> ProductArticle.header:String =>=>=> RelationalSchema.Column>> productarticle.header;
ClassDiagram.Attribut>> ProductArticle.latitude:Double =>=>=> RelationalSchema.Column>> productarticle.latitude;
ClassDiagram.Attribut>> ProductArticle.longitude:Double =>=>=> RelationalSchema.Column>> productarticle.longitude;
ClassDiagram.Attribut>> ProductArticle.creation:Date =>=>=> RelationalSchema.Column>> productarticle.creation;
ClassDiagram.Attribut>> Employee.id:Integer =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.lastname:String =>=>=> RelationalSchema.Column>> employee.lastname;
ClassDiagram.Attribut>> Employee.dept:String =>=>=> RelationalSchema.Column>> employee.dept;
ClassDiagram.Attribut>> Employee.hire:Date =>=>=> RelationalSchema.Column>> employee.hire;
ClassDiagram.Attribut>> QueryValidationTest.GeneratedName:FullTextSession =>=>=> RelationalSchema.Column>> queryvalidationtest.GeneratedName;
ClassDiagram.Attribut>> LocalizedTitle.id:Long =>=>=> RelationalSchema.Column>> localizedtitle.id PRIMARY KEY;
ClassDiagram.Attribut>> LocalizedTitle.GeneratedName:Locale =>=>=> RelationalSchema.Column>> localizedtitle.GeneratedName;
ClassDiagram.Attribut>> LocalizedTitle.value:String =>=>=> RelationalSchema.Column>> localizedtitle.value;
ClassDiagram.Attribut>> Magazine.id:Long =>=>=> RelationalSchema.Column>> magazine.id PRIMARY KEY;
ClassDiagram.Attribut>> Magazine.description:String =>=>=> RelationalSchema.Column>> magazine.description;
ClassDiagram.Attribut>> Magazine.GeneratedName:Title =>=>=> RelationalSchema.Column>> magazine.GeneratedName;
ClassDiagram.Attribut>> Library.id:int =>=>=> RelationalSchema.Column>> library.id PRIMARY KEY;
ClassDiagram.Attribut>> Library.title:String =>=>=> RelationalSchema.Column>> library.title;
ClassDiagram.Attribut>> Library.author:String =>=>=> RelationalSchema.Column>> library.author;
ClassDiagram.Attribut>> Library.description:String =>=>=> RelationalSchema.Column>> library.description;
ClassDiagram.Attribut>> BoostedGetDescriptionLibrary.id:int =>=>=> RelationalSchema.Column>> boostedgetdescriptionlibrary.id PRIMARY KEY;
ClassDiagram.Attribut>> BoostedGetDescriptionLibrary.title:String =>=>=> RelationalSchema.Column>> boostedgetdescriptionlibrary.title;
ClassDiagram.Attribut>> BoostedGetDescriptionLibrary.author:String =>=>=> RelationalSchema.Column>> boostedgetdescriptionlibrary.author;
ClassDiagram.Attribut>> BoostedGetDescriptionLibrary.description:String =>=>=> RelationalSchema.Column>> boostedgetdescriptionlibrary.description;
ClassDiagram.Attribut>> BoostedDescriptionLibrary.id:int =>=>=> RelationalSchema.Column>> boosteddescriptionlibrary.id PRIMARY KEY;
ClassDiagram.Attribut>> BoostedDescriptionLibrary.title:String =>=>=> RelationalSchema.Column>> boosteddescriptionlibrary.title;
ClassDiagram.Attribut>> BoostedDescriptionLibrary.author:String =>=>=> RelationalSchema.Column>> boosteddescriptionlibrary.author;
ClassDiagram.Attribut>> BoostedDescriptionLibrary.description:String =>=>=> RelationalSchema.Column>> boosteddescriptionlibrary.description;
ClassDiagram.Attribut>> DynamicBoostedDescriptionLibrary.id:int =>=>=> RelationalSchema.Column>> dynamicboosteddescriptionlibrary.id PRIMARY KEY;
ClassDiagram.Attribut>> DynamicBoostedDescriptionLibrary.dynscore:float =>=>=> RelationalSchema.Column>> dynamicboosteddescriptionlibrary.dynscore;
ClassDiagram.Attribut>> DynamicBoostedDescriptionLibrary.name:String =>=>=> RelationalSchema.Column>> dynamicboosteddescriptionlibrary.name;
ClassDiagram.Attribut>> BoostedFieldDescriptionLibrary.id:int =>=>=> RelationalSchema.Column>> boostedfielddescriptionlibrary.id PRIMARY KEY;
ClassDiagram.Attribut>> BoostedFieldDescriptionLibrary.title:String =>=>=> RelationalSchema.Column>> boostedfielddescriptionlibrary.title;
ClassDiagram.Attribut>> BoostedFieldDescriptionLibrary.author:String =>=>=> RelationalSchema.Column>> boostedfielddescriptionlibrary.author;
ClassDiagram.Attribut>> BoostedFieldDescriptionLibrary.description:String =>=>=> RelationalSchema.Column>> boostedfielddescriptionlibrary.description;
ClassDiagram.Attribut>> Person.id:Integer =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> CalendarDay.id:Integer =>=>=> RelationalSchema.Column>> calendarday.id PRIMARY KEY;
ClassDiagram.Attribut>> CalendarDay.day:Date =>=>=> RelationalSchema.Column>> calendarday.day;
ClassDiagram.Attribut>> Husband.id:Long =>=>=> RelationalSchema.Column>> husband.id PRIMARY KEY;
ClassDiagram.Attribut>> Husband.lastname:String =>=>=> RelationalSchema.Column>> husband.lastname;
ClassDiagram.Attribut>> Husband.GeneratedName:Spouse =>=>=> RelationalSchema.Column>> husband.GeneratedName;
ClassDiagram.Attribut>> Music.id:Long =>=>=> RelationalSchema.Column>> music.id PRIMARY KEY;
ClassDiagram.Attribut>> Music.title:String =>=>=> RelationalSchema.Column>> music.title;
ClassDiagram.Attribut>> Music.authors:Set<Author> =>=>=> RelationalSchema.Column>> music.authors;
ClassDiagram.Attribut>> Bike.id:Integer =>=>=> RelationalSchema.Column>> bike.id PRIMARY KEY;
ClassDiagram.Attribut>> Bike.kurztext:String =>=>=> RelationalSchema.Column>> bike.kurztext;
ClassDiagram.Attribut>> Bike.hascolor:boolean =>=>=> RelationalSchema.Column>> bike.hascolor;
ClassDiagram.Attribut>> AbstractCar.id:Integer =>=>=> RelationalSchema.Column>> abstractcar.id PRIMARY KEY;
ClassDiagram.Attribut>> AbstractCar.kurztext:String =>=>=> RelationalSchema.Column>> abstractcar.kurztext;
ClassDiagram.Attribut>> AbstractCar.hascolor:boolean =>=>=> RelationalSchema.Column>> abstractcar.hascolor;
ClassDiagram.Attribut>> Tractor.id:Integer =>=>=> RelationalSchema.Column>> tractor.id PRIMARY KEY;
ClassDiagram.Attribut>> Tractor.kurztext:String =>=>=> RelationalSchema.Column>> tractor.kurztext;
ClassDiagram.Attribut>> Tractor.hascolor:boolean =>=>=> RelationalSchema.Column>> tractor.hascolor;
ClassDiagram.Attribut>> Tractor.owner:String =>=>=> RelationalSchema.Column>> tractor.owner;
ClassDiagram.Attribut>> Territory.id:int =>=>=> RelationalSchema.Column>> territory.id PRIMARY KEY;
ClassDiagram.Attribut>> Territory.name:String =>=>=> RelationalSchema.Column>> territory.name;
ClassDiagram.Attribut>> SortTest.GeneratedName:FullTextSession =>=>=> RelationalSchema.Column>> sorttest.GeneratedName;
ClassDiagram.Attribut>> SortTest.GeneratedName:QueryParser =>=>=> RelationalSchema.Column>> sorttest.GeneratedName;
ClassDiagram.Attribut>> Explorer.id:int =>=>=> RelationalSchema.Column>> explorer.id PRIMARY KEY;
ClassDiagram.Attribut>> Explorer.exploredcountries:int =>=>=> RelationalSchema.Column>> explorer.exploredcountries;
ClassDiagram.Attribut>> Explorer.nameparts:Map<String,String> =>=>=> RelationalSchema.Column>> explorer.nameparts;
ClassDiagram.Attribut>> Thatcher.id:int =>=>=> RelationalSchema.Column>> thatcher.id PRIMARY KEY;
ClassDiagram.Attribut>> Thatcher.//intentionallywithoutsortablefield//@sortablefield(forfield:String =>=>=> RelationalSchema.Column>> thatcher.//intentionallywithoutsortablefield//@sortablefield(forfield;
ClassDiagram.Attribut>> Plumber.id:int =>=>=> RelationalSchema.Column>> plumber.id PRIMARY KEY;
ClassDiagram.Attribut>> Plumber.//intentionallywithoutsortablefield//@sortablefield(forfield:String =>=>=> RelationalSchema.Column>> plumber.//intentionallywithoutsortablefield//@sortablefield(forfield;
ClassDiagram.Attribut>> BrickLayer.id:int =>=>=> RelationalSchema.Column>> bricklayer.id PRIMARY KEY;
ClassDiagram.Attribut>> BrickLayer.name:String =>=>=> RelationalSchema.Column>> bricklayer.name;
ClassDiagram.Attribut>> BrickLayer.lastname:String =>=>=> RelationalSchema.Column>> bricklayer.lastname;
ClassDiagram.Attribut>> FootballTeam.id:int =>=>=> RelationalSchema.Column>> footballteam.id PRIMARY KEY;
ClassDiagram.Attribut>> FootballTeam.name:String =>=>=> RelationalSchema.Column>> footballteam.name;
ClassDiagram.Attribut>> FootballTeam.debtinmillions:double =>=>=> RelationalSchema.Column>> footballteam.debtinmillions;
ClassDiagram.Attribut>> FootballTeam.nrtitles:int =>=>=> RelationalSchema.Column>> footballteam.nrtitles;
ClassDiagram.Attribut>> AlternateBook.id:Integer =>=>=> RelationalSchema.Column>> alternatebook.id PRIMARY KEY;
ClassDiagram.Attribut>> AlternateBook.summary:String =>=>=> RelationalSchema.Column>> alternatebook.summary;
ClassDiagram.Attribut>> Kernel.id:Integer =>=>=> RelationalSchema.Column>> kernel.id PRIMARY KEY;
ClassDiagram.Attribut>> Kernel.codename:String =>=>=> RelationalSchema.Column>> kernel.codename;
ClassDiagram.Attribut>> Kernel.product:String =>=>=> RelationalSchema.Column>> kernel.product;
ClassDiagram.Attribut>> CriteriaObjectInitializerAndHierarchyInheritanceTest.byteman:BytemanAccessor =>=>=> RelationalSchema.Column>> criteriaobjectinitializerandhierarchyinheritancetest.byteman;
ClassDiagram.Attribut>> StrictKernel.id:Integer =>=>=> RelationalSchema.Column>> strictkernel.id PRIMARY KEY;
ClassDiagram.Attribut>> StrictKernel.codename:String =>=>=> RelationalSchema.Column>> strictkernel.codename;
ClassDiagram.Attribut>> StrictKernel.product:String =>=>=> RelationalSchema.Column>> strictkernel.product;
ClassDiagram.Attribut>> ObjectLookupAndDatabaseRetrievalConfigurationTest.byteman:BytemanAccessor =>=>=> RelationalSchema.Column>> objectlookupanddatabaseretrievalconfigurationtest.byteman;
ClassDiagram.Attribut>> LargeDocument.id:Long =>=>=> RelationalSchema.Column>> largedocument.id PRIMARY KEY;
ClassDiagram.Attribut>> LargeDocument.title:String =>=>=> RelationalSchema.Column>> largedocument.title;
ClassDiagram.Attribut>> LargeDocument.summary:String =>=>=> RelationalSchema.Column>> largedocument.summary;
ClassDiagram.Attribut>> LargeDocument.text:String =>=>=> RelationalSchema.Column>> largedocument.text;
ClassDiagram.Attribut>> Suspect.id:Integer =>=>=> RelationalSchema.Column>> suspect.id PRIMARY KEY;
ClassDiagram.Attribut>> Suspect.name:String =>=>=> RelationalSchema.Column>> suspect.name;
ClassDiagram.Attribut>> Suspect.physicaldescription:String =>=>=> RelationalSchema.Column>> suspect.physicaldescription;
ClassDiagram.Attribut>> Suspect.suspectcharge:String =>=>=> RelationalSchema.Column>> suspect.suspectcharge;
ClassDiagram.Attribut>> Detective.id:Integer =>=>=> RelationalSchema.Column>> detective.id PRIMARY KEY;
ClassDiagram.Attribut>> Detective.name:String =>=>=> RelationalSchema.Column>> detective.name;
ClassDiagram.Attribut>> Detective.physicaldescription:String =>=>=> RelationalSchema.Column>> detective.physicaldescription;
ClassDiagram.Attribut>> Detective.badge:String =>=>=> RelationalSchema.Column>> detective.badge;
ClassDiagram.Attribut>> Document.id:Long =>=>=> RelationalSchema.Column>> document.id PRIMARY KEY;
ClassDiagram.Attribut>> Document.title:String =>=>=> RelationalSchema.Column>> document.title;
ClassDiagram.Attribut>> Document.summary:String =>=>=> RelationalSchema.Column>> document.summary;
ClassDiagram.Attribut>> Document.text:String =>=>=> RelationalSchema.Column>> document.text;
ClassDiagram.Attribut>> SnowStorm.id:Long =>=>=> RelationalSchema.Column>> snowstorm.id PRIMARY KEY;
ClassDiagram.Attribut>> SnowStorm.GeneratedName:Date =>=>=> RelationalSchema.Column>> snowstorm.GeneratedName;
ClassDiagram.Attribut>> SnowStorm.location:String =>=>=> RelationalSchema.Column>> snowstorm.location;
ClassDiagram.Attribut>> Leaf.id:int =>=>=> RelationalSchema.Column>> leaf.id PRIMARY KEY;
ClassDiagram.Attribut>> Tree.id:long =>=>=> RelationalSchema.Column>> tree.id PRIMARY KEY;
ClassDiagram.Attribut>> Tree.species:String =>=>=> RelationalSchema.Column>> tree.species;
ClassDiagram.Attribut>> Book.id:Integer =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.body:String =>=>=> RelationalSchema.Column>> book.body;
ClassDiagram.Attribut>> Book.summary:String =>=>=> RelationalSchema.Column>> book.summary;
ClassDiagram.Attribut>> Book.main:Author =>=>=> RelationalSchema.Column>> book.main;
ClassDiagram.Attribut>> Book.publication:Date =>=>=> RelationalSchema.Column>> book.publication;
ClassDiagram.Attribut>> Author.id:Integer =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.name:String =>=>=> RelationalSchema.Column>> author.name;
ClassDiagram.Attribut>> Clock.id:Integer =>=>=> RelationalSchema.Column>> clock.id PRIMARY KEY;
ClassDiagram.Attribut>> Clock.brand:String =>=>=> RelationalSchema.Column>> clock.brand;
ClassDiagram.Attribut>> Item.itemid:Long =>=>=> RelationalSchema.Column>> item.itemid PRIMARY KEY;
ClassDiagram.Attribut>> Item.name:String =>=>=> RelationalSchema.Column>> item.name;
ClassDiagram.Attribut>> Item.color:String =>=>=> RelationalSchema.Column>> item.color;
ClassDiagram.Attribut>> Consumer.consumerid:Long =>=>=> RelationalSchema.Column>> consumer.consumerid PRIMARY KEY;
ClassDiagram.Attribut>> Consumer.name:String =>=>=> RelationalSchema.Column>> consumer.name;
ClassDiagram.Attribut>> CatalogItem.catalogitemid:Long =>=>=> RelationalSchema.Column>> catalogitem.catalogitemid PRIMARY KEY;
ClassDiagram.Attribut>> Location.locationid:Long =>=>=> RelationalSchema.Column>> location.locationid PRIMARY KEY;
ClassDiagram.Attribut>> Location.name:String =>=>=> RelationalSchema.Column>> location.name;
ClassDiagram.Attribut>> LocationGroup.groupid:Long =>=>=> RelationalSchema.Column>> locationgroup.groupid PRIMARY KEY;
ClassDiagram.Attribut>> LocationGroup.name:String =>=>=> RelationalSchema.Column>> locationgroup.name;
ClassDiagram.Attribut>> SongWithLongTitle.id:Long =>=>=> RelationalSchema.Column>> songwithlongtitle.id PRIMARY KEY;
ClassDiagram.Attribut>> SongWithLongTitle.band:String =>=>=> RelationalSchema.Column>> songwithlongtitle.band;
ClassDiagram.Attribut>> SongWithLongTitle.title:String =>=>=> RelationalSchema.Column>> songwithlongtitle.title;
ClassDiagram.Attribut>> Catalog.catalogid:Long =>=>=> RelationalSchema.Column>> catalog.catalogid PRIMARY KEY;
ClassDiagram.Attribut>> Catalog.name:String =>=>=> RelationalSchema.Column>> catalog.name;
ClassDiagram.Attribut>> Employer.id:long =>=>=> RelationalSchema.Column>> employer.id PRIMARY KEY;
ClassDiagram.Attribut>> Employer.name:String =>=>=> RelationalSchema.Column>> employer.name;
ClassDiagram.Attribut>> Food.id:Integer =>=>=> RelationalSchema.Column>> food.id PRIMARY KEY;
ClassDiagram.Attribut>> Food.name:String =>=>=> RelationalSchema.Column>> food.name;
ClassDiagram.Attribut>> Drink.id:Integer =>=>=> RelationalSchema.Column>> drink.id PRIMARY KEY;
ClassDiagram.Attribut>> Drink.name:String =>=>=> RelationalSchema.Column>> drink.name;
ClassDiagram.Attribut>> Person.id:int =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> EmailAddress.id:int =>=>=> RelationalSchema.Column>> emailaddress.id PRIMARY KEY;
ClassDiagram.Attribut>> EmailAddress.isdefaultaddress:boolean =>=>=> RelationalSchema.Column>> emailaddress.isdefaultaddress;
ClassDiagram.Attribut>> EmailAddress.address:String =>=>=> RelationalSchema.Column>> emailaddress.address;
ClassDiagram.Attribut>> Employee.id:long =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> BusStop.id:Long =>=>=> RelationalSchema.Column>> busstop.id PRIMARY KEY;
ClassDiagram.Attribut>> BusStop.roadname:String =>=>=> RelationalSchema.Column>> busstop.roadname;
ClassDiagram.Attribut>> BusStop.servicecomments:String =>=>=> RelationalSchema.Column>> busstop.servicecomments;
ClassDiagram.Attribut>> BusStop.starting:Date =>=>=> RelationalSchema.Column>> busstop.starting;
ClassDiagram.Attribut>> BusStop.transientnummethodcalls:int =>=>=> RelationalSchema.Column>> busstop.transientnummethodcalls;
ClassDiagram.Attribut>> BusLine.id:Long =>=>=> RelationalSchema.Column>> busline.id PRIMARY KEY;
ClassDiagram.Attribut>> BusLine.buslinename:String =>=>=> RelationalSchema.Column>> busline.buslinename;
ClassDiagram.Attribut>> BusLine.buslinecode:Integer =>=>=> RelationalSchema.Column>> busline.buslinecode;
ClassDiagram.Attribut>> BusLine.operating:boolean =>=>=> RelationalSchema.Column>> busline.operating;
ClassDiagram.Attribut>> SecretBook.allcopiesburnt:boolean =>=>=> RelationalSchema.Column>> secretbook.allcopiesburnt;
ClassDiagram.Attribut>> ModernBook.isbn:String =>=>=> RelationalSchema.Column>> modernbook.isbn;
ClassDiagram.Attribut>> ExtendedIssueEntity.id:Long =>=>=> RelationalSchema.Column>> extendedissueentity.id;
ClassDiagram.Attribut>> Book.id:long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> IssueEntity.jiracode:String =>=>=> RelationalSchema.Column>> issueentity.jiracode PRIMARY KEY;
ClassDiagram.Attribut>> IssueEntity.jiradescription:String =>=>=> RelationalSchema.Column>> issueentity.jiradescription;
ClassDiagram.Attribut>> LegacyCarPlant.id:LegacyCarPlantPK =>=>=> RelationalSchema.Column>> legacycarplant.id;
ClassDiagram.Attribut>> LegacyCarPlant.name:String =>=>=> RelationalSchema.Column>> legacycarplant.name;
ClassDiagram.Attribut>> IndexedEmbeddedProxyRootEntity.id:Integer =>=>=> RelationalSchema.Column>> indexedembeddedproxyrootentity.id PRIMARY KEY;
ClassDiagram.Attribut>> LegacyCar.id:String =>=>=> RelationalSchema.Column>> legacycar.id PRIMARY KEY;
ClassDiagram.Attribut>> LegacyCar.model:String =>=>=> RelationalSchema.Column>> legacycar.model;
ClassDiagram.Attribut>> AncientBook.cataloguegroupname:String =>=>=> RelationalSchema.Column>> ancientbook.cataloguegroupname;
ClassDiagram.Attribut>> AncientBook.alternativetitles:Set<String> =>=>=> RelationalSchema.Column>> ancientbook.alternativetitles;
ClassDiagram.Attribut>> Nation.id:Integer =>=>=> RelationalSchema.Column>> nation.id PRIMARY KEY;
ClassDiagram.Attribut>> Nation.name:String =>=>=> RelationalSchema.Column>> nation.name;
ClassDiagram.Attribut>> Nation.code:String =>=>=> RelationalSchema.Column>> nation.code;
ClassDiagram.Attribut>> Clock.id:Integer =>=>=> RelationalSchema.Column>> clock.id PRIMARY KEY;
ClassDiagram.Attribut>> Clock.brand:String =>=>=> RelationalSchema.Column>> clock.brand;
ClassDiagram.Attribut>> IndexedEmbeddedProxyLazyEntity.id:Integer =>=>=> RelationalSchema.Column>> indexedembeddedproxylazyentity.id PRIMARY KEY;
ClassDiagram.Attribut>> IndexedEmbeddedProxyLazyEntity.name:String =>=>=> RelationalSchema.Column>> indexedembeddedproxylazyentity.name;
ClassDiagram.Attribut>> ConcurrentData.id:Long =>=>=> RelationalSchema.Column>> concurrentdata.id PRIMARY KEY;
ClassDiagram.Attribut>> ConcurrentData.data:String =>=>=> RelationalSchema.Column>> concurrentdata.data;
ClassDiagram.Attribut>> Dvd.unusuallynamedidentifier:long =>=>=> RelationalSchema.Column>> dvd.unusuallynamedidentifier PRIMARY KEY;
ClassDiagram.Attribut>> Dvd.title:String =>=>=> RelationalSchema.Column>> dvd.title;
ClassDiagram.Attribut>> WeirdlyIdentifiedEntity.testsid:int =>=>=> RelationalSchema.Column>> weirdlyidentifiedentity.testsid PRIMARY KEY;
ClassDiagram.Attribut>> WeirdlyIdentifiedEntity.id:String =>=>=> RelationalSchema.Column>> weirdlyidentifiedentity.id;
ClassDiagram.Attribut>> LegacyTire.id:LegacyTirePK =>=>=> RelationalSchema.Column>> legacytire.id PRIMARY KEY;
ClassDiagram.Attribut>> LegacyTire.tiresize:int =>=>=> RelationalSchema.Column>> legacytire.tiresize;
ClassDiagram.Attribut>> ToStringTest.entitymanager:FullTextEntityManager =>=>=> RelationalSchema.Column>> tostringtest.entitymanager;
ClassDiagram.Attribut>> ToStringTest.GeneratedName:FullTextSession =>=>=> RelationalSchema.Column>> tostringtest.GeneratedName;
ClassDiagram.Attribut>> ToStringTest.lucene:Query =>=>=> RelationalSchema.Column>> tostringtest.lucene;
ClassDiagram.Attribut>> Bretzel.id:Integer =>=>=> RelationalSchema.Column>> bretzel.id PRIMARY KEY;
ClassDiagram.Attribut>> Bretzel.saltqty:int =>=>=> RelationalSchema.Column>> bretzel.saltqty;
ClassDiagram.Attribut>> Bretzel.weight:int =>=>=> RelationalSchema.Column>> bretzel.weight;
ClassDiagram.Attribut>> DynamicShardingTest.elephant:Animal =>=>=> RelationalSchema.Column>> dynamicshardingtest.elephant;
ClassDiagram.Attribut>> DynamicShardingTest.spider:Animal =>=>=> RelationalSchema.Column>> dynamicshardingtest.spider;
ClassDiagram.Attribut>> DynamicShardingTest.bear:Animal =>=>=> RelationalSchema.Column>> dynamicshardingtest.bear;
ClassDiagram.Attribut>> Product.id:Long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.available:boolean =>=>=> RelationalSchema.Column>> product.available;
ClassDiagram.Attribut>> Animal.id:Integer =>=>=> RelationalSchema.Column>> animal.id PRIMARY KEY;
ClassDiagram.Attribut>> Animal.name:String =>=>=> RelationalSchema.Column>> animal.name;
ClassDiagram.Attribut>> Animal.type:String =>=>=> RelationalSchema.Column>> animal.type;
ClassDiagram.Attribut>> Furniture.id:Integer =>=>=> RelationalSchema.Column>> furniture.id PRIMARY KEY;
ClassDiagram.Attribut>> Furniture.color:String =>=>=> RelationalSchema.Column>> furniture.color;
ClassDiagram.Attribut>> Email.id:Integer =>=>=> RelationalSchema.Column>> email.id PRIMARY KEY;
ClassDiagram.Attribut>> Email.body:String =>=>=> RelationalSchema.Column>> email.body;
ClassDiagram.Attribut>> Animal.id:Long =>=>=> RelationalSchema.Column>> animal.id PRIMARY KEY;
ClassDiagram.Attribut>> Animal.name:String =>=>=> RelationalSchema.Column>> animal.name;
ClassDiagram.Attribut>> Fish.numberofdorsalfins:int =>=>=> RelationalSchema.Column>> fish.numberofdorsalfins;
ClassDiagram.Attribut>> Bird.numberofeggs:int =>=>=> RelationalSchema.Column>> bird.numberofeggs;
ClassDiagram.Attribut>> Mammal.hassweatglands:boolean =>=>=> RelationalSchema.Column>> mammal.hassweatglands;
ClassDiagram.Attribut>> Eagle.GeneratedName:WingType =>=>=> RelationalSchema.Column>> eagle.GeneratedName;
ClassDiagram.Attribut>> Book.id:Integer =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.body:String =>=>=> RelationalSchema.Column>> book.body;
ClassDiagram.Attribut>> Book.summary:String =>=>=> RelationalSchema.Column>> book.summary;
ClassDiagram.Attribut>> Profile.id:Integer =>=>=> RelationalSchema.Column>> profile.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.id:Integer =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.name:String =>=>=> RelationalSchema.Column>> author.name;
ClassDiagram.Attribut>> Comment.id:Integer =>=>=> RelationalSchema.Column>> comment.id PRIMARY KEY;
ClassDiagram.Attribut>> Comment.parent:IProfile =>=>=> RelationalSchema.Column>> comment.parent;
ClassDiagram.Attribut>> Comment.name:String =>=>=> RelationalSchema.Column>> comment.name;
ClassDiagram.Attribut>> Comment.root:IComment =>=>=> RelationalSchema.Column>> comment.root;
ClassDiagram.Attribut>> Book.id:Long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> Book.GeneratedName:EmbeddableCategories =>=>=> RelationalSchema.Column>> book.GeneratedName;
ClassDiagram.Attribut>> CheeseRollingCompetitor.id:Integer =>=>=> RelationalSchema.Column>> cheeserollingcompetitor.id PRIMARY KEY;
ClassDiagram.Attribut>> CheeseRollingCompetitor.nickname:String =>=>=> RelationalSchema.Column>> cheeserollingcompetitor.nickname;
ClassDiagram.Attribut>> ManualIndexingOnlyInterceptorTest.GeneratedName:FullTextSession =>=>=> RelationalSchema.Column>> manualindexingonlyinterceptortest.GeneratedName;
ClassDiagram.Attribut>> ManualIndexingOnlyInterceptorTest.testentities:List<Foo> =>=>=> RelationalSchema.Column>> manualindexingonlyinterceptortest.testentities;
ClassDiagram.Attribut>> Blog.id:Integer =>=>=> RelationalSchema.Column>> blog.id PRIMARY KEY;
ClassDiagram.Attribut>> Blog.title:String =>=>=> RelationalSchema.Column>> blog.title;
ClassDiagram.Attribut>> Blog.status:BlogStatus =>=>=> RelationalSchema.Column>> blog.status;
ClassDiagram.Attribut>> Address.id:Long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.streetname:String =>=>=> RelationalSchema.Column>> address.streetname;
ClassDiagram.Attribut>> Address.housenumber:Integer =>=>=> RelationalSchema.Column>> address.housenumber;
ClassDiagram.Attribut>> Address.flatnumber:Integer =>=>=> RelationalSchema.Column>> address.flatnumber;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> Person.surname:String =>=>=> RelationalSchema.Column>> person.surname;
ClassDiagram.Attribut>> Clock.id:Integer =>=>=> RelationalSchema.Column>> clock.id PRIMARY KEY;
ClassDiagram.Attribut>> Clock.brand:String =>=>=> RelationalSchema.Column>> clock.brand;
ClassDiagram.Attribut>> ClassLevelTestPoI.poiid:int =>=>=> RelationalSchema.Column>> classleveltestpoi.poiid PRIMARY KEY;
ClassDiagram.Attribut>> ClassLevelTestPoI.name:String =>=>=> RelationalSchema.Column>> classleveltestpoi.name;
ClassDiagram.Attribut>> ClassLevelTestPoI.latitude:Double =>=>=> RelationalSchema.Column>> classleveltestpoi.latitude;
ClassDiagram.Attribut>> ClassLevelTestPoI.longitude:Double =>=>=> RelationalSchema.Column>> classleveltestpoi.longitude;
ClassDiagram.Attribut>> ProductCatalog.id:Integer =>=>=> RelationalSchema.Column>> productcatalog.id PRIMARY KEY;
ClassDiagram.Attribut>> ProductCatalog.name:String =>=>=> RelationalSchema.Column>> productcatalog.name;
ClassDiagram.Attribut>> Country.id:Long =>=>=> RelationalSchema.Column>> country.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.name:String =>=>=> RelationalSchema.Column>> country.name;
ClassDiagram.Attribut>> ProvidedIdEntry.serialversionuid:long =>=>=> RelationalSchema.Column>> providedidentry.serialversionuid;
ClassDiagram.Attribut>> ProvidedIdEntry.id:long =>=>=> RelationalSchema.Column>> providedidentry.id PRIMARY KEY;
ClassDiagram.Attribut>> ProvidedIdEntry.name:String =>=>=> RelationalSchema.Column>> providedidentry.name;
ClassDiagram.Attribut>> ProvidedIdEntry.blurb:String =>=>=> RelationalSchema.Column>> providedidentry.blurb;
ClassDiagram.Attribut>> ProvidedIdEntry.age:int =>=>=> RelationalSchema.Column>> providedidentry.age;
ClassDiagram.Attribut>> Departments.deptsid:int =>=>=> RelationalSchema.Column>> departments.deptsid PRIMARY KEY;
ClassDiagram.Attribut>> Departments.network:String =>=>=> RelationalSchema.Column>> departments.network;
ClassDiagram.Attribut>> Departments.manufacturer:String =>=>=> RelationalSchema.Column>> departments.manufacturer;
ClassDiagram.Attribut>> Departments.branchhead:String =>=>=> RelationalSchema.Column>> departments.branchhead;
ClassDiagram.Attribut>> Departments.branch:String =>=>=> RelationalSchema.Column>> departments.branch;
ClassDiagram.Attribut>> Departments.maxemployees:Integer =>=>=> RelationalSchema.Column>> departments.maxemployees;
ClassDiagram.Attribut>> NoSearchEntity.id:Timestamp =>=>=> RelationalSchema.Column>> nosearchentity.id PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedEntity.id:long =>=>=> RelationalSchema.Column>> embeddedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> IndexedEntity.id:long =>=>=> RelationalSchema.Column>> indexedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> HibernateSearchSessionFactoryObserverTest.byteman:BytemanAccessor =>=>=> RelationalSchema.Column>> hibernatesearchsessionfactoryobservertest.byteman;
ClassDiagram.Attribut>> Item.id:Integer =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.description:String =>=>=> RelationalSchema.Column>> item.description;
ClassDiagram.Attribut>> Item.price:Short =>=>=> RelationalSchema.Column>> item.price;
ClassDiagram.Attribut>> Address.addressid:Long =>=>=> RelationalSchema.Column>> address.addressid PRIMARY KEY;
ClassDiagram.Attribut>> Address.street1:String =>=>=> RelationalSchema.Column>> address.street1;
ClassDiagram.Attribut>> Address.street2:String =>=>=> RelationalSchema.Column>> address.street2;
ClassDiagram.Attribut>> Address.created:Date =>=>=> RelationalSchema.Column>> address.created;
ClassDiagram.Attribut>> Address.lastupdated:Calendar =>=>=> RelationalSchema.Column>> address.lastupdated;
ClassDiagram.Attribut>> Address.owner:String =>=>=> RelationalSchema.Column>> address.owner;
ClassDiagram.Attribut>> LatLongAnnTestPoi.poiid:int =>=>=> RelationalSchema.Column>> latlonganntestpoi.poiid PRIMARY KEY;
ClassDiagram.Attribut>> LatLongAnnTestPoi.name:String =>=>=> RelationalSchema.Column>> latlonganntestpoi.name;
ClassDiagram.Attribut>> LatLongAnnTestPoi.latitude:Double =>=>=> RelationalSchema.Column>> latlonganntestpoi.latitude;
ClassDiagram.Attribut>> LatLongAnnTestPoi.longitude:Double =>=>=> RelationalSchema.Column>> latlonganntestpoi.longitude;
ClassDiagram.Attribut>> BlogEntry.en_analyzer_name:String =>=>=> RelationalSchema.Column>> blogentry.en_analyzer_name;
ClassDiagram.Attribut>> BlogEntry.de_analyzer_name:String =>=>=> RelationalSchema.Column>> blogentry.de_analyzer_name;
ClassDiagram.Attribut>> BlogEntry.id:Long =>=>=> RelationalSchema.Column>> blogentry.id PRIMARY KEY;
ClassDiagram.Attribut>> BlogEntry.language:String =>=>=> RelationalSchema.Column>> blogentry.language;
ClassDiagram.Attribut>> BlogEntry.title:String =>=>=> RelationalSchema.Column>> blogentry.title;
ClassDiagram.Attribut>> BlogEntry.description:String =>=>=> RelationalSchema.Column>> blogentry.description;
ClassDiagram.Attribut>> BlogEntry.created:Date =>=>=> RelationalSchema.Column>> blogentry.created;
ClassDiagram.Attribut>> OrderLine.id:Integer =>=>=> RelationalSchema.Column>> orderline.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderLine.name:String =>=>=> RelationalSchema.Column>> orderline.name;
ClassDiagram.Attribut>> TokenizationTest.default_field_name:String =>=>=> RelationalSchema.Column>> tokenizationtest.default_field_name;
ClassDiagram.Attribut>> TokenizationTest.logged:ExpectedLog4jLog =>=>=> RelationalSchema.Column>> tokenizationtest.logged;
ClassDiagram.Attribut>> MemberLevelTestPoI.poiid:int =>=>=> RelationalSchema.Column>> memberleveltestpoi.poiid PRIMARY KEY;
ClassDiagram.Attribut>> MemberLevelTestPoI.name:String =>=>=> RelationalSchema.Column>> memberleveltestpoi.name;
ClassDiagram.Attribut>> MemberLevelTestPoI.latitude:Double =>=>=> RelationalSchema.Column>> memberleveltestpoi.latitude;
ClassDiagram.Attribut>> MemberLevelTestPoI.longitude:Double =>=>=> RelationalSchema.Column>> memberleveltestpoi.longitude;
ClassDiagram.Attribut>> DynamicBoostedDescLibrary.libraryid:int =>=>=> RelationalSchema.Column>> dynamicboosteddesclibrary.libraryid PRIMARY KEY;
ClassDiagram.Attribut>> DynamicBoostedDescLibrary.dynscore:float =>=>=> RelationalSchema.Column>> dynamicboosteddesclibrary.dynscore;
ClassDiagram.Attribut>> DynamicBoostedDescLibrary.name:String =>=>=> RelationalSchema.Column>> dynamicboosteddesclibrary.name;
ClassDiagram.Attribut>> Foo.id:long =>=>=> RelationalSchema.Column>> foo.id PRIMARY KEY;
ClassDiagram.Attribut>> BaseClass.id:Integer =>=>=> RelationalSchema.Column>> baseclass.id PRIMARY KEY;
ClassDiagram.Attribut>> BaseClass.name:String =>=>=> RelationalSchema.Column>> baseclass.name;
ClassDiagram.Attribut>> CustomAnalyzerImplementationInClassBridgeTest.GeneratedName:Log =>=>=> RelationalSchema.Column>> customanalyzerimplementationinclassbridgetest.GeneratedName;
ClassDiagram.Attribut>> AlarmEntity.id:Integer =>=>=> RelationalSchema.Column>> alarmentity.id PRIMARY KEY;
ClassDiagram.Attribut>> AlarmEntity.property:String =>=>=> RelationalSchema.Column>> alarmentity.property;
ClassDiagram.Attribut>> AlarmEntity.alarmdescription:String =>=>=> RelationalSchema.Column>> alarmentity.alarmdescription;
ClassDiagram.Attribut>> Team.id:Integer =>=>=> RelationalSchema.Column>> team.id PRIMARY KEY;
ClassDiagram.Attribut>> Team.(name:String =>=>=> RelationalSchema.Column>> team.(name;
ClassDiagram.Attribut>> Team.location:String =>=>=> RelationalSchema.Column>> team.location;
ClassDiagram.Attribut>> Team.description:String =>=>=> RelationalSchema.Column>> team.description;
ClassDiagram.Attribut>> Entity1.id:long =>=>=> RelationalSchema.Column>> entity1.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomAnalyzerDefinitionInClassBridgeTest.GeneratedName:Log =>=>=> RelationalSchema.Column>> customanalyzerdefinitioninclassbridgetest.GeneratedName;
ClassDiagram.Attribut>> BlogEntry.id:Integer =>=>=> RelationalSchema.Column>> blogentry.id PRIMARY KEY;
ClassDiagram.Attribut>> BlogEntry.language:String =>=>=> RelationalSchema.Column>> blogentry.language;
ClassDiagram.Attribut>> BlogEntry.text:String =>=>=> RelationalSchema.Column>> blogentry.text;
ClassDiagram.Attribut>> Article.id:Integer =>=>=> RelationalSchema.Column>> article.id PRIMARY KEY;
ClassDiagram.Attribut>> Article.language:String =>=>=> RelationalSchema.Column>> article.language;
ClassDiagram.Attribut>> Article.text:String =>=>=> RelationalSchema.Column>> article.text;
ClassDiagram.Attribut>> Entity2.id:long =>=>=> RelationalSchema.Column>> entity2.id PRIMARY KEY;
ClassDiagram.Attribut>> MyEntity.id:Integer =>=>=> RelationalSchema.Column>> myentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MyEntity.entity:String =>=>=> RelationalSchema.Column>> myentity.entity;
ClassDiagram.Attribut>> MyEntity.property:String =>=>=> RelationalSchema.Column>> myentity.property;
ClassDiagram.Attribut>> MyEntity.field:String =>=>=> RelationalSchema.Column>> myentity.field;
ClassDiagram.Attribut>> MyEntity.notanalyzed:String =>=>=> RelationalSchema.Column>> myentity.notanalyzed;
ClassDiagram.Attribut>> MyEntity.component:MyComponent =>=>=> RelationalSchema.Column>> myentity.component;
ClassDiagram.Attribut>> Departments.id:int =>=>=> RelationalSchema.Column>> departments.id PRIMARY KEY;
ClassDiagram.Attribut>> Departments.network:String =>=>=> RelationalSchema.Column>> departments.network;
ClassDiagram.Attribut>> Departments.manufacturer:String =>=>=> RelationalSchema.Column>> departments.manufacturer;
ClassDiagram.Attribut>> Departments.branchhead:String =>=>=> RelationalSchema.Column>> departments.branchhead;
ClassDiagram.Attribut>> Departments.branch:String =>=>=> RelationalSchema.Column>> departments.branch;
ClassDiagram.Attribut>> Departments.maxemployees:Integer =>=>=> RelationalSchema.Column>> departments.maxemployees;
ClassDiagram.Attribut>> Cloud.id:int =>=>=> RelationalSchema.Column>> cloud.id PRIMARY KEY;
ClassDiagram.Attribut>> Cloud.1:Long =>=>=> RelationalSchema.Column>> cloud.1;
ClassDiagram.Attribut>> Cloud.2:long =>=>=> RelationalSchema.Column>> cloud.2;
ClassDiagram.Attribut>> Cloud.v1:Integer =>=>=> RelationalSchema.Column>> cloud.v1;
ClassDiagram.Attribut>> Cloud.egerv2:int =>=>=> RelationalSchema.Column>> cloud.egerv2;
ClassDiagram.Attribut>> Cloud.1:Double =>=>=> RelationalSchema.Column>> cloud.1;
ClassDiagram.Attribut>> Cloud.2:double =>=>=> RelationalSchema.Column>> cloud.2;
ClassDiagram.Attribut>> Cloud.1:Float =>=>=> RelationalSchema.Column>> cloud.1;
ClassDiagram.Attribut>> Cloud.2:float =>=>=> RelationalSchema.Column>> cloud.2;
ClassDiagram.Attribut>> Cloud.GeneratedName:String =>=>=> RelationalSchema.Column>> cloud.GeneratedName;
ClassDiagram.Attribut>> Cloud.my:Date =>=>=> RelationalSchema.Column>> cloud.my;
ClassDiagram.Attribut>> Cloud.year:Date =>=>=> RelationalSchema.Column>> cloud.year;
ClassDiagram.Attribut>> Cloud.month:Date =>=>=> RelationalSchema.Column>> cloud.month;
ClassDiagram.Attribut>> Cloud.day:Date =>=>=> RelationalSchema.Column>> cloud.day;
ClassDiagram.Attribut>> Cloud.hour:Date =>=>=> RelationalSchema.Column>> cloud.hour;
ClassDiagram.Attribut>> Cloud.minute:Date =>=>=> RelationalSchema.Column>> cloud.minute;
ClassDiagram.Attribut>> Cloud.second:Date =>=>=> RelationalSchema.Column>> cloud.second;
ClassDiagram.Attribut>> Cloud.millisecond:Date =>=>=> RelationalSchema.Column>> cloud.millisecond;
ClassDiagram.Attribut>> Cloud.customfieldbridge:String =>=>=> RelationalSchema.Column>> cloud.customfieldbridge;
ClassDiagram.Attribut>> Cloud.custombridge:String =>=>=> RelationalSchema.Column>> cloud.custombridge;
ClassDiagram.Attribut>> Cloud.char1:Character =>=>=> RelationalSchema.Column>> cloud.char1;
ClassDiagram.Attribut>> Cloud.2:char =>=>=> RelationalSchema.Column>> cloud.2;
ClassDiagram.Attribut>> Cloud.type:CloudType =>=>=> RelationalSchema.Column>> cloud.type;
ClassDiagram.Attribut>> Cloud.storm:boolean =>=>=> RelationalSchema.Column>> cloud.storm;
ClassDiagram.Attribut>> Cloud.clazz:Class =>=>=> RelationalSchema.Column>> cloud.clazz;
ClassDiagram.Attribut>> Cloud.GeneratedName:URL =>=>=> RelationalSchema.Column>> cloud.GeneratedName;
ClassDiagram.Attribut>> Cloud.GeneratedName:URI =>=>=> RelationalSchema.Column>> cloud.GeneratedName;
ClassDiagram.Attribut>> Cloud.GeneratedName:UUID =>=>=> RelationalSchema.Column>> cloud.GeneratedName;
ClassDiagram.Attribut>> Cloud.my:Calendar =>=>=> RelationalSchema.Column>> cloud.my;
ClassDiagram.Attribut>> Cloud.year:Calendar =>=>=> RelationalSchema.Column>> cloud.year;
ClassDiagram.Attribut>> Cloud.month:Calendar =>=>=> RelationalSchema.Column>> cloud.month;
ClassDiagram.Attribut>> Cloud.day:Calendar =>=>=> RelationalSchema.Column>> cloud.day;
ClassDiagram.Attribut>> Cloud.minute:Calendar =>=>=> RelationalSchema.Column>> cloud.minute;
ClassDiagram.Attribut>> Cloud.second:Calendar =>=>=> RelationalSchema.Column>> cloud.second;
ClassDiagram.Attribut>> Cloud.hour:Calendar =>=>=> RelationalSchema.Column>> cloud.hour;
ClassDiagram.Attribut>> Cloud.millisecond:Calendar =>=>=> RelationalSchema.Column>> cloud.millisecond;
ClassDiagram.Attribut>> TikaBridgeTest.test_mp3_document:String =>=>=> RelationalSchema.Column>> tikabridgetest.test_mp3_document;
ClassDiagram.Attribut>> TikaBridgeTest.integratorresource:SearchIntegratorResource =>=>=> RelationalSchema.Column>> tikabridgetest.integratorresource;
ClassDiagram.Attribut>> TikaBridgeTest.testmp3:ClasspathResourceAsFile =>=>=> RelationalSchema.Column>> tikabridgetest.testmp3;
ClassDiagram.Attribut>> ArrayBridgeNullEmbeddedTestEntity.null_token:String =>=>=> RelationalSchema.Column>> arraybridgenullembeddedtestentity.null_token;
ClassDiagram.Attribut>> ArrayBridgeNullEmbeddedTestEntity.null_numeric_token:String =>=>=> RelationalSchema.Column>> arraybridgenullembeddedtestentity.null_numeric_token;
ClassDiagram.Attribut>> ArrayBridgeNullEmbeddedTestEntity.null_embedded:String =>=>=> RelationalSchema.Column>> arraybridgenullembeddedtestentity.null_embedded;
ClassDiagram.Attribut>> ArrayBridgeNullEmbeddedTestEntity.null_embedded_numeric:String =>=>=> RelationalSchema.Column>> arraybridgenullembeddedtestentity.null_embedded_numeric;
ClassDiagram.Attribut>> ArrayBridgeNullEmbeddedTestEntity.id:Long =>=>=> RelationalSchema.Column>> arraybridgenullembeddedtestentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ArrayBridgeNullEmbeddedTestEntity.name:String =>=>=> RelationalSchema.Column>> arraybridgenullembeddedtestentity.name;
ClassDiagram.Attribut>> ArrayBridgeNullEmbeddedTestEntity.nullindexed:Language =>=>=> RelationalSchema.Column>> arraybridgenullembeddedtestentity.nullindexed;
ClassDiagram.Attribut>> ArrayBridgeNullEmbeddedTestEntity.numericnullindexed:Integer =>=>=> RelationalSchema.Column>> arraybridgenullembeddedtestentity.numericnullindexed;
ClassDiagram.Attribut>> Chain.id:Long =>=>=> RelationalSchema.Column>> chain.id PRIMARY KEY;
ClassDiagram.Attribut>> Chain.name:String =>=>=> RelationalSchema.Column>> chain.name;
ClassDiagram.Attribut>> Theater.id:Long =>=>=> RelationalSchema.Column>> theater.id PRIMARY KEY;
ClassDiagram.Attribut>> Theater.name:String =>=>=> RelationalSchema.Column>> theater.name;
ClassDiagram.Attribut>> Movie.id:Long =>=>=> RelationalSchema.Column>> movie.id PRIMARY KEY;
ClassDiagram.Attribut>> Movie.title:String =>=>=> RelationalSchema.Column>> movie.title;
ClassDiagram.Attribut>> Gangster.id:Serializable =>=>=> RelationalSchema.Column>> gangster.id PRIMARY KEY;
ClassDiagram.Attribut>> Gangster.name:String =>=>=> RelationalSchema.Column>> gangster.name;
ClassDiagram.Attribut>> IncorrectObjectToString.id:Long =>=>=> RelationalSchema.Column>> incorrectobjecttostring.id PRIMARY KEY;
ClassDiagram.Attribut>> IncorrectObjectToString.name:String =>=>=> RelationalSchema.Column>> incorrectobjecttostring.name;
ClassDiagram.Attribut>> IterableBridgeTestEntity.null_token:String =>=>=> RelationalSchema.Column>> iterablebridgetestentity.null_token;
ClassDiagram.Attribut>> IterableBridgeTestEntity.null_numeric_token:String =>=>=> RelationalSchema.Column>> iterablebridgetestentity.null_numeric_token;
ClassDiagram.Attribut>> IterableBridgeTestEntity.id:Long =>=>=> RelationalSchema.Column>> iterablebridgetestentity.id PRIMARY KEY;
ClassDiagram.Attribut>> IterableBridgeTestEntity.name:String =>=>=> RelationalSchema.Column>> iterablebridgetestentity.name;
ClassDiagram.Attribut>> IterableBridgeTestEntity.nullindexed:Set<Language> =>=>=> RelationalSchema.Column>> iterablebridgetestentity.nullindexed;
ClassDiagram.Attribut>> IterableBridgeTestEntity.nullnotindexed:List<String> =>=>=> RelationalSchema.Column>> iterablebridgetestentity.nullnotindexed;
ClassDiagram.Attribut>> IterableBridgeTestEntity.numericnullindexed:Set<Integer> =>=>=> RelationalSchema.Column>> iterablebridgetestentity.numericnullindexed;
ClassDiagram.Attribut>> IterableBridgeTestEntity.numericnullnotindexed:List<Long> =>=>=> RelationalSchema.Column>> iterablebridgetestentity.numericnullnotindexed;
ClassDiagram.Attribut>> IterableBridgeTestEntity.dates:List<Date> =>=>=> RelationalSchema.Column>> iterablebridgetestentity.dates;
ClassDiagram.Attribut>> Teacher.id:Long =>=>=> RelationalSchema.Column>> teacher.id PRIMARY KEY;
ClassDiagram.Attribut>> Teacher.name:String =>=>=> RelationalSchema.Column>> teacher.name;
ClassDiagram.Attribut>> ArrayBridgeTestEntity.null_token:String =>=>=> RelationalSchema.Column>> arraybridgetestentity.null_token;
ClassDiagram.Attribut>> ArrayBridgeTestEntity.null_numeric_token:String =>=>=> RelationalSchema.Column>> arraybridgetestentity.null_numeric_token;
ClassDiagram.Attribut>> ArrayBridgeTestEntity.id:Long =>=>=> RelationalSchema.Column>> arraybridgetestentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ArrayBridgeTestEntity.name:String =>=>=> RelationalSchema.Column>> arraybridgetestentity.name;
ClassDiagram.Attribut>> ArrayBridgeTestEntity.nullindexed:Language =>=>=> RelationalSchema.Column>> arraybridgetestentity.nullindexed;
ClassDiagram.Attribut>> ArrayBridgeTestEntity.nullnotindexed:String =>=>=> RelationalSchema.Column>> arraybridgetestentity.nullnotindexed;
ClassDiagram.Attribut>> ArrayBridgeTestEntity.numericnullindexed:Integer =>=>=> RelationalSchema.Column>> arraybridgetestentity.numericnullindexed;
ClassDiagram.Attribut>> ArrayBridgeTestEntity.numericnullnotindexed:Long =>=>=> RelationalSchema.Column>> arraybridgetestentity.numericnullnotindexed;
ClassDiagram.Attribut>> ArrayBridgeTestEntity.primitive:float =>=>=> RelationalSchema.Column>> arraybridgetestentity.primitive;
ClassDiagram.Attribut>> ArrayBridgeTestEntity.s:Date =>=>=> RelationalSchema.Column>> arraybridgetestentity.s;
ClassDiagram.Attribut>> IterableBridgeNullEmbeddedTestEntity.null_token:String =>=>=> RelationalSchema.Column>> iterablebridgenullembeddedtestentity.null_token;
ClassDiagram.Attribut>> IterableBridgeNullEmbeddedTestEntity.null_numeric_token:String =>=>=> RelationalSchema.Column>> iterablebridgenullembeddedtestentity.null_numeric_token;
ClassDiagram.Attribut>> IterableBridgeNullEmbeddedTestEntity.null_embedded:String =>=>=> RelationalSchema.Column>> iterablebridgenullembeddedtestentity.null_embedded;
ClassDiagram.Attribut>> IterableBridgeNullEmbeddedTestEntity.null_embedded_numeric:String =>=>=> RelationalSchema.Column>> iterablebridgenullembeddedtestentity.null_embedded_numeric;
ClassDiagram.Attribut>> IterableBridgeNullEmbeddedTestEntity.id:Long =>=>=> RelationalSchema.Column>> iterablebridgenullembeddedtestentity.id PRIMARY KEY;
ClassDiagram.Attribut>> IterableBridgeNullEmbeddedTestEntity.name:String =>=>=> RelationalSchema.Column>> iterablebridgenullembeddedtestentity.name;
ClassDiagram.Attribut>> IterableBridgeNullEmbeddedTestEntity.nullindexed:Set<Language> =>=>=> RelationalSchema.Column>> iterablebridgenullembeddedtestentity.nullindexed;
ClassDiagram.Attribut>> IterableBridgeNullEmbeddedTestEntity.numericnullindexed:Set<Integer> =>=>=> RelationalSchema.Column>> iterablebridgenullembeddedtestentity.numericnullindexed;
ClassDiagram.Attribut>> IncorrectSet.id:Long =>=>=> RelationalSchema.Column>> incorrectset.id PRIMARY KEY;
ClassDiagram.Attribut>> IncorrectSet.GeneratedName:SubIncorrect =>=>=> RelationalSchema.Column>> incorrectset.GeneratedName;
ClassDiagram.Attribut>> Department.id:int =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.network:String =>=>=> RelationalSchema.Column>> department.network;
ClassDiagram.Attribut>> Department.branchhead:String =>=>=> RelationalSchema.Column>> department.branchhead;
ClassDiagram.Attribut>> Department.branch:String =>=>=> RelationalSchema.Column>> department.branch;
ClassDiagram.Attribut>> Department.maxemployees:Integer =>=>=> RelationalSchema.Column>> department.maxemployees;
ClassDiagram.Attribut>> MapBridgeNullEmbeddedTestEntity.null_token:String =>=>=> RelationalSchema.Column>> mapbridgenullembeddedtestentity.null_token;
ClassDiagram.Attribut>> MapBridgeNullEmbeddedTestEntity.null_numeric_token:String =>=>=> RelationalSchema.Column>> mapbridgenullembeddedtestentity.null_numeric_token;
ClassDiagram.Attribut>> MapBridgeNullEmbeddedTestEntity.null_embedded:String =>=>=> RelationalSchema.Column>> mapbridgenullembeddedtestentity.null_embedded;
ClassDiagram.Attribut>> MapBridgeNullEmbeddedTestEntity.null_embedded_numeric:String =>=>=> RelationalSchema.Column>> mapbridgenullembeddedtestentity.null_embedded_numeric;
ClassDiagram.Attribut>> MapBridgeNullEmbeddedTestEntity.id:Long =>=>=> RelationalSchema.Column>> mapbridgenullembeddedtestentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MapBridgeNullEmbeddedTestEntity.name:String =>=>=> RelationalSchema.Column>> mapbridgenullembeddedtestentity.name;
ClassDiagram.Attribut>> MapBridgeNullEmbeddedTestEntity.nullindexed:Map<Integer,Language> =>=>=> RelationalSchema.Column>> mapbridgenullembeddedtestentity.nullindexed;
ClassDiagram.Attribut>> MapBridgeNullEmbeddedTestEntity.numericnullindexed:Map<Integer,Integer> =>=>=> RelationalSchema.Column>> mapbridgenullembeddedtestentity.numericnullindexed;
ClassDiagram.Attribut>> IncorrectGet.id:Long =>=>=> RelationalSchema.Column>> incorrectget.id PRIMARY KEY;
ClassDiagram.Attribut>> IncorrectGet.GeneratedName:SubIncorrect =>=>=> RelationalSchema.Column>> incorrectget.GeneratedName;
ClassDiagram.Attribut>> MapBridgeTestEntity.null_token:String =>=>=> RelationalSchema.Column>> mapbridgetestentity.null_token;
ClassDiagram.Attribut>> MapBridgeTestEntity.null_numeric_token:String =>=>=> RelationalSchema.Column>> mapbridgetestentity.null_numeric_token;
ClassDiagram.Attribut>> MapBridgeTestEntity.id:Long =>=>=> RelationalSchema.Column>> mapbridgetestentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MapBridgeTestEntity.name:String =>=>=> RelationalSchema.Column>> mapbridgetestentity.name;
ClassDiagram.Attribut>> MapBridgeTestEntity.nullindexed:Map<Integer,Language> =>=>=> RelationalSchema.Column>> mapbridgetestentity.nullindexed;
ClassDiagram.Attribut>> MapBridgeTestEntity.nullnotindexed:Map<Integer,String> =>=>=> RelationalSchema.Column>> mapbridgetestentity.nullnotindexed;
ClassDiagram.Attribut>> MapBridgeTestEntity.numericnullindexed:Map<Integer,Integer> =>=>=> RelationalSchema.Column>> mapbridgetestentity.numericnullindexed;
ClassDiagram.Attribut>> MapBridgeTestEntity.numericnullnotindexed:Map<Integer,Long> =>=>=> RelationalSchema.Column>> mapbridgetestentity.numericnullnotindexed;
ClassDiagram.Attribut>> MapBridgeTestEntity.dates:Map<Integer,Date> =>=>=> RelationalSchema.Column>> mapbridgetestentity.dates;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Student.grade:String =>=>=> RelationalSchema.Column>> student.grade;
ClassDiagram.Attribut>> Student.GeneratedName:Teacher =>=>=> RelationalSchema.Column>> student.GeneratedName;
ClassDiagram.Attribut>> ConcurrentFlushTest.stored_entries:int =>=>=> RelationalSchema.Column>> concurrentflushtest.stored_entries;
ClassDiagram.Attribut>> ConcurrentFlushTest.indexedelements:AtomicInteger =>=>=> RelationalSchema.Column>> concurrentflushtest.indexedelements;
ClassDiagram.Attribut>> Soap.id:Integer =>=>=> RelationalSchema.Column>> soap.id PRIMARY KEY;
ClassDiagram.Attribut>> Soap.perfume:String =>=>=> RelationalSchema.Column>> soap.perfume;
ClassDiagram.Attribut>> Driver.id:int =>=>=> RelationalSchema.Column>> driver.id PRIMARY KEY;
ClassDiagram.Attribut>> Driver.name:String =>=>=> RelationalSchema.Column>> driver.name;
ClassDiagram.Attribut>> Driver.teacher:String =>=>=> RelationalSchema.Column>> driver.teacher;
ClassDiagram.Attribut>> Driver.score:int =>=>=> RelationalSchema.Column>> driver.score;
ClassDiagram.Attribut>> Driver.delivery:Date =>=>=> RelationalSchema.Column>> driver.delivery;
ClassDiagram.Attribut>> Soap.id:Integer =>=>=> RelationalSchema.Column>> soap.id PRIMARY KEY;
ClassDiagram.Attribut>> Soap.perfume:String =>=>=> RelationalSchema.Column>> soap.perfume;
ClassDiagram.Attribut>> Driver.id:int =>=>=> RelationalSchema.Column>> driver.id PRIMARY KEY;
ClassDiagram.Attribut>> Driver.name:String =>=>=> RelationalSchema.Column>> driver.name;
ClassDiagram.Attribut>> Driver.teacher:String =>=>=> RelationalSchema.Column>> driver.teacher;
ClassDiagram.Attribut>> Driver.score:int =>=>=> RelationalSchema.Column>> driver.score;
ClassDiagram.Attribut>> Driver.delivery:Date =>=>=> RelationalSchema.Column>> driver.delivery;
ClassDiagram.Attribut>> Counter.id:long =>=>=> RelationalSchema.Column>> counter.id PRIMARY KEY;
ClassDiagram.Attribut>> Entite.id:Integer =>=>=> RelationalSchema.Column>> entite.id PRIMARY KEY;
ClassDiagram.Attribut>> Entite.titre:String =>=>=> RelationalSchema.Column>> entite.titre;
ClassDiagram.Attribut>> Categorie.id:Integer =>=>=> RelationalSchema.Column>> categorie.id PRIMARY KEY;
ClassDiagram.Attribut>> Categorie.nom:String =>=>=> RelationalSchema.Column>> categorie.nom;
ClassDiagram.Attribut>> Domain.id:Integer =>=>=> RelationalSchema.Column>> domain.id PRIMARY KEY;
ClassDiagram.Attribut>> Domain.name:String =>=>=> RelationalSchema.Column>> domain.name;
ClassDiagram.Attribut>> Email.id:Long =>=>=> RelationalSchema.Column>> email.id PRIMARY KEY;
ClassDiagram.Attribut>> Email.title:String =>=>=> RelationalSchema.Column>> email.title;
ClassDiagram.Attribut>> Email.body:String =>=>=> RelationalSchema.Column>> email.body;
ClassDiagram.Attribut>> Email.header:String =>=>=> RelationalSchema.Column>> email.header;
ClassDiagram.Attribut>> NotPackagedEntity.id:long =>=>=> RelationalSchema.Column>> notpackagedentity.id PRIMARY KEY;
ClassDiagram.Attribut>> NotPackagedEntity.title:String =>=>=> RelationalSchema.Column>> notpackagedentity.title;
One-To-Many relationship from ClassDiagram.Class>>Country  to ClassDiagram.Class>>List<State>;
Many-To-One relationship from ClassDiagram.Class>>ParentOfBirthEvent  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Set<ParentOfBirthEvent>;
One-To-Many relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>Set<ParentOfBirthEvent>;
One-To-Many relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>Set<Person>;
One-To-One relationship between ClassDiagram.Class>>Root  to ClassDiagram.Class>>Leaf represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Leaf  to ClassDiagram.Class>>LazyItem represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>AbstractProduct  to ClassDiagram.Class>>Set<ProductFeature>;
One-To-One relationship between ClassDiagram.Class>>StateCandidate  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>StateCandidate  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Contact  to ClassDiagram.Class>>Set<Address>;
One-To-Many relationship from ClassDiagram.Class>>Contact  to ClassDiagram.Class>>Set<Phone>;
Many-To-One relationship from ClassDiagram.Class>>Phone  to ClassDiagram.Class>>Contact represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Contact represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Attribute>;
One-To-Many relationship from ClassDiagram.Class>>HelpItem  to ClassDiagram.Class>>List<HelpItemTag>;
Many-To-One relationship from ClassDiagram.Class>>HelpItemTag  to ClassDiagram.Class>>HelpItem represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>HelpItemTag  to ClassDiagram.Class>>Tag represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Tag  to ClassDiagram.Class>>List<HelpItemTag>;
Place: person_Place(personID:person [PK] #FK to person,PlaceID:Place [PK] #FK to Place);
Many-To-One relationship from ClassDiagram.Class>>AttributeValue  to ClassDiagram.Class>>Attribute represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Set<Place>;
Many-To-One relationship from ClassDiagram.Class>>Attribute  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Attribute  to ClassDiagram.Class>>List<AttributeValue>;
One-To-One relationship between ClassDiagram.Class>>Place  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>SimpleChildEntity  to ClassDiagram.Class>>SimpleParentEntity represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>ProductShootingBrief  to ClassDiagram.Class>>Set<ProductArticle>;
One-To-Many relationship from ClassDiagram.Class>>ProductShootingBrief  to ClassDiagram.Class>>Set<ProductModel>;
Many-To-One relationship from ClassDiagram.Class>>ProductArticle  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>//theinformationmodel;
Many-To-One relationship from ClassDiagram.Class>>ProductArticle  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>shootingbrief;
Many-To-One relationship from ClassDiagram.Class>>ProductReferenceCode  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>model;
One-To-Many relationship from ClassDiagram.Class>>Dad  to ClassDiagram.Class>>Set<Son>;
One-To-One relationship between ClassDiagram.Class>>SimpleParentEntity  to ClassDiagram.Class>>SimpleChildEntity represented by ClassDiagram.Atrribute>>child;
One-To-One relationship between ClassDiagram.Class>>ProductModel  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>mainreferencecode;
One-To-Many relationship from ClassDiagram.Class>>ProductModel  to ClassDiagram.Class>>List<ProductReferenceCode>;
One-To-Many relationship from ClassDiagram.Class>>ProductModel  to ClassDiagram.Class>>Set<ProductArticle>;
Many-To-One relationship from ClassDiagram.Class>>ProductModel  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>shootingbrief;
One-To-One relationship between ClassDiagram.Class>>Hero  to ClassDiagram.Class>>Villain represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Hero  to ClassDiagram.Class>>Villain represented by ClassDiagram.Atrribute>>sortable;
One-To-One relationship between ClassDiagram.Class>>Villain  to ClassDiagram.Class>>Hero represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Man  to ClassDiagram.Class>>Pet represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Man  to ClassDiagram.Class>>Woman represented by ClassDiagram.Atrribute>>partner;
One-To-Many relationship from ClassDiagram.Class>>Pet  to ClassDiagram.Class>>List<Puppy>;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>a;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>indexed;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>skipped;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b2;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b2;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>a;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>indexed;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>skipped;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b2;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>a;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>indexed;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>skipped;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b2;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>a;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>indexed;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>skipped;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-Many relationship from ClassDiagram.Class>>Human  to ClassDiagram.Class>>Set<Human>;
Many-To-One relationship from ClassDiagram.Class>>Human  to ClassDiagram.Class>>Man represented by ClassDiagram.Atrribute>>child;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b2;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>a;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>indexed;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>skipped;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b2;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>a;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>indexed;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>skipped;
Many-To-One relationship from ClassDiagram.Class>>ReferencesIndexedEmbeddedA  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>A  to ClassDiagram.Class>>B represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>A  to ClassDiagram.Class>>B represented by ClassDiagram.Atrribute>>2;
Many-To-One relationship from ClassDiagram.Class>>PathNotIndexedCase  to ClassDiagram.Class>>ReferencesC represented by ClassDiagram.Atrribute>>e;
Many-To-One relationship from ClassDiagram.Class>>InvalidPrefixCase  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>FieldRenamedEmbeddedEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>container;
Many-To-One relationship from ClassDiagram.Class>>DepthMatchesPathDepthCase  to ClassDiagram.Class>>ReferencesIndexedEmbeddedA represented by ClassDiagram.Atrribute>>e;
Many-To-One relationship from ClassDiagram.Class>>DeepPathSimpleTypeCase  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>InvalidEmbeddedPathCase  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>e;
Many-To-One relationship from ClassDiagram.Class>>DeepPathWithLeadingPrefixCase  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>B  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>B  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>2;
One-To-One relationship between ClassDiagram.Class>>B  to ClassDiagram.Class>>C represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>B  to ClassDiagram.Class>>C represented by ClassDiagram.Atrribute>>skipped;
One-To-One relationship between ClassDiagram.Class>>ReferencesC  to ClassDiagram.Class>>C represented by ClassDiagram.Atrribute>>//intentionallynot@indexedembedded;
Many-To-One relationship from ClassDiagram.Class>>InvalidEmbeddedNonLeafCase  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>e;
Many-To-One relationship from ClassDiagram.Class>>InvalidNonLeafUseCase  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>DepthExceedsPathTestCase  to ClassDiagram.Class>>ReferencesIndexedEmbeddedA represented by ClassDiagram.Atrribute>>e;
Many-To-One relationship from ClassDiagram.Class>>InvalidShallowPathCase  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>C  to ClassDiagram.Class>>B represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>C  to ClassDiagram.Class>>B represented by ClassDiagram.Atrribute>>2;
One-To-One relationship between ClassDiagram.Class>>FieldRenamedContainerEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>embedded;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityA represented by ClassDiagram.Atrribute>>a;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>indexed;
One-To-One relationship between ClassDiagram.Class>>EntityB  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>skipped;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b2;
One-To-One relationship between ClassDiagram.Class>>EntityC  to ClassDiagram.Class>>Document represented by ClassDiagram.Atrribute>>document;
One-To-One relationship between ClassDiagram.Class>>EntityA  to ClassDiagram.Class>>EntityB represented by ClassDiagram.Atrribute>>b;
One-To-One relationship between ClassDiagram.Class>>DocumentEntity  to ClassDiagram.Class>>EntityC represented by ClassDiagram.Atrribute>>c;
A: product_A(productID:product [PK] #FK to product,AID:A [PK] #FK to A);
Order: product_A(productID:product [PK] #FK to product,AID:A [PK] #FK to A);product_Order(productID:product [PK] #FK to product,OrderID:Order [PK] #FK to Order);
One-To-One relationship between ClassDiagram.Class>>Level1  to ClassDiagram.Class>>DerivedLevel2 represented by ClassDiagram.Atrribute>>level2child;
One-To-One relationship between ClassDiagram.Class>>Level3  to ClassDiagram.Class>>Level2 represented by ClassDiagram.Atrribute>>parent;
One-To-One relationship between ClassDiagram.Class>>DerivedLevel2  to ClassDiagram.Class>>Level1 represented by ClassDiagram.Atrribute>>parent;
Many-To-One relationship from ClassDiagram.Class>>LazyAbstractEntityReference  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>entity;
One-To-One relationship between ClassDiagram.Class>>Level2  to ClassDiagram.Class>>Level3 represented by ClassDiagram.Atrribute>>child;
One-To-Many relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Set<Tower>;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Country represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Leaf  to ClassDiagram.Class>>List<CollectionItem>;
Many-To-Many relationship between ClassDiagram.Class>>IndexedEntity  and ClassDiagram.Class>>C: ent_collection_field(IndexedEntity_ID:IndexedEntity [PK] #FK to IndexedEntity,C_ID:C [PK] #FK to C);
Many-To-Many relationship between ClassDiagram.Class>>IndexedEntity  and ClassDiagram.Class>>C: ent_collection_field(IndexedEntity_ID:IndexedEntity [PK] #FK to IndexedEntity,C_ID:C [PK] #FK to C);ent_collection_fields(IndexedEntity_ID:IndexedEntity [PK] #FK to IndexedEntity,C_ID:C [PK] #FK to C);
One-To-One relationship between ClassDiagram.Class>>Root  to ClassDiagram.Class>>Leaf represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>State  to ClassDiagram.Class>>Can represented by ClassDiagram.Atrribute>>candidate;
Person: person_Person(personID:person [PK] #FK to person,PersonID:Person [PK] #FK to Person);
null: person_Person(personID:person [PK] #FK to person,PersonID:Person [PK] #FK to Person);
Many-To-One relationship from ClassDiagram.Class>>BrokenMammal  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>parent;
Person: socialperson_Person(socialpersonID:socialperson [PK] #FK to socialperson,PersonID:Person [PK] #FK to Person);
null: socialperson_Person(socialpersonID:socialperson [PK] #FK to socialperson,PersonID:Person [PK] #FK to Person);
Many-To-Many relationship between ClassDiagram.Class>>WorkingPerson  and ClassDiagram.Class>>Person: family(parent_id:WorkingPerson [PK] #FK to WorkingPerson,child_id:Person [PK] #FK to Person);
null: family(parent_id:WorkingPerson [PK] #FK to WorkingPerson,child_id:Person [PK] #FK to Person);
Many-To-Many relationship between ClassDiagram.Class>>WorkingPerson  and ClassDiagram.Class>>Person: family(parent_id:WorkingPerson [PK] #FK to WorkingPerson,child_id:Person [PK] #FK to Person);work(employee_id:WorkingPerson [PK] #FK to WorkingPerson,employer_id:Person [PK] #FK to Person);
null: family(parent_id:WorkingPerson [PK] #FK to WorkingPerson,child_id:Person [PK] #FK to Person);work(employee_id:WorkingPerson [PK] #FK to WorkingPerson,employer_id:Person [PK] #FK to Person);
Many-To-One relationship from ClassDiagram.Class>>Tower  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ProductFeature  to ClassDiagram.Class>>AbstractProduct represented by ClassDiagram.Atrribute>>product;
Ingredient: recipe_Ingredient(recipeID:recipe [PK] #FK to recipe,IngredientID:Ingredient [PK] #FK to Ingredient);
One-To-Many relationship from ClassDiagram.Class>>Company  to ClassDiagram.Class>>Set<CompanyFacility>;
Many-To-One relationship from ClassDiagram.Class>>CompanyFacility  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
A: book_A(bookID:book [PK] #FK to book,AID:A [PK] #FK to A);
A: book_A(bookID:book [PK] #FK to book,AID:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>Explorer  to ClassDiagram.Class>>Territory represented by ClassDiagram.Atrribute>>/*	*don'tstoretheidin"favorite"directlyasthiscouldconflict	*withthewiththeelasticsearchbackend	*/@field(name;
Many-To-One relationship from ClassDiagram.Class>>Leaf  to ClassDiagram.Class>>tree represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Tree  to ClassDiagram.Class>>Set<Leaf>;
A: book_A(bookID:book [PK] #FK to book,AID:A [PK] #FK to A);
One-To-Many relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>Set<CatalogItem>;
Many-To-Many relationship between ClassDiagram.Class>>Consumer  and ClassDiagram.Class>>A: consumer_catalog(consumerid:Consumer [PK] #FK to Consumer,catalogid:A [PK] #FK to A);
Many-To-One relationship from ClassDiagram.Class>>CatalogItem  to ClassDiagram.Class>>item represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CatalogItem  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Location  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>LocationGroup  to ClassDiagram.Class>>Collection<Location>;
One-To-Many relationship from ClassDiagram.Class>>Catalog  to ClassDiagram.Class>>Set<CatalogItem>;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>default;
One-To-Many relationship from ClassDiagram.Class>>SpecialPerson  to ClassDiagram.Class>>Set<EmailAddress>;
B: busline_B(buslineID:busline [PK] #FK to busline,BID:B [PK] #FK to B);
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>firstpublishedin;
Many-To-One relationship from ClassDiagram.Class>>LegacyCarPlant  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>car;
One-To-One relationship between ClassDiagram.Class>>IndexedEmbeddedProxyRootEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>lazyentity;
One-To-One relationship between ClassDiagram.Class>>IndexedEmbeddedProxyRootEntity  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>lazyentity2;
One-To-Many relationship from ClassDiagram.Class>>LegacyCar  to ClassDiagram.Class>>Set<LegacyTire>;
One-To-Many relationship from ClassDiagram.Class>>Nation  to ClassDiagram.Class>>Set<Book>;
Many-To-One relationship from ClassDiagram.Class>>Dvd  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>firstpublishedin;
Many-To-One relationship from ClassDiagram.Class>>LegacyTire  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>car;
One-To-Many relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>Set<IAuthor>;
One-To-Many relationship from ClassDiagram.Class>>Profile  to ClassDiagram.Class>>Set<IComment>;
Many-To-One relationship from ClassDiagram.Class>>Author  to ClassDiagram.Class>>B represented by ClassDiagram.Atrribute>>book;
One-To-Many relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>List<IComment>;
One-To-Many relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Set<Person>;
Many-To-One relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>ProductCatalog  to ClassDiagram.Class>>List<Item>;
One-To-Many relationship from ClassDiagram.Class>>Country  to ClassDiagram.Class>>Set<Address>;
Many-To-One relationship from ClassDiagram.Class>>EmbeddedEntity  to ClassDiagram.Class>>IndexedEntity represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>IndexedEntity  to ClassDiagram.Class>>List<EmbeddedEntity>;
Many-To-One relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Country represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>BlogEntry  to ClassDiagram.Class>>Set<BlogEntry>;
One-To-Many relationship from ClassDiagram.Class>>Article  to ClassDiagram.Class>>Set<Article>;
Many-To-One relationship from ClassDiagram.Class>>Chain  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Theater  to ClassDiagram.Class>>movie represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Teacher  to ClassDiagram.Class>>List<Student>;
Many-To-One relationship from ClassDiagram.Class>>Entite  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Email  to ClassDiagram.Class>>A represented by ClassDiagram.Atrribute>>GeneratedName;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Contact   Descriminator>>contactType: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>College   Descriminator>>collegeType: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>AbstractCar   Descriminator>>DISC: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Person   Descriminator>>DISC: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>BaseClass  ;
