ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Room =>=>=> RelationalSchema.Table>> room;
ClassDiagram.Class>> Booking =>=>=> RelationalSchema.Table>> booking;
ClassDiagram.Class>> Movie =>=>=> RelationalSchema.Table>> movie;
ClassDiagram.Class>> Screening =>=>=> RelationalSchema.Table>> screening;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username PRIMARY KEY;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.type:AccountType =>=>=> RelationalSchema.Column>> user.type;
ClassDiagram.Attribut>> Room.name:String =>=>=> RelationalSchema.Column>> room.name PRIMARY KEY;
ClassDiagram.Attribut>> Room.rows:int =>=>=> RelationalSchema.Column>> room.rows;
ClassDiagram.Attribut>> Room.columns:int =>=>=> RelationalSchema.Column>> room.columns;
ClassDiagram.Attribut>> Booking.id:long =>=>=> RelationalSchema.Column>> booking.id PRIMARY KEY;
ClassDiagram.Attribut>> Booking.username:String =>=>=> RelationalSchema.Column>> booking.username;
ClassDiagram.Attribut>> Booking.screening:ScreeningID =>=>=> RelationalSchema.Column>> booking.screening;
ClassDiagram.Attribut>> Booking.seats:Set<Seat> =>=>=> RelationalSchema.Column>> booking.seats;
ClassDiagram.Attribut>> Movie.title:String =>=>=> RelationalSchema.Column>> movie.title PRIMARY KEY;
ClassDiagram.Attribut>> Movie.genre:String =>=>=> RelationalSchema.Column>> movie.genre;
ClassDiagram.Attribut>> Movie.length:int =>=>=> RelationalSchema.Column>> movie.length;
ClassDiagram.Attribut>> Screening.id:ScreeningID =>=>=> RelationalSchema.Column>> screening.id;
Many-To-One relationship from ClassDiagram.Class>>Screening  to ClassDiagram.Class>>movie represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Screening  to ClassDiagram.Class>>room represented by ClassDiagram.Atrribute>>GeneratedName;
