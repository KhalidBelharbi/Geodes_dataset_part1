ClassDiagram.Class>> UserType =>=>=> RelationalSchema.Table>> usertype;
ClassDiagram.Class>> UserType1 =>=>=> RelationalSchema.Table>> usertype1;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> RigtsToSection =>=>=> RelationalSchema.Table>> rigtstosection;
ClassDiagram.Class>> Section =>=>=> RelationalSchema.Table>> section;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Counter =>=>=> RelationalSchema.Table>> counter;
ClassDiagram.Class>> Resource =>=>=> RelationalSchema.Table>> resource;
ClassDiagram.Class>> ReportForm2_del =>=>=> RelationalSchema.Table>> reportform2_del;
ClassDiagram.Class>> ReportDetailsForm2 =>=>=> RelationalSchema.Table>> reportdetailsform2;
ClassDiagram.Class>> Report =>=>=> RelationalSchema.Table>> report;
ClassDiagram.Class>> ReportDetails =>=>=> RelationalSchema.Table>> reportdetails;
ClassDiagram.Class>> InputASKYEInfo =>=>=> RelationalSchema.Table>> inputaskyeinfo;
ClassDiagram.Class>> Costs =>=>=> RelationalSchema.Table>> costs;
ClassDiagram.Class>> Measure =>=>=> RelationalSchema.Table>> measure;
ClassDiagram.Class>> TypeTER =>=>=> RelationalSchema.Table>> typeter;
ClassDiagram.Class>> InputASKYE =>=>=> RelationalSchema.Table>> inputaskye;
ClassDiagram.Class>> Form =>=>=> RelationalSchema.Table>> form;
ClassDiagram.Class>> DepartmentGroup =>=>=> RelationalSchema.Table>> departmentgroup;
ClassDiagram.Class>> CostDetails =>=>=> RelationalSchema.Table>> costdetails;
ClassDiagram.Attribut>> UserType.//<editor-folddefaultstate:String =>=>=> RelationalSchema.Column>> usertype.//<editor-folddefaultstate;
ClassDiagram.Attribut>> UserType1.//<editor-folddefaultstate:String =>=>=> RelationalSchema.Column>> usertype1.//<editor-folddefaultstate;
ClassDiagram.Attribut>> User.//<editor-folddefaultstate:String =>=>=> RelationalSchema.Column>> user.//<editor-folddefaultstate;
ClassDiagram.Attribut>> User.surname:String =>=>=> RelationalSchema.Column>> user.surname;
ClassDiagram.Attribut>> User.patronomicname:String =>=>=> RelationalSchema.Column>> user.patronomicname;
ClassDiagram.Attribut>> User.phonenumber:String =>=>=> RelationalSchema.Column>> user.phonenumber;
ClassDiagram.Attribut>> User.login:String =>=>=> RelationalSchema.Column>> user.login;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> RigtsToSection.//<editor-folddefaultstate:boolean =>=>=> RelationalSchema.Column>> rigtstosection.//<editor-folddefaultstate;
ClassDiagram.Attribut>> RigtsToSection.enabled:boolean =>=>=> RelationalSchema.Column>> rigtstosection.enabled;
ClassDiagram.Attribut>> Section.name:String =>=>=> RelationalSchema.Column>> section.name;
ClassDiagram.Attribut>> Section.nameformenu:String =>=>=> RelationalSchema.Column>> section.nameformenu;
ClassDiagram.Attribut>> Section.description:String =>=>=> RelationalSchema.Column>> section.description;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.idvp:int =>=>=> RelationalSchema.Column>> department.idvp;
ClassDiagram.Attribut>> Department.namevp:String =>=>=> RelationalSchema.Column>> department.namevp;
ClassDiagram.Attribut>> Department.idgroupvp:int =>=>=> RelationalSchema.Column>> department.idgroupvp;
ClassDiagram.Attribut>> Department.idactionvp:int =>=>=> RelationalSchema.Column>> department.idactionvp;
ClassDiagram.Attribut>> Department.idnp:int =>=>=> RelationalSchema.Column>> department.idnp;
ClassDiagram.Attribut>> Department.namenp:String =>=>=> RelationalSchema.Column>> department.namenp;
ClassDiagram.Attribut>> Department.idgroupnp:int =>=>=> RelationalSchema.Column>> department.idgroupnp;
ClassDiagram.Attribut>> Department.idactionnp:int =>=>=> RelationalSchema.Column>> department.idactionnp;
ClassDiagram.Attribut>> Department.num:int =>=>=> RelationalSchema.Column>> department.num;
ClassDiagram.Attribut>> Department.viewsubmission:String =>=>=> RelationalSchema.Column>> department.viewsubmission;
ClassDiagram.Attribut>> Department.idviewsubmission:int =>=>=> RelationalSchema.Column>> department.idviewsubmission;
ClassDiagram.Attribut>> Department.typecommunication:String =>=>=> RelationalSchema.Column>> department.typecommunication;
ClassDiagram.Attribut>> Department.idtypecommunication:int =>=>=> RelationalSchema.Column>> department.idtypecommunication;
ClassDiagram.Attribut>> Department.dteditnsi:Date =>=>=> RelationalSchema.Column>> department.dteditnsi;
ClassDiagram.Attribut>> Department.dtbeginnsi:Date =>=>=> RelationalSchema.Column>> department.dtbeginnsi;
ClassDiagram.Attribut>> Counter.//<editor-folddefaultstate:long =>=>=> RelationalSchema.Column>> counter.//<editor-folddefaultstate PRIMARY KEY;
ClassDiagram.Attribut>> Counter.type:String =>=>=> RelationalSchema.Column>> counter.type;
ClassDiagram.Attribut>> Counter.askue:boolean =>=>=> RelationalSchema.Column>> counter.askue;
ClassDiagram.Attribut>> Counter.dt_end:Date =>=>=> RelationalSchema.Column>> counter.dt_end;
ClassDiagram.Attribut>> Counter.dt_create:Date =>=>=> RelationalSchema.Column>> counter.dt_create;
ClassDiagram.Attribut>> Counter.deleted:boolean =>=>=> RelationalSchema.Column>> counter.deleted;
ClassDiagram.Attribut>> Resource.//<editor-folddefaultstate:String =>=>=> RelationalSchema.Column>> resource.//<editor-folddefaultstate;
ClassDiagram.Attribut>> Resource.koef:float =>=>=> RelationalSchema.Column>> resource.koef;
ClassDiagram.Attribut>> Resource.koef_polution:float =>=>=> RelationalSchema.Column>> resource.koef_polution;
ClassDiagram.Attribut>> ReportDetailsForm2./*@joincolumn(name:String =>=>=> RelationalSchema.Column>> reportdetailsform2./*@joincolumn(name;
ClassDiagram.Attribut>> ReportDetailsForm2.repid:long =>=>=> RelationalSchema.Column>> reportdetailsform2.repid;
ClassDiagram.Attribut>> ReportDetailsForm2.inputactivityplan:String =>=>=> RelationalSchema.Column>> reportdetailsform2.inputactivityplan;
ClassDiagram.Attribut>> ReportDetailsForm2.inputactivityfact:String =>=>=> RelationalSchema.Column>> reportdetailsform2.inputactivityfact;
ClassDiagram.Attribut>> ReportDetailsForm2.form2coll7:float =>=>=> RelationalSchema.Column>> reportdetailsform2.form2coll7;
ClassDiagram.Attribut>> ReportDetailsForm2.form2coll8:float =>=>=> RelationalSchema.Column>> reportdetailsform2.form2coll8;
ClassDiagram.Attribut>> ReportDetailsForm2.form2coll9:float =>=>=> RelationalSchema.Column>> reportdetailsform2.form2coll9;
ClassDiagram.Attribut>> ReportDetailsForm2.form2coll10:float =>=>=> RelationalSchema.Column>> reportdetailsform2.form2coll10;
ClassDiagram.Attribut>> ReportDetailsForm2.fiochief:String =>=>=> RelationalSchema.Column>> reportdetailsform2.fiochief;
ClassDiagram.Attribut>> ReportDetailsForm2.phonechief:String =>=>=> RelationalSchema.Column>> reportdetailsform2.phonechief;
ClassDiagram.Attribut>> ReportDetailsForm2.rorschief:String =>=>=> RelationalSchema.Column>> reportdetailsform2.rorschief;
ClassDiagram.Attribut>> ReportDetailsForm2.askye:float =>=>=> RelationalSchema.Column>> reportdetailsform2.askye;
ClassDiagram.Attribut>> Report./***1форма*/costs:List<CostDetails> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Report.costsshort:List<ShortInfoResource> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Report.dt_inputplan:Date =>=>=> RelationalSchema.Column>> report.dt_inputplan;
ClassDiagram.Attribut>> Report.dt_inputfact:Date =>=>=> RelationalSchema.Column>> report.dt_inputfact;
ClassDiagram.Attribut>> Report.dt_begin:Date =>=>=> RelationalSchema.Column>> report.dt_begin;
ClassDiagram.Attribut>> Report.time_begin:Date =>=>=> RelationalSchema.Column>> report.time_begin;
ClassDiagram.Attribut>> Report.time_finish:Date =>=>=> RelationalSchema.Column>> report.time_finish;
ClassDiagram.Attribut>> Report.dt_solveinputplan:Date =>=>=> RelationalSchema.Column>> report.dt_solveinputplan;
ClassDiagram.Attribut>> Report.solveinputplan:boolean =>=>=> RelationalSchema.Column>> report.solveinputplan;
ClassDiagram.Attribut>> ReportDetails.dt_inputfact:Date =>=>=> RelationalSchema.Column>> reportdetails.dt_inputfact;
ClassDiagram.Attribut>> ReportDetails./*проверкавведенилинетфакт*/dt_inputfact_test:boolean =>=>=> RelationalSchema.Column>> reportdetails./*проверкавведенилинетфакт*/dt_inputfact_test;
ClassDiagram.Attribut>> ReportDetails./***1форма*/activity:String =>=>=> RelationalSchema.Column>> reportdetails./***1форма*/activity;
ClassDiagram.Attribut>> ReportDetails.plan_col:float =>=>=> RelationalSchema.Column>> reportdetails.plan_col;
ClassDiagram.Attribut>> ReportDetails.plan_tut:float =>=>=> RelationalSchema.Column>> reportdetails.plan_tut;
ClassDiagram.Attribut>> ReportDetails.plan_money:float =>=>=> RelationalSchema.Column>> reportdetails.plan_money;
ClassDiagram.Attribut>> ReportDetails.fact_col:float =>=>=> RelationalSchema.Column>> reportdetails.fact_col;
ClassDiagram.Attribut>> ReportDetails.fact_tut:float =>=>=> RelationalSchema.Column>> reportdetails.fact_tut;
ClassDiagram.Attribut>> ReportDetails.fact_money:float =>=>=> RelationalSchema.Column>> reportdetails.fact_money;
ClassDiagram.Attribut>> ReportDetails.//<editor-folddefaultstate:String =>=>=> RelationalSchema.Column>> reportdetails.//<editor-folddefaultstate;
ClassDiagram.Attribut>> ReportDetails.addressofobject:String =>=>=> RelationalSchema.Column>> reportdetails.addressofobject;
ClassDiagram.Attribut>> ReportDetails.powersource:String =>=>=> RelationalSchema.Column>> reportdetails.powersource;
ClassDiagram.Attribut>> ReportDetails.type:String =>=>=> RelationalSchema.Column>> reportdetails.type;
ClassDiagram.Attribut>> ReportDetails.num:long =>=>=> RelationalSchema.Column>> reportdetails.num;
ClassDiagram.Attribut>> ReportDetails.askue:boolean =>=>=> RelationalSchema.Column>> reportdetails.askue;
ClassDiagram.Attribut>> ReportDetails.addres:String =>=>=> RelationalSchema.Column>> reportdetails.addres;
ClassDiagram.Attribut>> ReportDetails.usedbefore:float =>=>=> RelationalSchema.Column>> reportdetails.usedbefore;
ClassDiagram.Attribut>> ReportDetails.usedtoday:float =>=>=> RelationalSchema.Column>> reportdetails.usedtoday;
ClassDiagram.Attribut>> ReportDetails.shortres:ShortInfoResource =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> InputASKYEInfo./*manytoone@joincolumn(name:float =>=>=> RelationalSchema.Column>> inputaskyeinfo./*manytoone@joincolumn(name;
ClassDiagram.Attribut>> InputASKYEInfo.hhtoday:float =>=>=> RelationalSchema.Column>> inputaskyeinfo.hhtoday;
ClassDiagram.Attribut>> InputASKYEInfo.input:Counter =>=>=> RelationalSchema.Column>> inputaskyeinfo.input PRIMARY KEY;
ClassDiagram.Attribut>> InputASKYEInfo.inf:InputASKYE =>=>=> RelationalSchema.Column>> inputaskyeinfo.inf PRIMARY KEY;
ClassDiagram.Attribut>> InputASKYEInfo.hh:int =>=>=> RelationalSchema.Column>> inputaskyeinfo.hh PRIMARY KEY;
ClassDiagram.Attribut>> Costs.railway:long =>=>=> RelationalSchema.Column>> costs.railway;
ClassDiagram.Attribut>> Costs.year:byte =>=>=> RelationalSchema.Column>> costs.year;
ClassDiagram.Attribut>> Costs.month:byte =>=>=> RelationalSchema.Column>> costs.month;
ClassDiagram.Attribut>> Measure.//<editor-folddefaultstate:String =>=>=> RelationalSchema.Column>> measure.//<editor-folddefaultstate;
ClassDiagram.Attribut>> Measure.valuehtml:String =>=>=> RelationalSchema.Column>> measure.valuehtml;
ClassDiagram.Attribut>> TypeTER.//<editor-folddefaultstate:String =>=>=> RelationalSchema.Column>> typeter.//<editor-folddefaultstate;
ClassDiagram.Attribut>> InputASKYE./*@manytoone@joincolumn(name:Date =>=>=> RelationalSchema.Column>> inputaskye./*@manytoone@joincolumn(name PRIMARY KEY;
ClassDiagram.Attribut>> InputASKYE.dttoday:Date =>=>=> RelationalSchema.Column>> inputaskye.dttoday;
ClassDiagram.Attribut>> InputASKYE.dt_end:Date =>=>=> RelationalSchema.Column>> inputaskye.dt_end;
ClassDiagram.Attribut>> InputASKYE.dt_create:Date =>=>=> RelationalSchema.Column>> inputaskye.dt_create;
ClassDiagram.Attribut>> InputASKYE.deleted:boolean =>=>=> RelationalSchema.Column>> inputaskye.deleted;
ClassDiagram.Attribut>> Form.serialversionuid:long =>=>=> RelationalSchema.Column>> form.serialversionuid;
ClassDiagram.Attribut>> Form.serialnumform:int =>=>=> RelationalSchema.Column>> form.serialnumform;
ClassDiagram.Attribut>> Form.fullnameform:String =>=>=> RelationalSchema.Column>> form.fullnameform;
ClassDiagram.Attribut>> Form.shortnameform:String =>=>=> RelationalSchema.Column>> form.shortnameform;
ClassDiagram.Attribut>> Form.pageaddress:String =>=>=> RelationalSchema.Column>> form.pageaddress;
ClassDiagram.Attribut>> DepartmentGroup.namenp:String =>=>=> RelationalSchema.Column>> departmentgroup.namenp;
ClassDiagram.Attribut>> DepartmentGroup.dteditnsi:Date =>=>=> RelationalSchema.Column>> departmentgroup.dteditnsi;
ClassDiagram.Attribut>> DepartmentGroup.dtbeginnsi:Date =>=>=> RelationalSchema.Column>> departmentgroup.dtbeginnsi;
ClassDiagram.Attribut>> CostDetails.//<editor-folddefaultstate:long =>=>=> RelationalSchema.Column>> costdetails.//<editor-folddefaultstate PRIMARY KEY;
ClassDiagram.Attribut>> CostDetails.cost:float =>=>=> RelationalSchema.Column>> costdetails.cost;
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>department represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>list<form>: user_form(user_id:User [PK] #FK to User,form_id:list<form> [PK] #FK to list<form>);
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>UserType represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>RigtsToSection  to ClassDiagram.Class>>Section represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>RigtsToSection  to ClassDiagram.Class>>UserType represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Section  to ClassDiagram.Class>>List<RigtsToSection>;
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>departmentgroup represented by ClassDiagram.Atrribute>>_id;
One-To-Many relationship from ClassDiagram.Class>>Counter  to ClassDiagram.Class>>List<InputASKYEInfo>;
Many-To-Many relationship between ClassDiagram.Class>>Counter  and ClassDiagram.Class>>list<inputaskye>: counter_inputaskye(id_counter:Counter [PK] #FK to Counter,id_inputaskye:list<inputaskye> [PK] #FK to list<inputaskye>);
Many-To-One relationship from ClassDiagram.Class>>Resource  to ClassDiagram.Class>>typeter represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Resource  to ClassDiagram.Class>>measure represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Resource  to ClassDiagram.Class>>List<CostDetails>;
One-To-One relationship between ClassDiagram.Class>>ReportDetailsForm2  to ClassDiagram.Class>>report represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>ReportDetailsForm2  to ClassDiagram.Class>>report represented by ClassDiagram.Atrribute>>form2;
Many-To-One relationship from ClassDiagram.Class>>ReportDetailsForm2  to ClassDiagram.Class>>department represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Report  to ClassDiagram.Class>>form represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Report  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>usr;
Many-To-One relationship from ClassDiagram.Class>>Report  to ClassDiagram.Class>>department represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Report  to ClassDiagram.Class>>List<ReportDetails>;
One-To-Many relationship from ClassDiagram.Class>>Report  to ClassDiagram.Class>>List<ReportDetailsForm2>;
One-To-One relationship between ClassDiagram.Class>>Report  to ClassDiagram.Class>>reportdetailsform2 represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Report  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>usrsolveplaninput;
Many-To-One relationship from ClassDiagram.Class>>ReportDetails  to ClassDiagram.Class>>report represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ReportDetails  to ClassDiagram.Class>>resource represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>InputASKYEInfo  to ClassDiagram.Class>>counter represented by ClassDiagram.Atrribute>>num;
Many-To-One relationship from ClassDiagram.Class>>InputASKYEInfo  to ClassDiagram.Class>>inputaskye represented by ClassDiagram.Atrribute>>dtbefore;
One-To-Many relationship from ClassDiagram.Class>>Costs  to ClassDiagram.Class>>List<CostDetails>;
Many-To-One relationship from ClassDiagram.Class>>Costs  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>usr;
One-To-Many relationship from ClassDiagram.Class>>TypeTER  to ClassDiagram.Class>>List<Resource>;
One-To-Many relationship from ClassDiagram.Class>>InputASKYE  to ClassDiagram.Class>>List<InputASKYEInfo>;
One-To-Many relationship from ClassDiagram.Class>>Form  to ClassDiagram.Class>>List<Report>;
Many-To-One relationship from ClassDiagram.Class>>CostDetails  to ClassDiagram.Class>>costs represented by ClassDiagram.Atrribute>>common;
Many-To-One relationship from ClassDiagram.Class>>CostDetails  to ClassDiagram.Class>>resource represented by ClassDiagram.Atrribute>>GeneratedName;
