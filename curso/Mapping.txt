ClassDiagram.Class>> ViewTaskStats =>=>=> RelationalSchema.Table>> viewtaskstats;
ClassDiagram.Class>> ViewFullCaseActivity =>=>=> RelationalSchema.Table>> viewfullcaseactivity;
ClassDiagram.Class>> ViewActivity =>=>=> RelationalSchema.Table>> viewactivity;
ClassDiagram.Class>> ViewBookingStats =>=>=> RelationalSchema.Table>> viewbookingstats;
ClassDiagram.Class>> ListingBookingOverview =>=>=> RelationalSchema.Table>> listingbookingoverview;
ClassDiagram.Class>> UserStats =>=>=> RelationalSchema.Table>> userstats;
ClassDiagram.Class>> ViewCaseStats =>=>=> RelationalSchema.Table>> viewcasestats;
ClassDiagram.Class>> ViewListingCurrentBooking =>=>=> RelationalSchema.Table>> viewlistingcurrentbooking;
ClassDiagram.Class>> CaseTag =>=>=> RelationalSchema.Table>> casetag;
ClassDiagram.Class>> Currency =>=>=> RelationalSchema.Table>> currency;
ClassDiagram.Class>> Subtask =>=>=> RelationalSchema.Table>> subtask;
ClassDiagram.Class>> Group =>=>=> RelationalSchema.Table>> group;
ClassDiagram.Class>> CaseFeedback =>=>=> RelationalSchema.Table>> casefeedback;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> TaskComment =>=>=> RelationalSchema.Table>> taskcomment;
ClassDiagram.Class>> CaseActivity =>=>=> RelationalSchema.Table>> caseactivity;
ClassDiagram.Class>> TaskActivity =>=>=> RelationalSchema.Table>> taskactivity;
ClassDiagram.Class>> CaseComment =>=>=> RelationalSchema.Table>> casecomment;
ClassDiagram.Class>> Locality =>=>=> RelationalSchema.Table>> locality;
ClassDiagram.Class>> Listing =>=>=> RelationalSchema.Table>> listing;
ClassDiagram.Class>> Case =>=>=> RelationalSchema.Table>> case;
ClassDiagram.Class>> Contact =>=>=> RelationalSchema.Table>> contact;
ClassDiagram.Class>> Activity =>=>=> RelationalSchema.Table>> activity;
ClassDiagram.Class>> Booking =>=>=> RelationalSchema.Table>> booking;
ClassDiagram.Class>> Task =>=>=> RelationalSchema.Table>> task;
ClassDiagram.Attribut>> ViewTaskStats.serialversionuid:long =>=>=> RelationalSchema.Column>> viewtaskstats.serialversionuid;
ClassDiagram.Attribut>> ViewTaskStats.GeneratedName:Task =>=>=> RelationalSchema.Column>> viewtaskstats.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> ViewTaskStats.prioritynumber:Long =>=>=> RelationalSchema.Column>> viewtaskstats.prioritynumber;
ClassDiagram.Attribut>> ViewTaskStats.unbegun:Long =>=>=> RelationalSchema.Column>> viewtaskstats.unbegun;
ClassDiagram.Attribut>> ViewTaskStats.fail:Long =>=>=> RelationalSchema.Column>> viewtaskstats.fail;
ClassDiagram.Attribut>> ViewTaskStats.done:Long =>=>=> RelationalSchema.Column>> viewtaskstats.done;
ClassDiagram.Attribut>> ViewTaskStats.total:Long =>=>=> RelationalSchema.Column>> viewtaskstats.total;
ClassDiagram.Attribut>> ViewTaskStats.localityname:String =>=>=> RelationalSchema.Column>> viewtaskstats.localityname;
ClassDiagram.Attribut>> ViewTaskStats.assigneename:String =>=>=> RelationalSchema.Column>> viewtaskstats.assigneename;
ClassDiagram.Attribut>> ViewTaskStats.casename:String =>=>=> RelationalSchema.Column>> viewtaskstats.casename;
ClassDiagram.Attribut>> ViewTaskStats.listingname:String =>=>=> RelationalSchema.Column>> viewtaskstats.listingname;
ClassDiagram.Attribut>> ViewFullCaseActivity.serialversionuid:long =>=>=> RelationalSchema.Column>> viewfullcaseactivity.serialversionuid;
ClassDiagram.Attribut>> ViewFullCaseActivity.id:Long =>=>=> RelationalSchema.Column>> viewfullcaseactivity.id PRIMARY KEY;
ClassDiagram.Attribut>> ViewFullCaseActivity.createdon:Date =>=>=> RelationalSchema.Column>> viewfullcaseactivity.createdon;
ClassDiagram.Attribut>> ViewFullCaseActivity.log:String =>=>=> RelationalSchema.Column>> viewfullcaseactivity.log;
ClassDiagram.Attribut>> ViewFullCaseActivity.type:ActivityType =>=>=> RelationalSchema.Column>> viewfullcaseactivity.type;
ClassDiagram.Attribut>> ViewActivity.serialversionuid:long =>=>=> RelationalSchema.Column>> viewactivity.serialversionuid;
ClassDiagram.Attribut>> ViewActivity.GeneratedName:Activity =>=>=> RelationalSchema.Column>> viewactivity.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> ViewActivity.taskid:Long =>=>=> RelationalSchema.Column>> viewactivity.taskid;
ClassDiagram.Attribut>> ViewActivity.caseid:Long =>=>=> RelationalSchema.Column>> viewactivity.caseid;
ClassDiagram.Attribut>> ViewActivity.claimid:Long =>=>=> RelationalSchema.Column>> viewactivity.claimid;
ClassDiagram.Attribut>> ViewBookingStats.serialversionuid:long =>=>=> RelationalSchema.Column>> viewbookingstats.serialversionuid;
ClassDiagram.Attribut>> ViewBookingStats.GeneratedName:Booking =>=>=> RelationalSchema.Column>> viewbookingstats.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> ViewBookingStats.laundry:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.laundry;
ClassDiagram.Attribut>> ViewBookingStats.cleaning:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.cleaning;
ClassDiagram.Attribut>> ViewBookingStats.deposittotal:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.deposittotal;
ClassDiagram.Attribut>> ViewBookingStats.fee:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.fee;
ClassDiagram.Attribut>> ViewBookingStats.feevat:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.feevat;
ClassDiagram.Attribut>> ViewBookingStats.laundry_all:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.laundry_all;
ClassDiagram.Attribut>> ViewBookingStats.cleaning_all:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.cleaning_all;
ClassDiagram.Attribut>> ViewBookingStats.fee_all:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.fee_all;
ClassDiagram.Attribut>> ViewBookingStats.laundry_all_count:long =>=>=> RelationalSchema.Column>> viewbookingstats.laundry_all_count;
ClassDiagram.Attribut>> ViewBookingStats.cleaning_all_count:long =>=>=> RelationalSchema.Column>> viewbookingstats.cleaning_all_count;
ClassDiagram.Attribut>> ViewBookingStats.fee_all_count:long =>=>=> RelationalSchema.Column>> viewbookingstats.fee_all_count;
ClassDiagram.Attribut>> ViewBookingStats.transaction_items_sum:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.transaction_items_sum;
ClassDiagram.Attribut>> ViewBookingStats.transaction_booking_items_sum:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.transaction_booking_items_sum;
ClassDiagram.Attribut>> ViewBookingStats.transaction_other_items_sum:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.transaction_other_items_sum;
ClassDiagram.Attribut>> ViewBookingStats.transaction_items_price:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.transaction_items_price;
ClassDiagram.Attribut>> ViewBookingStats.transaction_booking_items_price:BigDecimal =>=>=> RelationalSchema.Column>> viewbookingstats.transaction_booking_items_price;
ClassDiagram.Attribut>> ViewBookingStats.transaction_items_count:Long =>=>=> RelationalSchema.Column>> viewbookingstats.transaction_items_count;
ClassDiagram.Attribut>> ViewBookingStats.transaction_booking_items_count:Long =>=>=> RelationalSchema.Column>> viewbookingstats.transaction_booking_items_count;
ClassDiagram.Attribut>> ViewBookingStats.transaction_other_items_count:Long =>=>=> RelationalSchema.Column>> viewbookingstats.transaction_other_items_count;
ClassDiagram.Attribut>> ViewBookingStats.notes_count:Long =>=>=> RelationalSchema.Column>> viewbookingstats.notes_count;
ClassDiagram.Attribut>> ListingBookingOverview.serialversionuid:long =>=>=> RelationalSchema.Column>> listingbookingoverview.serialversionuid;
ClassDiagram.Attribut>> ListingBookingOverview.GeneratedName:Listing =>=>=> RelationalSchema.Column>> listingbookingoverview.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> ListingBookingOverview.month:Date =>=>=> RelationalSchema.Column>> listingbookingoverview.month PRIMARY KEY;
ClassDiagram.Attribut>> ListingBookingOverview.currency_code:String =>=>=> RelationalSchema.Column>> listingbookingoverview.currency_code PRIMARY KEY;
ClassDiagram.Attribut>> ListingBookingOverview.sum:BigDecimal =>=>=> RelationalSchema.Column>> listingbookingoverview.sum;
ClassDiagram.Attribut>> ListingBookingOverview.grosssum:BigDecimal =>=>=> RelationalSchema.Column>> listingbookingoverview.grosssum;
ClassDiagram.Attribut>> ListingBookingOverview.avg:BigDecimal =>=>=> RelationalSchema.Column>> listingbookingoverview.avg;
ClassDiagram.Attribut>> ListingBookingOverview.grossavg:BigDecimal =>=>=> RelationalSchema.Column>> listingbookingoverview.grossavg;
ClassDiagram.Attribut>> ListingBookingOverview.daysoccupied:Integer =>=>=> RelationalSchema.Column>> listingbookingoverview.daysoccupied;
ClassDiagram.Attribut>> ListingBookingOverview.rentprice:BigDecimal =>=>=> RelationalSchema.Column>> listingbookingoverview.rentprice;
ClassDiagram.Attribut>> ListingBookingOverview.ownerbookings:Integer =>=>=> RelationalSchema.Column>> listingbookingoverview.ownerbookings;
ClassDiagram.Attribut>> UserStats.serialversionuid:long =>=>=> RelationalSchema.Column>> userstats.serialversionuid;
ClassDiagram.Attribut>> UserStats.GeneratedName:User =>=>=> RelationalSchema.Column>> userstats.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> UserStats.keys30d:Long =>=>=> RelationalSchema.Column>> userstats.keys30d;
ClassDiagram.Attribut>> UserStats.money:BigDecimal =>=>=> RelationalSchema.Column>> userstats.money;
ClassDiagram.Attribut>> UserStats.avail30d:Long =>=>=> RelationalSchema.Column>> userstats.avail30d;
ClassDiagram.Attribut>> ViewCaseStats.serialversionuid:long =>=>=> RelationalSchema.Column>> viewcasestats.serialversionuid;
ClassDiagram.Attribut>> ViewCaseStats.x:Case =>=>=> RelationalSchema.Column>> viewcasestats.x PRIMARY KEY;
ClassDiagram.Attribut>> ViewCaseStats.finished:Long =>=>=> RelationalSchema.Column>> viewcasestats.finished;
ClassDiagram.Attribut>> ViewCaseStats.inprogress:Long =>=>=> RelationalSchema.Column>> viewcasestats.inprogress;
ClassDiagram.Attribut>> ViewCaseStats.done:Long =>=>=> RelationalSchema.Column>> viewcasestats.done;
ClassDiagram.Attribut>> ViewCaseStats.total:Long =>=>=> RelationalSchema.Column>> viewcasestats.total;
ClassDiagram.Attribut>> ViewCaseStats.prioritynumber:Long =>=>=> RelationalSchema.Column>> viewcasestats.prioritynumber;
ClassDiagram.Attribut>> ViewCaseStats.localityname:String =>=>=> RelationalSchema.Column>> viewcasestats.localityname;
ClassDiagram.Attribut>> ViewListingCurrentBooking.serialversionuid:long =>=>=> RelationalSchema.Column>> viewlistingcurrentbooking.serialversionuid;
ClassDiagram.Attribut>> ViewListingCurrentBooking.id:Long =>=>=> RelationalSchema.Column>> viewlistingcurrentbooking.id PRIMARY KEY;
ClassDiagram.Attribut>> CaseTag.serialversionuid:long =>=>=> RelationalSchema.Column>> casetag.serialversionuid;
ClassDiagram.Attribut>> CaseTag.id:Long =>=>=> RelationalSchema.Column>> casetag.id PRIMARY KEY;
ClassDiagram.Attribut>> CaseTag.name:String =>=>=> RelationalSchema.Column>> casetag.name;
ClassDiagram.Attribut>> CaseTag.disabled:boolean =>=>=> RelationalSchema.Column>> casetag.disabled;
ClassDiagram.Attribut>> Currency.serialversionuid:long =>=>=> RelationalSchema.Column>> currency.serialversionuid;
ClassDiagram.Attribut>> Currency.code:String =>=>=> RelationalSchema.Column>> currency.code PRIMARY KEY;
ClassDiagram.Attribut>> Currency.name:String =>=>=> RelationalSchema.Column>> currency.name;
ClassDiagram.Attribut>> Subtask.serialversionuid:long =>=>=> RelationalSchema.Column>> subtask.serialversionuid;
ClassDiagram.Attribut>> Subtask.id:Long =>=>=> RelationalSchema.Column>> subtask.id PRIMARY KEY;
ClassDiagram.Attribut>> Subtask.name:String =>=>=> RelationalSchema.Column>> subtask.name;
ClassDiagram.Attribut>> Subtask.state:SubtaskState =>=>=> RelationalSchema.Column>> subtask.state;
ClassDiagram.Attribut>> Group.serialversionuid:long =>=>=> RelationalSchema.Column>> group.serialversionuid;
ClassDiagram.Attribut>> Group.id:Long =>=>=> RelationalSchema.Column>> group.id PRIMARY KEY;
ClassDiagram.Attribut>> Group.name:String =>=>=> RelationalSchema.Column>> group.name;
ClassDiagram.Attribut>> Group.department:boolean =>=>=> RelationalSchema.Column>> group.department;
ClassDiagram.Attribut>> CaseFeedback.serialversionuid:long =>=>=> RelationalSchema.Column>> casefeedback.serialversionuid;
ClassDiagram.Attribut>> CaseFeedback.id:Long =>=>=> RelationalSchema.Column>> casefeedback.id PRIMARY KEY;
ClassDiagram.Attribut>> CaseFeedback.hostinformed:boolean =>=>=> RelationalSchema.Column>> casefeedback.hostinformed;
ClassDiagram.Attribut>> CaseFeedback.guestinformed:boolean =>=>=> RelationalSchema.Column>> casefeedback.guestinformed;
ClassDiagram.Attribut>> CaseFeedback.description:String =>=>=> RelationalSchema.Column>> casefeedback.description;
ClassDiagram.Attribut>> CaseFeedback.type:CaseFeedbackType =>=>=> RelationalSchema.Column>> casefeedback.type;
ClassDiagram.Attribut>> CaseFeedback.reviewedon:Date =>=>=> RelationalSchema.Column>> casefeedback.reviewedon;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.phone:String =>=>=> RelationalSchema.Column>> user.phone;
ClassDiagram.Attribut>> User.created:Date =>=>=> RelationalSchema.Column>> user.created;
ClassDiagram.Attribut>> User.lastactivityfetch:Date =>=>=> RelationalSchema.Column>> user.lastactivityfetch;
ClassDiagram.Attribut>> User.lastactivityread:Date =>=>=> RelationalSchema.Column>> user.lastactivityread;
ClassDiagram.Attribut>> TaskComment.serialversionuid:long =>=>=> RelationalSchema.Column>> taskcomment.serialversionuid;
ClassDiagram.Attribut>> TaskComment.id:Long =>=>=> RelationalSchema.Column>> taskcomment.id PRIMARY KEY;
ClassDiagram.Attribut>> TaskComment.createdon:Date =>=>=> RelationalSchema.Column>> taskcomment.createdon;
ClassDiagram.Attribut>> TaskComment.text:String =>=>=> RelationalSchema.Column>> taskcomment.text;
ClassDiagram.Attribut>> CaseComment.serialversionuid:long =>=>=> RelationalSchema.Column>> casecomment.serialversionuid;
ClassDiagram.Attribut>> CaseComment.id:Long =>=>=> RelationalSchema.Column>> casecomment.id PRIMARY KEY;
ClassDiagram.Attribut>> CaseComment.createdon:Date =>=>=> RelationalSchema.Column>> casecomment.createdon;
ClassDiagram.Attribut>> CaseComment.text:String =>=>=> RelationalSchema.Column>> casecomment.text;
ClassDiagram.Attribut>> Locality.serialversionuid:long =>=>=> RelationalSchema.Column>> locality.serialversionuid;
ClassDiagram.Attribut>> Locality.id:Long =>=>=> RelationalSchema.Column>> locality.id PRIMARY KEY;
ClassDiagram.Attribut>> Locality.name:String =>=>=> RelationalSchema.Column>> locality.name;
ClassDiagram.Attribut>> Locality.color:String =>=>=> RelationalSchema.Column>> locality.color;
ClassDiagram.Attribut>> Listing.serialversionuid:long =>=>=> RelationalSchema.Column>> listing.serialversionuid;
ClassDiagram.Attribut>> Listing.id:Long =>=>=> RelationalSchema.Column>> listing.id PRIMARY KEY;
ClassDiagram.Attribut>> Listing.name:String =>=>=> RelationalSchema.Column>> listing.name;
ClassDiagram.Attribut>> Listing.created:Date =>=>=> RelationalSchema.Column>> listing.created;
ClassDiagram.Attribut>> Listing.position:Coordinates =>=>=> RelationalSchema.Column>> listing.position;
ClassDiagram.Attribut>> Listing.capacity:Integer =>=>=> RelationalSchema.Column>> listing.capacity;
ClassDiagram.Attribut>> Listing.address:String =>=>=> RelationalSchema.Column>> listing.address;
ClassDiagram.Attribut>> Listing.disabled:boolean =>=>=> RelationalSchema.Column>> listing.disabled;
ClassDiagram.Attribut>> Case.id:Long =>=>=> RelationalSchema.Column>> case.id PRIMARY KEY;
ClassDiagram.Attribut>> Case.name:String =>=>=> RelationalSchema.Column>> case.name;
ClassDiagram.Attribut>> Case.description:String =>=>=> RelationalSchema.Column>> case.description;
ClassDiagram.Attribut>> Case.createdon:Date =>=>=> RelationalSchema.Column>> case.createdon;
ClassDiagram.Attribut>> Case.finishedon:Date =>=>=> RelationalSchema.Column>> case.finishedon;
ClassDiagram.Attribut>> Case.deadline:Date =>=>=> RelationalSchema.Column>> case.deadline;
ClassDiagram.Attribut>> Case.GeneratedName:CaseState =>=>=> RelationalSchema.Column>> case.GeneratedName;
ClassDiagram.Attribut>> Case.approvedwithclient:CaseOption =>=>=> RelationalSchema.Column>> case.approvedwithclient;
ClassDiagram.Attribut>> Case.guestinformed:CaseOption =>=>=> RelationalSchema.Column>> case.guestinformed;
ClassDiagram.Attribut>> Case.priority:CasePriority =>=>=> RelationalSchema.Column>> case.priority;
ClassDiagram.Attribut>> Case.assigned:Date =>=>=> RelationalSchema.Column>> case.assigned;
ClassDiagram.Attribut>> Case.template:boolean =>=>=> RelationalSchema.Column>> case.template;
ClassDiagram.Attribut>> Contact.id:Long =>=>=> RelationalSchema.Column>> contact.id PRIMARY KEY;
ClassDiagram.Attribut>> Contact.type:ContactType =>=>=> RelationalSchema.Column>> contact.type;
ClassDiagram.Attribut>> Activity.id:Long =>=>=> RelationalSchema.Column>> activity.id PRIMARY KEY;
ClassDiagram.Attribut>> Activity.createdon:Date =>=>=> RelationalSchema.Column>> activity.createdon;
ClassDiagram.Attribut>> Activity.log:String =>=>=> RelationalSchema.Column>> activity.log;
ClassDiagram.Attribut>> Activity.changes:Set<ActivityChange> =>=>=> RelationalSchema.Column>> activity.changes;
ClassDiagram.Attribut>> Activity.type:ActivityType =>=>=> RelationalSchema.Column>> activity.type;
ClassDiagram.Attribut>> Booking.serialversionuid:long =>=>=> RelationalSchema.Column>> booking.serialversionuid;
ClassDiagram.Attribut>> Booking.id:Long =>=>=> RelationalSchema.Column>> booking.id PRIMARY KEY;
ClassDiagram.Attribut>> Booking.created:Date =>=>=> RelationalSchema.Column>> booking.created;
ClassDiagram.Attribut>> Booking.start:Date =>=>=> RelationalSchema.Column>> booking.start;
ClassDiagram.Attribut>> Booking.end:Date =>=>=> RelationalSchema.Column>> booking.end;
ClassDiagram.Attribut>> Booking.starttime:Date =>=>=> RelationalSchema.Column>> booking.starttime;
ClassDiagram.Attribut>> Booking.endtime:Date =>=>=> RelationalSchema.Column>> booking.endtime;
ClassDiagram.Attribut>> Booking.guestname:String =>=>=> RelationalSchema.Column>> booking.guestname;
ClassDiagram.Attribut>> Booking.guestcount:Long =>=>=> RelationalSchema.Column>> booking.guestcount;
ClassDiagram.Attribut>> Booking.state:BookingState =>=>=> RelationalSchema.Column>> booking.state;
ClassDiagram.Attribut>> Booking.canceled:boolean =>=>=> RelationalSchema.Column>> booking.canceled;
ClassDiagram.Attribut>> Booking.GeneratedName:Price =>=>=> RelationalSchema.Column>> booking.GeneratedName;
ClassDiagram.Attribut>> Task.id:Long =>=>=> RelationalSchema.Column>> task.id PRIMARY KEY;
ClassDiagram.Attribut>> Task.name:String =>=>=> RelationalSchema.Column>> task.name;
ClassDiagram.Attribut>> Task.description:String =>=>=> RelationalSchema.Column>> task.description;
ClassDiagram.Attribut>> Task.priority:TaskPriority =>=>=> RelationalSchema.Column>> task.priority;
ClassDiagram.Attribut>> Task.finished:boolean =>=>=> RelationalSchema.Column>> task.finished;
ClassDiagram.Attribut>> Task.createdon:Date =>=>=> RelationalSchema.Column>> task.createdon;
ClassDiagram.Attribut>> Task.finishedon:Date =>=>=> RelationalSchema.Column>> task.finishedon;
ClassDiagram.Attribut>> Task.deadline:Date =>=>=> RelationalSchema.Column>> task.deadline;
ClassDiagram.Attribut>> Task.deadlineindays:Long =>=>=> RelationalSchema.Column>> task.deadlineindays;
ClassDiagram.Attribut>> Task.priorityonscreen:Long =>=>=> RelationalSchema.Column>> task.priorityonscreen;
ClassDiagram.Attribut>> Task.plannedon:Date =>=>=> RelationalSchema.Column>> task.plannedon;
ClassDiagram.Attribut>> Task.plannedonindays:Long =>=>=> RelationalSchema.Column>> task.plannedonindays;
ClassDiagram.Attribut>> Task.approvedwithclient:CaseOption =>=>=> RelationalSchema.Column>> task.approvedwithclient;
ClassDiagram.Attribut>> Task.guestinformed:CaseOption =>=>=> RelationalSchema.Column>> task.guestinformed;
ClassDiagram.Attribut>> Task.finishedstate:TaskFinishState =>=>=> RelationalSchema.Column>> task.finishedstate;
ClassDiagram.Attribut>> Task.estimatedpurchaseprice:BigDecimal =>=>=> RelationalSchema.Column>> task.estimatedpurchaseprice;
ClassDiagram.Attribut>> Task.purchaseditem:String =>=>=> RelationalSchema.Column>> task.purchaseditem;
ClassDiagram.Attribut>> Task.emailtext:String =>=>=> RelationalSchema.Column>> task.emailtext;
ClassDiagram.Attribut>> Task.problemtext:String =>=>=> RelationalSchema.Column>> task.problemtext;
ClassDiagram.Attribut>> Task.suitableforsupplycheckdepartment:boolean =>=>=> RelationalSchema.Column>> task.suitableforsupplycheckdepartment;
One-To-One relationship between ClassDiagram.Class>>ViewTaskStats  to ClassDiagram.Class>>task represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ViewFullCaseActivity  to ClassDiagram.Class>>case represented by ClassDiagram.Atrribute>>curso;
Many-To-One relationship from ClassDiagram.Class>>ViewFullCaseActivity  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
One-To-One relationship between ClassDiagram.Class>>ViewActivity  to ClassDiagram.Class>>activity represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>ViewBookingStats  to ClassDiagram.Class>>booking represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>ViewBookingStats  to ClassDiagram.Class>>booking represented by ClassDiagram.Atrribute>>next;
One-To-One relationship between ClassDiagram.Class>>ViewBookingStats  to ClassDiagram.Class>>booking represented by ClassDiagram.Atrribute>>prev;
One-To-One relationship between ClassDiagram.Class>>UserStats  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>ViewCaseStats  to ClassDiagram.Class>>case represented by ClassDiagram.Atrribute>>x;
One-To-One relationship between ClassDiagram.Class>>ViewListingCurrentBooking  to ClassDiagram.Class>>listing represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>ViewListingCurrentBooking  to ClassDiagram.Class>>booking represented by ClassDiagram.Atrribute>>current;
One-To-One relationship between ClassDiagram.Class>>ViewListingCurrentBooking  to ClassDiagram.Class>>booking represented by ClassDiagram.Atrribute>>last;
Many-To-One relationship from ClassDiagram.Class>>Subtask  to ClassDiagram.Class>>task represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CaseFeedback  to ClassDiagram.Class>>case represented by ClassDiagram.Atrribute>>curso;
Many-To-One relationship from ClassDiagram.Class>>CaseFeedback  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>reviewedby;
list<group>: user_list<group>(userID:user [PK] #FK to user,list<group>ID:list<group> [PK] #FK to list<group>);
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>userstats represented by ClassDiagram.Atrribute>>stats;
Many-To-One relationship from ClassDiagram.Class>>TaskComment  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
Many-To-One relationship from ClassDiagram.Class>>TaskComment  to ClassDiagram.Class>>task represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CaseActivity  to ClassDiagram.Class>>case represented by ClassDiagram.Atrribute>>curso;
Many-To-One relationship from ClassDiagram.Class>>TaskActivity  to ClassDiagram.Class>>task represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CaseComment  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
Many-To-One relationship from ClassDiagram.Class>>CaseComment  to ClassDiagram.Class>>case represented by ClassDiagram.Atrribute>>curso;
One-To-Many relationship from ClassDiagram.Class>>Listing  to ClassDiagram.Class>>List<ListingBookingOverview>;
One-To-One relationship between ClassDiagram.Class>>Listing  to ClassDiagram.Class>>viewlistingcurrentbooking represented by ClassDiagram.Atrribute>>currentbookingview;
Many-To-One relationship from ClassDiagram.Class>>Listing  to ClassDiagram.Class>>locality represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>listing represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>booking represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
Many-To-One relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>finishedby;
Many-To-One relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>owner;
Many-To-One relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>previousowner;
One-To-One relationship between ClassDiagram.Class>>Case  to ClassDiagram.Class>>viewcasestats represented by ClassDiagram.Atrribute>>stats;
Many-To-One relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>assignee;
Many-To-One relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>previousassignee;
Many-To-Many relationship between ClassDiagram.Class>>Case  and ClassDiagram.Class>>list<casetag>: case_casetag(case_id:Case [PK] #FK to Case,tag_id:list<casetag> [PK] #FK to list<casetag>);
Many-To-Many relationship between ClassDiagram.Class>>Case  and ClassDiagram.Class>>list<user>: case_casetag(case_id:Case [PK] #FK to Case,tag_id:list<casetag> [PK] #FK to list<casetag>);case_followers(case_id:Case [PK] #FK to Case,user_id:list<user> [PK] #FK to list<user>);
Many-To-One relationship from ClassDiagram.Class>>Case  to ClassDiagram.Class>>group represented by ClassDiagram.Atrribute>>role;
Many-To-One relationship from ClassDiagram.Class>>Contact  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Activity  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
One-To-One relationship between ClassDiagram.Class>>Activity  to ClassDiagram.Class>>viewactivity represented by ClassDiagram.Atrribute>>view;
One-To-One relationship between ClassDiagram.Class>>Booking  to ClassDiagram.Class>>viewbookingstats represented by ClassDiagram.Atrribute>>stats;
Many-To-One relationship from ClassDiagram.Class>>Booking  to ClassDiagram.Class>>listing represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Booking  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
Many-To-One relationship from ClassDiagram.Class>>Booking  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>canceledby;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>case represented by ClassDiagram.Atrribute>>curso;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>case represented by ClassDiagram.Atrribute>>previous;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>assignee;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>group represented by ClassDiagram.Atrribute>>assigneerole;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>previousassignee;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>finshedby;
One-To-One relationship between ClassDiagram.Class>>Task  to ClassDiagram.Class>>viewtaskstats represented by ClassDiagram.Atrribute>>stats;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>reviewedby;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>locality represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>listing represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>List<Subtask>;
One-To-Many relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>List<TaskComment>;
Many-To-One relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>booking represented by ClassDiagram.Atrribute>>lockbox;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Activity  ;
