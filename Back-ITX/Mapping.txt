ClassDiagram.Class>> ControlMercaderia =>=>=> RelationalSchema.Table>> controlmercaderia;
ClassDiagram.Class>> Proveedor =>=>=> RelationalSchema.Table>> proveedor;
ClassDiagram.Class>> Personal =>=>=> RelationalSchema.Table>> personal;
ClassDiagram.Class>> RolesUsuario =>=>=> RelationalSchema.Table>> rolesusuario;
ClassDiagram.Class>> Producto =>=>=> RelationalSchema.Table>> producto;
ClassDiagram.Class>> Empresa =>=>=> RelationalSchema.Table>> empresa;
ClassDiagram.Class>> DetalleVenta =>=>=> RelationalSchema.Table>> detalleventa;
ClassDiagram.Class>> Persona =>=>=> RelationalSchema.Table>> persona;
ClassDiagram.Class>> Bodega =>=>=> RelationalSchema.Table>> bodega;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Class>> Venta =>=>=> RelationalSchema.Table>> venta;
ClassDiagram.Class>> Roles =>=>=> RelationalSchema.Table>> roles;
ClassDiagram.Class>> Compra =>=>=> RelationalSchema.Table>> compra;
ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Attribut>> ControlMercaderia.id:long =>=>=> RelationalSchema.Column>> controlmercaderia.id PRIMARY KEY;
ClassDiagram.Attribut>> ControlMercaderia.stock_min:int =>=>=> RelationalSchema.Column>> controlmercaderia.stock_min;
ClassDiagram.Attribut>> ControlMercaderia.stock_max:int =>=>=> RelationalSchema.Column>> controlmercaderia.stock_max;
ClassDiagram.Attribut>> ControlMercaderia.fecha_elaboracion:Date =>=>=> RelationalSchema.Column>> controlmercaderia.fecha_elaboracion;
ClassDiagram.Attribut>> ControlMercaderia.fecha_caducidad:Date =>=>=> RelationalSchema.Column>> controlmercaderia.fecha_caducidad;
ClassDiagram.Attribut>> Proveedor.idproveedor:Long =>=>=> RelationalSchema.Column>> proveedor.idproveedor PRIMARY KEY;
ClassDiagram.Attribut>> Proveedor.ruc:String =>=>=> RelationalSchema.Column>> proveedor.ruc;
ClassDiagram.Attribut>> Proveedor.nombreproveedor:String =>=>=> RelationalSchema.Column>> proveedor.nombreproveedor;
ClassDiagram.Attribut>> Proveedor.estado:boolean =>=>=> RelationalSchema.Column>> proveedor.estado;
ClassDiagram.Attribut>> Proveedor.fecharegistro:Date =>=>=> RelationalSchema.Column>> proveedor.fecharegistro;
ClassDiagram.Attribut>> Proveedor.cuentasbancarias:String =>=>=> RelationalSchema.Column>> proveedor.cuentasbancarias;
ClassDiagram.Attribut>> Proveedor.giroproveedor:String =>=>=> RelationalSchema.Column>> proveedor.giroproveedor;
ClassDiagram.Attribut>> Proveedor.observaciones:String =>=>=> RelationalSchema.Column>> proveedor.observaciones;
ClassDiagram.Attribut>> Proveedor.emailproveedor:String =>=>=> RelationalSchema.Column>> proveedor.emailproveedor;
ClassDiagram.Attribut>> Proveedor.celularproveedor:String =>=>=> RelationalSchema.Column>> proveedor.celularproveedor;
ClassDiagram.Attribut>> Proveedor.telefonoproveedor:String =>=>=> RelationalSchema.Column>> proveedor.telefonoproveedor;
ClassDiagram.Attribut>> Proveedor.paginaweb:String =>=>=> RelationalSchema.Column>> proveedor.paginaweb;
ClassDiagram.Attribut>> Personal.serialversionuid:long =>=>=> RelationalSchema.Column>> personal.serialversionuid;
ClassDiagram.Attribut>> Personal.idpersonal:Long =>=>=> RelationalSchema.Column>> personal.idpersonal PRIMARY KEY;
ClassDiagram.Attribut>> Personal.cargo:String =>=>=> RelationalSchema.Column>> personal.cargo;
ClassDiagram.Attribut>> Personal.horario:String =>=>=> RelationalSchema.Column>> personal.horario;
ClassDiagram.Attribut>> Personal.lugartrabajo:String =>=>=> RelationalSchema.Column>> personal.lugartrabajo;
ClassDiagram.Attribut>> Personal.salario:double =>=>=> RelationalSchema.Column>> personal.salario;
ClassDiagram.Attribut>> Personal.fecharegistro:Date =>=>=> RelationalSchema.Column>> personal.fecharegistro;
ClassDiagram.Attribut>> Personal.fotoperfil:String =>=>=> RelationalSchema.Column>> personal.fotoperfil;
ClassDiagram.Attribut>> RolesUsuario.serialversionuid:long =>=>=> RelationalSchema.Column>> rolesusuario.serialversionuid;
ClassDiagram.Attribut>> RolesUsuario.idrolusuario:Long =>=>=> RelationalSchema.Column>> rolesusuario.idrolusuario PRIMARY KEY;
ClassDiagram.Attribut>> RolesUsuario.estado:boolean =>=>=> RelationalSchema.Column>> rolesusuario.estado;
ClassDiagram.Attribut>> Producto.id:long =>=>=> RelationalSchema.Column>> producto.id PRIMARY KEY;
ClassDiagram.Attribut>> Producto.nombre:String =>=>=> RelationalSchema.Column>> producto.nombre;
ClassDiagram.Attribut>> Producto.descripcion:String =>=>=> RelationalSchema.Column>> producto.descripcion;
ClassDiagram.Attribut>> Producto.marca:String =>=>=> RelationalSchema.Column>> producto.marca;
ClassDiagram.Attribut>> Producto.calidad:String =>=>=> RelationalSchema.Column>> producto.calidad;
ClassDiagram.Attribut>> Producto.categoria:String =>=>=> RelationalSchema.Column>> producto.categoria;
ClassDiagram.Attribut>> Producto.peso:double =>=>=> RelationalSchema.Column>> producto.peso;
ClassDiagram.Attribut>> Producto.oferta_descuento:int =>=>=> RelationalSchema.Column>> producto.oferta_descuento;
ClassDiagram.Attribut>> Producto.precio_compra:double =>=>=> RelationalSchema.Column>> producto.precio_compra;
ClassDiagram.Attribut>> Producto.precio_venta:double =>=>=> RelationalSchema.Column>> producto.precio_venta;
ClassDiagram.Attribut>> Producto.imagen:String =>=>=> RelationalSchema.Column>> producto.imagen;
ClassDiagram.Attribut>> Producto.id_proveedor:long =>=>=> RelationalSchema.Column>> producto.id_proveedor;
ClassDiagram.Attribut>> Empresa.serialversionuid:long =>=>=> RelationalSchema.Column>> empresa.serialversionuid;
ClassDiagram.Attribut>> Empresa.idempresa:Long =>=>=> RelationalSchema.Column>> empresa.idempresa PRIMARY KEY;
ClassDiagram.Attribut>> Empresa.ruc:String =>=>=> RelationalSchema.Column>> empresa.ruc;
ClassDiagram.Attribut>> Empresa.mision:String =>=>=> RelationalSchema.Column>> empresa.mision;
ClassDiagram.Attribut>> Empresa.vision:String =>=>=> RelationalSchema.Column>> empresa.vision;
ClassDiagram.Attribut>> Empresa.nombre:String =>=>=> RelationalSchema.Column>> empresa.nombre;
ClassDiagram.Attribut>> Empresa.acronimo:String =>=>=> RelationalSchema.Column>> empresa.acronimo;
ClassDiagram.Attribut>> Empresa.rolcomercial:String =>=>=> RelationalSchema.Column>> empresa.rolcomercial;
ClassDiagram.Attribut>> Empresa.logo:String =>=>=> RelationalSchema.Column>> empresa.logo;
ClassDiagram.Attribut>> Empresa.pais:String =>=>=> RelationalSchema.Column>> empresa.pais;
ClassDiagram.Attribut>> Empresa.provincia:String =>=>=> RelationalSchema.Column>> empresa.provincia;
ClassDiagram.Attribut>> Empresa.ciudad:String =>=>=> RelationalSchema.Column>> empresa.ciudad;
ClassDiagram.Attribut>> Empresa.direccion:String =>=>=> RelationalSchema.Column>> empresa.direccion;
ClassDiagram.Attribut>> Empresa.codigopostal:String =>=>=> RelationalSchema.Column>> empresa.codigopostal;
ClassDiagram.Attribut>> Empresa.telefono:String =>=>=> RelationalSchema.Column>> empresa.telefono;
ClassDiagram.Attribut>> Empresa.celular:String =>=>=> RelationalSchema.Column>> empresa.celular;
ClassDiagram.Attribut>> Empresa.correo:String =>=>=> RelationalSchema.Column>> empresa.correo;
ClassDiagram.Attribut>> Empresa.paginaweb:String =>=>=> RelationalSchema.Column>> empresa.paginaweb;
ClassDiagram.Attribut>> Empresa.estado:boolean =>=>=> RelationalSchema.Column>> empresa.estado;
ClassDiagram.Attribut>> Empresa.cuentasbancarias:String =>=>=> RelationalSchema.Column>> empresa.cuentasbancarias;
ClassDiagram.Attribut>> DetalleVenta.id:long =>=>=> RelationalSchema.Column>> detalleventa.id PRIMARY KEY;
ClassDiagram.Attribut>> DetalleVenta.cantidad:int =>=>=> RelationalSchema.Column>> detalleventa.cantidad;
ClassDiagram.Attribut>> DetalleVenta.iva:int =>=>=> RelationalSchema.Column>> detalleventa.iva;
ClassDiagram.Attribut>> DetalleVenta.sub_total:double =>=>=> RelationalSchema.Column>> detalleventa.sub_total;
ClassDiagram.Attribut>> DetalleVenta.total:double =>=>=> RelationalSchema.Column>> detalleventa.total;
ClassDiagram.Attribut>> Persona.serialversionuid:long =>=>=> RelationalSchema.Column>> persona.serialversionuid;
ClassDiagram.Attribut>> Persona.idpersona:Long =>=>=> RelationalSchema.Column>> persona.idpersona PRIMARY KEY;
ClassDiagram.Attribut>> Persona.cedula:String =>=>=> RelationalSchema.Column>> persona.cedula;
ClassDiagram.Attribut>> Persona.nombres:String =>=>=> RelationalSchema.Column>> persona.nombres;
ClassDiagram.Attribut>> Persona.apellidos:String =>=>=> RelationalSchema.Column>> persona.apellidos;
ClassDiagram.Attribut>> Persona.fechanacimmiento:Date =>=>=> RelationalSchema.Column>> persona.fechanacimmiento;
ClassDiagram.Attribut>> Persona.genero:String =>=>=> RelationalSchema.Column>> persona.genero;
ClassDiagram.Attribut>> Persona.direccion:String =>=>=> RelationalSchema.Column>> persona.direccion;
ClassDiagram.Attribut>> Persona.correo:String =>=>=> RelationalSchema.Column>> persona.correo;
ClassDiagram.Attribut>> Persona.telefono:String =>=>=> RelationalSchema.Column>> persona.telefono;
ClassDiagram.Attribut>> Persona.celular:String =>=>=> RelationalSchema.Column>> persona.celular;
ClassDiagram.Attribut>> Bodega.id:long =>=>=> RelationalSchema.Column>> bodega.id PRIMARY KEY;
ClassDiagram.Attribut>> Bodega.nombre:String =>=>=> RelationalSchema.Column>> bodega.nombre;
ClassDiagram.Attribut>> Bodega.tipobodega:String =>=>=> RelationalSchema.Column>> bodega.tipobodega;
ClassDiagram.Attribut>> Bodega.direccion:String =>=>=> RelationalSchema.Column>> bodega.direccion;
ClassDiagram.Attribut>> Bodega.localidad:String =>=>=> RelationalSchema.Column>> bodega.localidad;
ClassDiagram.Attribut>> Bodega.capacidad_max:int =>=>=> RelationalSchema.Column>> bodega.capacidad_max;
ClassDiagram.Attribut>> Bodega.inventario_disponible:int =>=>=> RelationalSchema.Column>> bodega.inventario_disponible;
ClassDiagram.Attribut>> Bodega.telefono:String =>=>=> RelationalSchema.Column>> bodega.telefono;
ClassDiagram.Attribut>> Bodega.descripcion:String =>=>=> RelationalSchema.Column>> bodega.descripcion;
ClassDiagram.Attribut>> Cliente.serialversionuid:long =>=>=> RelationalSchema.Column>> cliente.serialversionuid;
ClassDiagram.Attribut>> Cliente.idcliente:Long =>=>=> RelationalSchema.Column>> cliente.idcliente PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.observaciones:String =>=>=> RelationalSchema.Column>> cliente.observaciones;
ClassDiagram.Attribut>> Cliente.cuentasbancarias:String =>=>=> RelationalSchema.Column>> cliente.cuentasbancarias;
ClassDiagram.Attribut>> Cliente.estado:boolean =>=>=> RelationalSchema.Column>> cliente.estado;
ClassDiagram.Attribut>> Cliente.fecharegistro:Date =>=>=> RelationalSchema.Column>> cliente.fecharegistro;
ClassDiagram.Attribut>> Venta.id:long =>=>=> RelationalSchema.Column>> venta.id PRIMARY KEY;
ClassDiagram.Attribut>> Venta.fecha:Date =>=>=> RelationalSchema.Column>> venta.fecha;
ClassDiagram.Attribut>> Venta.tipo_venta:String =>=>=> RelationalSchema.Column>> venta.tipo_venta;
ClassDiagram.Attribut>> Roles.serialversionuid:long =>=>=> RelationalSchema.Column>> roles.serialversionuid;
ClassDiagram.Attribut>> Roles.idrol:Long =>=>=> RelationalSchema.Column>> roles.idrol PRIMARY KEY;
ClassDiagram.Attribut>> Roles.nombre:String =>=>=> RelationalSchema.Column>> roles.nombre;
ClassDiagram.Attribut>> Roles.descripcion:String =>=>=> RelationalSchema.Column>> roles.descripcion;
ClassDiagram.Attribut>> Compra.id:long =>=>=> RelationalSchema.Column>> compra.id PRIMARY KEY;
ClassDiagram.Attribut>> Compra.fecha_pedido:Date =>=>=> RelationalSchema.Column>> compra.fecha_pedido;
ClassDiagram.Attribut>> Compra.cantidad:int =>=>=> RelationalSchema.Column>> compra.cantidad;
ClassDiagram.Attribut>> Compra.unidad:String =>=>=> RelationalSchema.Column>> compra.unidad;
ClassDiagram.Attribut>> Compra.valor_producto:double =>=>=> RelationalSchema.Column>> compra.valor_producto;
ClassDiagram.Attribut>> Compra.valor_total:double =>=>=> RelationalSchema.Column>> compra.valor_total;
ClassDiagram.Attribut>> Compra.estado:String =>=>=> RelationalSchema.Column>> compra.estado;
ClassDiagram.Attribut>> Usuario.serialversionuid:long =>=>=> RelationalSchema.Column>> usuario.serialversionuid;
ClassDiagram.Attribut>> Usuario.idusuario:Long =>=>=> RelationalSchema.Column>> usuario.idusuario PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.username:String =>=>=> RelationalSchema.Column>> usuario.username;
ClassDiagram.Attribut>> Usuario.password:String =>=>=> RelationalSchema.Column>> usuario.password;
ClassDiagram.Attribut>> Usuario.estado:boolean =>=>=> RelationalSchema.Column>> usuario.estado;
Many-To-One relationship from ClassDiagram.Class>>Personal  to ClassDiagram.Class>>usuario represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>RolesUsuario  to ClassDiagram.Class>>usuario represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>RolesUsuario  to ClassDiagram.Class>>Roles represented by ClassDiagram.Atrribute>>rol;
Many-To-One relationship from ClassDiagram.Class>>Producto  to ClassDiagram.Class>>compra represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Producto  to ClassDiagram.Class>>DetalleVenta represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Empresa  to ClassDiagram.Class>>Persona represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>DetalleVenta  to ClassDiagram.Class>>Venta represented by ClassDiagram.Atrribute>>//@joincolumn(name;
One-To-Many relationship from ClassDiagram.Class>>DetalleVenta  to ClassDiagram.Class>>List<Producto>;
Many-To-One relationship from ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>usuario represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Venta  to ClassDiagram.Class>>List<DetalleVenta>;
One-To-Many relationship from ClassDiagram.Class>>Compra  to ClassDiagram.Class>>List<Producto>;
Many-To-One relationship from ClassDiagram.Class>>Usuario  to ClassDiagram.Class>>Persona represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Usuario  to ClassDiagram.Class>>Empresa represented by ClassDiagram.Atrribute>>GeneratedName;
