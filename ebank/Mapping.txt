ClassDiagram.Class>> RoadType =>=>=> RelationalSchema.Table>> roadtype;
ClassDiagram.Class>> EmploymentSituation =>=>=> RelationalSchema.Table>> employmentsituation;
ClassDiagram.Class>> Authority =>=>=> RelationalSchema.Table>> authority;
ClassDiagram.Class>> OperationType =>=>=> RelationalSchema.Table>> operationtype;
ClassDiagram.Class>> Fee =>=>=> RelationalSchema.Table>> fee;
ClassDiagram.Class>> Quota =>=>=> RelationalSchema.Table>> quota;
ClassDiagram.Class>> Payment =>=>=> RelationalSchema.Table>> payment;
ClassDiagram.Class>> CivilStatus =>=>=> RelationalSchema.Table>> civilstatus;
ClassDiagram.Class>> AddressGroupType =>=>=> RelationalSchema.Table>> addressgrouptype;
ClassDiagram.Class>> Currency =>=>=> RelationalSchema.Table>> currency;
ClassDiagram.Class>> SubProduct =>=>=> RelationalSchema.Table>> subproduct;
ClassDiagram.Class>> ClientAddress =>=>=> RelationalSchema.Table>> clientaddress;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> FileType =>=>=> RelationalSchema.Table>> filetype;
ClassDiagram.Class>> DocumentType =>=>=> RelationalSchema.Table>> documenttype;
ClassDiagram.Class>> Client =>=>=> RelationalSchema.Table>> client;
ClassDiagram.Class>> Gender =>=>=> RelationalSchema.Table>> gender;
ClassDiagram.Class>> Plan =>=>=> RelationalSchema.Table>> plan;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> UserTrail =>=>=> RelationalSchema.Table>> usertrail;
ClassDiagram.Class>> HousingType =>=>=> RelationalSchema.Table>> housingtype;
ClassDiagram.Class>> PaymentTemp =>=>=> RelationalSchema.Table>> paymenttemp;
ClassDiagram.Class>> ZoneType =>=>=> RelationalSchema.Table>> zonetype;
ClassDiagram.Class>> Option =>=>=> RelationalSchema.Table>> option;
ClassDiagram.Class>> SectorType =>=>=> RelationalSchema.Table>> sectortype;
ClassDiagram.Class>> Ubigeo =>=>=> RelationalSchema.Table>> ubigeo;
ClassDiagram.Class>> ClientContactInformation =>=>=> RelationalSchema.Table>> clientcontactinformation;
ClassDiagram.Class>> Magnitude =>=>=> RelationalSchema.Table>> magnitude;
ClassDiagram.Class>> AccountStatus =>=>=> RelationalSchema.Table>> accountstatus;
ClassDiagram.Class>> OptionType =>=>=> RelationalSchema.Table>> optiontype;
ClassDiagram.Class>> PersonType =>=>=> RelationalSchema.Table>> persontype;
ClassDiagram.Class>> ProductType =>=>=> RelationalSchema.Table>> producttype;
ClassDiagram.Class>> Spending =>=>=> RelationalSchema.Table>> spending;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Schedule =>=>=> RelationalSchema.Table>> schedule;
ClassDiagram.Class>> SpendingGroupType =>=>=> RelationalSchema.Table>> spendinggrouptype;
ClassDiagram.Class>> WarrantyType =>=>=> RelationalSchema.Table>> warrantytype;
ClassDiagram.Class>> AddressType =>=>=> RelationalSchema.Table>> addresstype;
ClassDiagram.Class>> MovementType =>=>=> RelationalSchema.Table>> movementtype;
ClassDiagram.Class>> Movement =>=>=> RelationalSchema.Table>> movement;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> Warranty =>=>=> RelationalSchema.Table>> warranty;
ClassDiagram.Class>> FeeStatus =>=>=> RelationalSchema.Table>> feestatus;
ClassDiagram.Class>> EconomicActivity =>=>=> RelationalSchema.Table>> economicactivity;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> AssestType =>=>=> RelationalSchema.Table>> assesttype;
ClassDiagram.Class>> SpendingType =>=>=> RelationalSchema.Table>> spendingtype;
ClassDiagram.Attribut>> RoadType.type_id:Integer =>=>=> RelationalSchema.Column>> roadtype.type_id PRIMARY KEY;
ClassDiagram.Attribut>> RoadType.description:String =>=>=> RelationalSchema.Column>> roadtype.description;
ClassDiagram.Attribut>> EmploymentSituation.situation_id:Integer =>=>=> RelationalSchema.Column>> employmentsituation.situation_id PRIMARY KEY;
ClassDiagram.Attribut>> EmploymentSituation.description:String =>=>=> RelationalSchema.Column>> employmentsituation.description;
ClassDiagram.Attribut>> EmploymentSituation.alias:String =>=>=> RelationalSchema.Column>> employmentsituation.alias;
ClassDiagram.Attribut>> Authority.authority_id:Integer =>=>=> RelationalSchema.Column>> authority.authority_id PRIMARY KEY;
ClassDiagram.Attribut>> Authority.description:String =>=>=> RelationalSchema.Column>> authority.description;
ClassDiagram.Attribut>> Quota.quota_id:Integer =>=>=> RelationalSchema.Column>> quota.quota_id PRIMARY KEY;
ClassDiagram.Attribut>> Quota.due_:Date =>=>=> RelationalSchema.Column>> quota.due_;
ClassDiagram.Attribut>> Quota.capital:Double =>=>=> RelationalSchema.Column>> quota.capital;
ClassDiagram.Attribut>> Quota.compensatory:Double =>=>=> RelationalSchema.Column>> quota.compensatory;
ClassDiagram.Attribut>> Quota.arrears:Double =>=>=> RelationalSchema.Column>> quota.arrears;
ClassDiagram.Attribut>> Quota.postages:Double =>=>=> RelationalSchema.Column>> quota.postages;
ClassDiagram.Attribut>> Quota.total_fee:Double =>=>=> RelationalSchema.Column>> quota.total_fee;
ClassDiagram.Attribut>> Quota.insurance:Double =>=>=> RelationalSchema.Column>> quota.insurance;
ClassDiagram.Attribut>> Quota.o_insurances:Double =>=>=> RelationalSchema.Column>> quota.o_insurances;
ClassDiagram.Attribut>> Quota.total_pay:Double =>=>=> RelationalSchema.Column>> quota.total_pay;
ClassDiagram.Attribut>> Quota.schedule_id:Integer =>=>=> RelationalSchema.Column>> quota.schedule_id;
ClassDiagram.Attribut>> CivilStatus.status_id:Integer =>=>=> RelationalSchema.Column>> civilstatus.status_id PRIMARY KEY;
ClassDiagram.Attribut>> CivilStatus.description:String =>=>=> RelationalSchema.Column>> civilstatus.description;
ClassDiagram.Attribut>> CivilStatus.alias:String =>=>=> RelationalSchema.Column>> civilstatus.alias;
ClassDiagram.Attribut>> AddressGroupType.group_type_id:Integer =>=>=> RelationalSchema.Column>> addressgrouptype.group_type_id PRIMARY KEY;
ClassDiagram.Attribut>> AddressGroupType.description:String =>=>=> RelationalSchema.Column>> addressgrouptype.description;
ClassDiagram.Attribut>> Currency.currency_id:Integer =>=>=> RelationalSchema.Column>> currency.currency_id PRIMARY KEY;
ClassDiagram.Attribut>> Currency.description:String =>=>=> RelationalSchema.Column>> currency.description;
ClassDiagram.Attribut>> Currency.alias:String =>=>=> RelationalSchema.Column>> currency.alias;
ClassDiagram.Attribut>> SubProduct.sub_product_id:Integer =>=>=> RelationalSchema.Column>> subproduct.sub_product_id PRIMARY KEY;
ClassDiagram.Attribut>> SubProduct.description:String =>=>=> RelationalSchema.Column>> subproduct.description;
ClassDiagram.Attribut>> SubProduct.short_description:String =>=>=> RelationalSchema.Column>> subproduct.short_description;
ClassDiagram.Attribut>> SubProduct.validity_start:Date =>=>=> RelationalSchema.Column>> subproduct.validity_start;
ClassDiagram.Attribut>> SubProduct.validity_end:Date =>=>=> RelationalSchema.Column>> subproduct.validity_end;
ClassDiagram.Attribut>> ClientAddress.address_id:Integer =>=>=> RelationalSchema.Column>> clientaddress.address_id PRIMARY KEY;
ClassDiagram.Attribut>> ClientAddress.zone_name:String =>=>=> RelationalSchema.Column>> clientaddress.zone_name;
ClassDiagram.Attribut>> ClientAddress.block:String =>=>=> RelationalSchema.Column>> clientaddress.block;
ClassDiagram.Attribut>> ClientAddress.lot:String =>=>=> RelationalSchema.Column>> clientaddress.lot;
ClassDiagram.Attribut>> ClientAddress.road_name:String =>=>=> RelationalSchema.Column>> clientaddress.road_name;
ClassDiagram.Attribut>> ClientAddress.road_number:String =>=>=> RelationalSchema.Column>> clientaddress.road_number;
ClassDiagram.Attribut>> ClientAddress.group_name:String =>=>=> RelationalSchema.Column>> clientaddress.group_name;
ClassDiagram.Attribut>> ClientAddress.group_number:String =>=>=> RelationalSchema.Column>> clientaddress.group_number;
ClassDiagram.Attribut>> ClientAddress.sector_name:String =>=>=> RelationalSchema.Column>> clientaddress.sector_name;
ClassDiagram.Attribut>> ClientAddress.reference:String =>=>=> RelationalSchema.Column>> clientaddress.reference;
ClassDiagram.Attribut>> Product.product_id:Integer =>=>=> RelationalSchema.Column>> product.product_id PRIMARY KEY;
ClassDiagram.Attribut>> Product.description:String =>=>=> RelationalSchema.Column>> product.description;
ClassDiagram.Attribut>> Product.short_description:String =>=>=> RelationalSchema.Column>> product.short_description;
ClassDiagram.Attribut>> Product.validity_start:Date =>=>=> RelationalSchema.Column>> product.validity_start;
ClassDiagram.Attribut>> Product.validity_end:Date =>=>=> RelationalSchema.Column>> product.validity_end;
ClassDiagram.Attribut>> DocumentType.type_id:Integer =>=>=> RelationalSchema.Column>> documenttype.type_id PRIMARY KEY;
ClassDiagram.Attribut>> DocumentType.description:String =>=>=> RelationalSchema.Column>> documenttype.description;
ClassDiagram.Attribut>> DocumentType.short_description:String =>=>=> RelationalSchema.Column>> documenttype.short_description;
ClassDiagram.Attribut>> Client.client_id:Integer =>=>=> RelationalSchema.Column>> client.client_id PRIMARY KEY;
ClassDiagram.Attribut>> Client.document_number:String =>=>=> RelationalSchema.Column>> client.document_number;
ClassDiagram.Attribut>> Client.taxpayer_id_number:String =>=>=> RelationalSchema.Column>> client.taxpayer_id_number;
ClassDiagram.Attribut>> Client.business_name:String =>=>=> RelationalSchema.Column>> client.business_name;
ClassDiagram.Attribut>> Client.firstname:String =>=>=> RelationalSchema.Column>> client.firstname;
ClassDiagram.Attribut>> Client.secondname:String =>=>=> RelationalSchema.Column>> client.secondname;
ClassDiagram.Attribut>> Client.lastname_a:String =>=>=> RelationalSchema.Column>> client.lastname_a;
ClassDiagram.Attribut>> Client.lastname_b:String =>=>=> RelationalSchema.Column>> client.lastname_b;
ClassDiagram.Attribut>> Client.married_surname:String =>=>=> RelationalSchema.Column>> client.married_surname;
ClassDiagram.Attribut>> Client.birth:Date =>=>=> RelationalSchema.Column>> client.birth;
ClassDiagram.Attribut>> Client.data_protection_act:Integer =>=>=> RelationalSchema.Column>> client.data_protection_act;
ClassDiagram.Attribut>> Gender.gender_id:Integer =>=>=> RelationalSchema.Column>> gender.gender_id PRIMARY KEY;
ClassDiagram.Attribut>> Gender.description:String =>=>=> RelationalSchema.Column>> gender.description;
ClassDiagram.Attribut>> Gender.alias:String =>=>=> RelationalSchema.Column>> gender.alias;
ClassDiagram.Attribut>> Plan.plan_id:Integer =>=>=> RelationalSchema.Column>> plan.plan_id PRIMARY KEY;
ClassDiagram.Attribut>> Plan.description:String =>=>=> RelationalSchema.Column>> plan.description;
ClassDiagram.Attribut>> User.user_id:Integer =>=>=> RelationalSchema.Column>> user.user_id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.enabled:Integer =>=>=> RelationalSchema.Column>> user.enabled;
ClassDiagram.Attribut>> User.enabled_commentary:String =>=>=> RelationalSchema.Column>> user.enabled_commentary;
ClassDiagram.Attribut>> User.user_expired_:Date =>=>=> RelationalSchema.Column>> user.user_expired_;
ClassDiagram.Attribut>> User.credentials_expired_:Date =>=>=> RelationalSchema.Column>> user.credentials_expired_;
ClassDiagram.Attribut>> User.end_lock_:Date =>=>=> RelationalSchema.Column>> user.end_lock_;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.email_confirmed:Integer =>=>=> RelationalSchema.Column>> user.email_confirmed;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.days_enabled:Integer =>=>=> RelationalSchema.Column>> user.days_enabled;
ClassDiagram.Attribut>> User.failed_attempts:Integer =>=>=> RelationalSchema.Column>> user.failed_attempts;
ClassDiagram.Attribut>> User.user_image:byte =>=>=> RelationalSchema.Column>> user.user_image;
ClassDiagram.Attribut>> UserTrail.user_trail_id:Integer =>=>=> RelationalSchema.Column>> usertrail.user_trail_id PRIMARY KEY;
ClassDiagram.Attribut>> UserTrail.user_id:String =>=>=> RelationalSchema.Column>> usertrail.user_id;
ClassDiagram.Attribut>> UserTrail.d:Date =>=>=> RelationalSchema.Column>> usertrail.d;
ClassDiagram.Attribut>> UserTrail.changes:String =>=>=> RelationalSchema.Column>> usertrail.changes;
ClassDiagram.Attribut>> UserTrail.trigger_username:String =>=>=> RelationalSchema.Column>> usertrail.trigger_username;
ClassDiagram.Attribut>> HousingType.type_id:Integer =>=>=> RelationalSchema.Column>> housingtype.type_id PRIMARY KEY;
ClassDiagram.Attribut>> HousingType.description:String =>=>=> RelationalSchema.Column>> housingtype.description;
ClassDiagram.Attribut>> ZoneType.type_id:Integer =>=>=> RelationalSchema.Column>> zonetype.type_id PRIMARY KEY;
ClassDiagram.Attribut>> ZoneType.description:String =>=>=> RelationalSchema.Column>> zonetype.description;
ClassDiagram.Attribut>> Option.option_id:Integer =>=>=> RelationalSchema.Column>> option.option_id PRIMARY KEY;
ClassDiagram.Attribut>> Option.parent_id:Integer =>=>=> RelationalSchema.Column>> option.parent_id;
ClassDiagram.Attribut>> Option.description:String =>=>=> RelationalSchema.Column>> option.description;
ClassDiagram.Attribut>> Option.alias:String =>=>=> RelationalSchema.Column>> option.alias;
ClassDiagram.Attribut>> Option.url:String =>=>=> RelationalSchema.Column>> option.url;
ClassDiagram.Attribut>> Option.sequence:Integer =>=>=> RelationalSchema.Column>> option.sequence;
ClassDiagram.Attribut>> Option.icon:String =>=>=> RelationalSchema.Column>> option.icon;
ClassDiagram.Attribut>> Option.parameter:String =>=>=> RelationalSchema.Column>> option.parameter;
ClassDiagram.Attribut>> Option.visible:Integer =>=>=> RelationalSchema.Column>> option.visible;
ClassDiagram.Attribut>> SectorType.type_id:Integer =>=>=> RelationalSchema.Column>> sectortype.type_id PRIMARY KEY;
ClassDiagram.Attribut>> SectorType.description:String =>=>=> RelationalSchema.Column>> sectortype.description;
ClassDiagram.Attribut>> Ubigeo.ubigeo_id:Integer =>=>=> RelationalSchema.Column>> ubigeo.ubigeo_id PRIMARY KEY;
ClassDiagram.Attribut>> Ubigeo.ubigeo_code:String =>=>=> RelationalSchema.Column>> ubigeo.ubigeo_code;
ClassDiagram.Attribut>> Ubigeo.department:String =>=>=> RelationalSchema.Column>> ubigeo.department;
ClassDiagram.Attribut>> Ubigeo.province:String =>=>=> RelationalSchema.Column>> ubigeo.province;
ClassDiagram.Attribut>> Ubigeo.district:String =>=>=> RelationalSchema.Column>> ubigeo.district;
ClassDiagram.Attribut>> Ubigeo.full_description:String =>=>=> RelationalSchema.Column>> ubigeo.full_description;
ClassDiagram.Attribut>> ClientContactInformation.contact_information_id:Integer =>=>=> RelationalSchema.Column>> clientcontactinformation.contact_information_id PRIMARY KEY;
ClassDiagram.Attribut>> ClientContactInformation.email:String =>=>=> RelationalSchema.Column>> clientcontactinformation.email;
ClassDiagram.Attribut>> ClientContactInformation.home_phone:String =>=>=> RelationalSchema.Column>> clientcontactinformation.home_phone;
ClassDiagram.Attribut>> ClientContactInformation.cellphone:String =>=>=> RelationalSchema.Column>> clientcontactinformation.cellphone;
ClassDiagram.Attribut>> Magnitude.magnitude_id:Integer =>=>=> RelationalSchema.Column>> magnitude.magnitude_id PRIMARY KEY;
ClassDiagram.Attribut>> Magnitude.description:String =>=>=> RelationalSchema.Column>> magnitude.description;
ClassDiagram.Attribut>> Magnitude.alias:String =>=>=> RelationalSchema.Column>> magnitude.alias;
ClassDiagram.Attribut>> AccountStatus.account_status_id:Integer =>=>=> RelationalSchema.Column>> accountstatus.account_status_id PRIMARY KEY;
ClassDiagram.Attribut>> AccountStatus.operation_:Date =>=>=> RelationalSchema.Column>> accountstatus.operation_;
ClassDiagram.Attribut>> AccountStatus.description:String =>=>=> RelationalSchema.Column>> accountstatus.description;
ClassDiagram.Attribut>> AccountStatus.office:String =>=>=> RelationalSchema.Column>> accountstatus.office;
ClassDiagram.Attribut>> AccountStatus.canal:String =>=>=> RelationalSchema.Column>> accountstatus.canal;
ClassDiagram.Attribut>> AccountStatus.operation:String =>=>=> RelationalSchema.Column>> accountstatus.operation;
ClassDiagram.Attribut>> AccountStatus.pay:Double =>=>=> RelationalSchema.Column>> accountstatus.pay;
ClassDiagram.Attribut>> AccountStatus.itf:Double =>=>=> RelationalSchema.Column>> accountstatus.itf;
ClassDiagram.Attribut>> AccountStatus.accountant:Double =>=>=> RelationalSchema.Column>> accountstatus.accountant;
ClassDiagram.Attribut>> OptionType.type_id:Integer =>=>=> RelationalSchema.Column>> optiontype.type_id PRIMARY KEY;
ClassDiagram.Attribut>> OptionType.description:String =>=>=> RelationalSchema.Column>> optiontype.description;
ClassDiagram.Attribut>> OptionType.alias:String =>=>=> RelationalSchema.Column>> optiontype.alias;
ClassDiagram.Attribut>> PersonType.type_id:Integer =>=>=> RelationalSchema.Column>> persontype.type_id PRIMARY KEY;
ClassDiagram.Attribut>> PersonType.description:String =>=>=> RelationalSchema.Column>> persontype.description;
ClassDiagram.Attribut>> PersonType.alias:String =>=>=> RelationalSchema.Column>> persontype.alias;
ClassDiagram.Attribut>> ProductType.type_id:Integer =>=>=> RelationalSchema.Column>> producttype.type_id PRIMARY KEY;
ClassDiagram.Attribut>> ProductType.description:String =>=>=> RelationalSchema.Column>> producttype.description;
ClassDiagram.Attribut>> ProductType.alias:String =>=>=> RelationalSchema.Column>> producttype.alias;
ClassDiagram.Attribut>> Account.account_id:Integer =>=>=> RelationalSchema.Column>> account.account_id PRIMARY KEY;
ClassDiagram.Attribut>> Account.aaccount:String =>=>=> RelationalSchema.Column>> account.aaccount;
ClassDiagram.Attribut>> Account.disbur_:Date =>=>=> RelationalSchema.Column>> account.disbur_;
ClassDiagram.Attribut>> Account.amount_requested:Double =>=>=> RelationalSchema.Column>> account.amount_requested;
ClassDiagram.Attribut>> Account.payment_priority:String =>=>=> RelationalSchema.Column>> account.payment_priority;
ClassDiagram.Attribut>> Account.number_quotas:Integer =>=>=> RelationalSchema.Column>> account.number_quotas;
ClassDiagram.Attribut>> Account.payday:Integer =>=>=> RelationalSchema.Column>> account.payday;
ClassDiagram.Attribut>> Account.total_length:String =>=>=> RelationalSchema.Column>> account.total_length;
ClassDiagram.Attribut>> Account.interest_rate_mora:Integer =>=>=> RelationalSchema.Column>> account.interest_rate_mora;
ClassDiagram.Attribut>> Account.an_effe_compe_inte_rate:Integer =>=>=> RelationalSchema.Column>> account.an_effe_compe_inte_rate;
ClassDiagram.Attribut>> Account.comm_for_oper_expen:Integer =>=>=> RelationalSchema.Column>> account.comm_for_oper_expen;
ClassDiagram.Attribut>> Account.insurance:String =>=>=> RelationalSchema.Column>> account.insurance;
ClassDiagram.Attribut>> Account.total_debt:Double =>=>=> RelationalSchema.Column>> account.total_debt;
ClassDiagram.Attribut>> Account.outstanding_fees:Integer =>=>=> RelationalSchema.Column>> account.outstanding_fees;
ClassDiagram.Attribut>> Account.tota_inte_mora:Integer =>=>=> RelationalSchema.Column>> account.tota_inte_mora;
ClassDiagram.Attribut>> Account.tota_compe_inte:Integer =>=>=> RelationalSchema.Column>> account.tota_compe_inte;
ClassDiagram.Attribut>> Account.tota_insu:Integer =>=>=> RelationalSchema.Column>> account.tota_insu;
ClassDiagram.Attribut>> Account.amount_disbursed:Double =>=>=> RelationalSchema.Column>> account.amount_disbursed;
ClassDiagram.Attribut>> Account.amount:Double =>=>=> RelationalSchema.Column>> account.amount;
ClassDiagram.Attribut>> Schedule.schedule_id:Integer =>=>=> RelationalSchema.Column>> schedule.schedule_id PRIMARY KEY;
ClassDiagram.Attribut>> Schedule.schedule_number:Integer =>=>=> RelationalSchema.Column>> schedule.schedule_number;
ClassDiagram.Attribut>> Schedule.registration_:Date =>=>=> RelationalSchema.Column>> schedule.registration_;
ClassDiagram.Attribut>> WarrantyType.warranty_type_id:Integer =>=>=> RelationalSchema.Column>> warrantytype.warranty_type_id PRIMARY KEY;
ClassDiagram.Attribut>> WarrantyType.ddescription:String =>=>=> RelationalSchema.Column>> warrantytype.ddescription;
ClassDiagram.Attribut>> AddressType.type_id:Integer =>=>=> RelationalSchema.Column>> addresstype.type_id PRIMARY KEY;
ClassDiagram.Attribut>> AddressType.description:String =>=>=> RelationalSchema.Column>> addresstype.description;
ClassDiagram.Attribut>> Country.country_id:Integer =>=>=> RelationalSchema.Column>> country.country_id PRIMARY KEY;
ClassDiagram.Attribut>> Country.country_code:String =>=>=> RelationalSchema.Column>> country.country_code;
ClassDiagram.Attribut>> Country.description:String =>=>=> RelationalSchema.Column>> country.description;
ClassDiagram.Attribut>> Warranty.warranty_id:Integer =>=>=> RelationalSchema.Column>> warranty.warranty_id PRIMARY KEY;
ClassDiagram.Attribut>> Warranty.ddescription:String =>=>=> RelationalSchema.Column>> warranty.ddescription;
ClassDiagram.Attribut>> Warranty.aaddress:String =>=>=> RelationalSchema.Column>> warranty.aaddress;
ClassDiagram.Attribut>> Warranty.public_record_number:String =>=>=> RelationalSchema.Column>> warranty.public_record_number;
ClassDiagram.Attribut>> Warranty.amount_assessed:String =>=>=> RelationalSchema.Column>> warranty.amount_assessed;
ClassDiagram.Attribut>> EconomicActivity.activity_id:Integer =>=>=> RelationalSchema.Column>> economicactivity.activity_id PRIMARY KEY;
ClassDiagram.Attribut>> EconomicActivity.description:String =>=>=> RelationalSchema.Column>> economicactivity.description;
ClassDiagram.Attribut>> Role.role_id:Integer =>=>=> RelationalSchema.Column>> role.role_id PRIMARY KEY;
ClassDiagram.Attribut>> Role.description:String =>=>=> RelationalSchema.Column>> role.description;
ClassDiagram.Attribut>> Role.alias:String =>=>=> RelationalSchema.Column>> role.alias;
ClassDiagram.Attribut>> AssestType.assest_type_id:Integer =>=>=> RelationalSchema.Column>> assesttype.assest_type_id PRIMARY KEY;
ClassDiagram.Attribut>> AssestType.ddescription:String =>=>=> RelationalSchema.Column>> assesttype.ddescription;
Many-To-One relationship from ClassDiagram.Class>>SubProduct  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ClientAddress  to ClassDiagram.Class>>client represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ClientAddress  to ClassDiagram.Class>>addresstype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ClientAddress  to ClassDiagram.Class>>housingtype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ClientAddress  to ClassDiagram.Class>>zonetype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ClientAddress  to ClassDiagram.Class>>roadtype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ClientAddress  to ClassDiagram.Class>>addressgrouptype represented by ClassDiagram.Atrribute>>grouptype;
Many-To-One relationship from ClassDiagram.Class>>ClientAddress  to ClassDiagram.Class>>sectortype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ClientAddress  to ClassDiagram.Class>>ubigeo represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>producttype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>currency represented by ClassDiagram.Atrribute>>principal;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>currency represented by ClassDiagram.Atrribute>>secundary;
Many-To-Many relationship between ClassDiagram.Class>>Product  and ClassDiagram.Class>>set<plan>: product_plan(product_id:Product [PK] #FK to Product,plan_id:set<plan> [PK] #FK to set<plan>);
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>persontype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>documenttype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>magnitude represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>economicactivity represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>gender represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>nationality;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>residence_;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>civilstatus represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>employmentsituation represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>Set<ClientAddress>;
One-To-Many relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>Set<ClientContactInformation>;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<role>: user_role(user_id:User [PK] #FK to User,role_id:set<role> [PK] #FK to set<role>);
Many-To-One relationship from ClassDiagram.Class>>Option  to ClassDiagram.Class>>optiontype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Option  and ClassDiagram.Class>>set<role>: role_option(option_id:Option [PK] #FK to Option,role_id:set<role> [PK] #FK to set<role>);
Many-To-One relationship from ClassDiagram.Class>>ClientContactInformation  to ClassDiagram.Class>>client represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>AccountStatus  to ClassDiagram.Class>>account represented by ClassDiagram.Atrribute>>_id;
One-To-Many relationship from ClassDiagram.Class>>OptionType  to ClassDiagram.Class>>Set<Option>;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>//@column(name;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>subproduct represented by ClassDiagram.Atrribute>>//@column(name;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>client represented by ClassDiagram.Atrribute>>_id;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>persontype represented by ClassDiagram.Atrribute>>person_type_id;
Many-To-One relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>currency represented by ClassDiagram.Atrribute>>//@column(name;
Many-To-One relationship from ClassDiagram.Class>>Schedule  to ClassDiagram.Class>>account represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Warranty  to ClassDiagram.Class>>warrantytype represented by ClassDiagram.Atrribute>>//@notempty//@column(name;
Many-To-One relationship from ClassDiagram.Class>>Warranty  to ClassDiagram.Class>>assesttype represented by ClassDiagram.Atrribute>>//@notempty//@column(name;
Many-To-One relationship from ClassDiagram.Class>>Warranty  to ClassDiagram.Class>>client represented by ClassDiagram.Atrribute>>_id;
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>set<authority>: role_authority(role_id:Role [PK] #FK to Role,authority_id:set<authority> [PK] #FK to set<authority>);
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>set<option>: role_authority(role_id:Role [PK] #FK to Role,authority_id:set<authority> [PK] #FK to set<authority>);role_option(role_id:Role [PK] #FK to Role,option_id:set<option> [PK] #FK to set<option>);
