ClassDiagram.Class>> PessoaJuridica =>=>=> RelationalSchema.Table>> pessoajuridica;
ClassDiagram.Class>> Pessoa =>=>=> RelationalSchema.Table>> pessoa;
ClassDiagram.Class>> Telefone =>=>=> RelationalSchema.Table>> telefone;
ClassDiagram.Class>> PessoaFisica =>=>=> RelationalSchema.Table>> pessoafisica;
ClassDiagram.Class>> PessoaDocumento =>=>=> RelationalSchema.Table>> pessoadocumento;
ClassDiagram.Attribut>> PessoaJuridica.porte:PorteEmpresa =>=>=> RelationalSchema.Column>> pessoajuridica.porte;
ClassDiagram.Attribut>> Pessoa.id:Integer =>=>=> RelationalSchema.Column>> pessoa.id PRIMARY KEY;
ClassDiagram.Attribut>> Pessoa.nome:String =>=>=> RelationalSchema.Column>> pessoa.nome;
ClassDiagram.Attribut>> Pessoa.cpfcnpj:String =>=>=> RelationalSchema.Column>> pessoa.cpfcnpj;
ClassDiagram.Attribut>> Telefone.id:Integer =>=>=> RelationalSchema.Column>> telefone.id PRIMARY KEY;
ClassDiagram.Attribut>> Telefone.ddd:String =>=>=> RelationalSchema.Column>> telefone.ddd;
ClassDiagram.Attribut>> Telefone.numero:String =>=>=> RelationalSchema.Column>> telefone.numero;
ClassDiagram.Attribut>> PessoaFisica.GeneratedName:Sexo =>=>=> RelationalSchema.Column>> pessoafisica.GeneratedName;
ClassDiagram.Attribut>> PessoaDocumento.id:Integer =>=>=> RelationalSchema.Column>> pessoadocumento.id PRIMARY KEY;
ClassDiagram.Attribut>> PessoaDocumento.tipo:String =>=>=> RelationalSchema.Column>> pessoadocumento.tipo;
ClassDiagram.Attribut>> PessoaDocumento.numero:String =>=>=> RelationalSchema.Column>> pessoadocumento.numero;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Pessoa  ;
