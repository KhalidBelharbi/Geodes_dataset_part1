ClassDiagram.Class>> Admin =>=>=> RelationalSchema.Table>> admin;
ClassDiagram.Class>> ScheduledAppointment =>=>=> RelationalSchema.Table>> scheduledappointment;
ClassDiagram.Class>> TestCenter =>=>=> RelationalSchema.Table>> testcenter;
ClassDiagram.Class>> Patient =>=>=> RelationalSchema.Table>> patient;
ClassDiagram.Class>> Physician =>=>=> RelationalSchema.Table>> physician;
ClassDiagram.Class>> AvailableAppointment =>=>=> RelationalSchema.Table>> availableappointment;
ClassDiagram.Class>> TestCenterAvailability =>=>=> RelationalSchema.Table>> testcenteravailability;
ClassDiagram.Class>> MedicalReport =>=>=> RelationalSchema.Table>> medicalreport;
ClassDiagram.Class>> AppointmentHistory =>=>=> RelationalSchema.Table>> appointmenthistory;
ClassDiagram.Attribut>> Admin.id:String =>=>=> RelationalSchema.Column>> admin.id PRIMARY KEY;
ClassDiagram.Attribut>> Admin.firstname:String =>=>=> RelationalSchema.Column>> admin.firstname;
ClassDiagram.Attribut>> Admin.lastname:String =>=>=> RelationalSchema.Column>> admin.lastname;
ClassDiagram.Attribut>> Admin.email:String =>=>=> RelationalSchema.Column>> admin.email;
ClassDiagram.Attribut>> Admin.password:String =>=>=> RelationalSchema.Column>> admin.password;
ClassDiagram.Attribut>> Admin.createdat:Date =>=>=> RelationalSchema.Column>> admin.createdat;
ClassDiagram.Attribut>> Admin.upat:Date =>=>=> RelationalSchema.Column>> admin.upat;
ClassDiagram.Attribut>> ScheduledAppointment.scheduledappointmentsid:String =>=>=> RelationalSchema.Column>> scheduledappointment.scheduledappointmentsid PRIMARY KEY;
ClassDiagram.Attribut>> ScheduledAppointment.patientid:String =>=>=> RelationalSchema.Column>> scheduledappointment.patientid;
ClassDiagram.Attribut>> ScheduledAppointment.testcentreavailabilityid:String =>=>=> RelationalSchema.Column>> scheduledappointment.testcentreavailabilityid;
ClassDiagram.Attribut>> ScheduledAppointment.appointmentdate:LocalDate =>=>=> RelationalSchema.Column>> scheduledappointment.appointmentdate;
ClassDiagram.Attribut>> ScheduledAppointment.time:String =>=>=> RelationalSchema.Column>> scheduledappointment.time;
ClassDiagram.Attribut>> ScheduledAppointment.checkedin:boolean =>=>=> RelationalSchema.Column>> scheduledappointment.checkedin;
ClassDiagram.Attribut>> ScheduledAppointment.deleteflag:boolean =>=>=> RelationalSchema.Column>> scheduledappointment.deleteflag;
ClassDiagram.Attribut>> ScheduledAppointment.availableappointmentsid:String =>=>=> RelationalSchema.Column>> scheduledappointment.availableappointmentsid;
ClassDiagram.Attribut>> ScheduledAppointment.createdat:Date =>=>=> RelationalSchema.Column>> scheduledappointment.createdat;
ClassDiagram.Attribut>> ScheduledAppointment.upat:Date =>=>=> RelationalSchema.Column>> scheduledappointment.upat;
ClassDiagram.Attribut>> TestCenter.testcentreid:String =>=>=> RelationalSchema.Column>> testcenter.testcentreid PRIMARY KEY;
ClassDiagram.Attribut>> TestCenter.name:String =>=>=> RelationalSchema.Column>> testcenter.name;
ClassDiagram.Attribut>> TestCenter.address1:String =>=>=> RelationalSchema.Column>> testcenter.address1;
ClassDiagram.Attribut>> TestCenter.address2:String =>=>=> RelationalSchema.Column>> testcenter.address2;
ClassDiagram.Attribut>> TestCenter.zip:String =>=>=> RelationalSchema.Column>> testcenter.zip;
ClassDiagram.Attribut>> TestCenter.city:String =>=>=> RelationalSchema.Column>> testcenter.city;
ClassDiagram.Attribut>> TestCenter.state:String =>=>=> RelationalSchema.Column>> testcenter.state;
ClassDiagram.Attribut>> TestCenter.phone:String =>=>=> RelationalSchema.Column>> testcenter.phone;
ClassDiagram.Attribut>> TestCenter.//@jsonserialize(using:Point =>=>=> RelationalSchema.Column>> testcenter.//@jsonserialize(using;
ClassDiagram.Attribut>> TestCenter.createdat:Date =>=>=> RelationalSchema.Column>> testcenter.createdat;
ClassDiagram.Attribut>> TestCenter.upat:Date =>=>=> RelationalSchema.Column>> testcenter.upat;
ClassDiagram.Attribut>> Patient.patientid:String =>=>=> RelationalSchema.Column>> patient.patientid PRIMARY KEY;
ClassDiagram.Attribut>> Patient.firstname:String =>=>=> RelationalSchema.Column>> patient.firstname;
ClassDiagram.Attribut>> Patient.lastname:String =>=>=> RelationalSchema.Column>> patient.lastname;
ClassDiagram.Attribut>> Patient.email:String =>=>=> RelationalSchema.Column>> patient.email;
ClassDiagram.Attribut>> Patient.dob:Date =>=>=> RelationalSchema.Column>> patient.dob;
ClassDiagram.Attribut>> Patient.gender:String =>=>=> RelationalSchema.Column>> patient.gender;
ClassDiagram.Attribut>> Patient.address1:String =>=>=> RelationalSchema.Column>> patient.address1;
ClassDiagram.Attribut>> Patient.address2:String =>=>=> RelationalSchema.Column>> patient.address2;
ClassDiagram.Attribut>> Patient.zip:String =>=>=> RelationalSchema.Column>> patient.zip;
ClassDiagram.Attribut>> Patient.city:String =>=>=> RelationalSchema.Column>> patient.city;
ClassDiagram.Attribut>> Patient.state:String =>=>=> RelationalSchema.Column>> patient.state;
ClassDiagram.Attribut>> Patient.insuranceprovider:String =>=>=> RelationalSchema.Column>> patient.insuranceprovider;
ClassDiagram.Attribut>> Patient.phonenumber:String =>=>=> RelationalSchema.Column>> patient.phonenumber;
ClassDiagram.Attribut>> Patient.createdat:Date =>=>=> RelationalSchema.Column>> patient.createdat;
ClassDiagram.Attribut>> Patient.upat:Date =>=>=> RelationalSchema.Column>> patient.upat;
ClassDiagram.Attribut>> Physician.physicianid:String =>=>=> RelationalSchema.Column>> physician.physicianid PRIMARY KEY;
ClassDiagram.Attribut>> Physician.firstname:String =>=>=> RelationalSchema.Column>> physician.firstname;
ClassDiagram.Attribut>> Physician.lastname:String =>=>=> RelationalSchema.Column>> physician.lastname;
ClassDiagram.Attribut>> Physician.email:String =>=>=> RelationalSchema.Column>> physician.email;
ClassDiagram.Attribut>> Physician.address1:String =>=>=> RelationalSchema.Column>> physician.address1;
ClassDiagram.Attribut>> Physician.address2:String =>=>=> RelationalSchema.Column>> physician.address2;
ClassDiagram.Attribut>> Physician.zip:String =>=>=> RelationalSchema.Column>> physician.zip;
ClassDiagram.Attribut>> Physician.city:String =>=>=> RelationalSchema.Column>> physician.city;
ClassDiagram.Attribut>> Physician.state:String =>=>=> RelationalSchema.Column>> physician.state;
ClassDiagram.Attribut>> Physician.phonenumber:String =>=>=> RelationalSchema.Column>> physician.phonenumber;
ClassDiagram.Attribut>> Physician.createdat:Date =>=>=> RelationalSchema.Column>> physician.createdat;
ClassDiagram.Attribut>> Physician.upat:Date =>=>=> RelationalSchema.Column>> physician.upat;
ClassDiagram.Attribut>> AvailableAppointment.availableappointmentsid:String =>=>=> RelationalSchema.Column>> availableappointment.availableappointmentsid PRIMARY KEY;
ClassDiagram.Attribut>> AvailableAppointment.time:TimeSlot =>=>=> RelationalSchema.Column>> availableappointment.time;
ClassDiagram.Attribut>> AvailableAppointment.appomentcount:int =>=>=> RelationalSchema.Column>> availableappointment.appomentcount;
ClassDiagram.Attribut>> AvailableAppointment.createdat:Date =>=>=> RelationalSchema.Column>> availableappointment.createdat;
ClassDiagram.Attribut>> AvailableAppointment.upat:Date =>=>=> RelationalSchema.Column>> availableappointment.upat;
ClassDiagram.Attribut>> TestCenterAvailability.testcentreavailabilityid:String =>=>=> RelationalSchema.Column>> testcenteravailability.testcentreavailabilityid PRIMARY KEY;
ClassDiagram.Attribut>> TestCenterAvailability.day:LocalDate =>=>=> RelationalSchema.Column>> testcenteravailability.day;
ClassDiagram.Attribut>> TestCenterAvailability.availablecount:int =>=>=> RelationalSchema.Column>> testcenteravailability.availablecount;
ClassDiagram.Attribut>> TestCenterAvailability.createdat:Date =>=>=> RelationalSchema.Column>> testcenteravailability.createdat;
ClassDiagram.Attribut>> TestCenterAvailability.upat:Date =>=>=> RelationalSchema.Column>> testcenteravailability.upat;
ClassDiagram.Attribut>> MedicalReport.id:String =>=>=> RelationalSchema.Column>> medicalreport.id PRIMARY KEY;
ClassDiagram.Attribut>> MedicalReport.result:String =>=>=> RelationalSchema.Column>> medicalreport.result;
ClassDiagram.Attribut>> MedicalReport.reporturl:String =>=>=> RelationalSchema.Column>> medicalreport.reporturl;
ClassDiagram.Attribut>> MedicalReport.createdat:Date =>=>=> RelationalSchema.Column>> medicalreport.createdat;
ClassDiagram.Attribut>> MedicalReport.upat:Date =>=>=> RelationalSchema.Column>> medicalreport.upat;
ClassDiagram.Attribut>> AppointmentHistory.appointmenthistoryid:String =>=>=> RelationalSchema.Column>> appointmenthistory.appointmenthistoryid PRIMARY KEY;
ClassDiagram.Attribut>> AppointmentHistory.physicianid:String =>=>=> RelationalSchema.Column>> appointmenthistory.physicianid;
ClassDiagram.Attribut>> AppointmentHistory.followupneeded:boolean =>=>=> RelationalSchema.Column>> appointmenthistory.followupneeded;
ClassDiagram.Attribut>> AppointmentHistory.appointmentdate:LocalDate =>=>=> RelationalSchema.Column>> appointmenthistory.appointmentdate;
ClassDiagram.Attribut>> AppointmentHistory.time:String =>=>=> RelationalSchema.Column>> appointmenthistory.time;
ClassDiagram.Attribut>> AppointmentHistory.testcenterid:String =>=>=> RelationalSchema.Column>> appointmenthistory.testcenterid;
ClassDiagram.Attribut>> AppointmentHistory.documentuploaded:boolean =>=>=> RelationalSchema.Column>> appointmenthistory.documentuploaded;
ClassDiagram.Attribut>> AppointmentHistory.createdat:Date =>=>=> RelationalSchema.Column>> appointmenthistory.createdat;
ClassDiagram.Attribut>> AppointmentHistory.upat:Date =>=>=> RelationalSchema.Column>> appointmenthistory.upat;
One-To-Many relationship from ClassDiagram.Class>>Patient  to ClassDiagram.Class>>List<AppointmentHistory>;
One-To-One relationship between ClassDiagram.Class>>Physician  to ClassDiagram.Class>>TestCenter represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>AvailableAppointment  to ClassDiagram.Class>>List<ScheduledAppointment>;
One-To-One relationship between ClassDiagram.Class>>TestCenterAvailability  to ClassDiagram.Class>>TestCenter represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>TestCenterAvailability  to ClassDiagram.Class>>List<AvailableAppointment>;
Many-To-One relationship from ClassDiagram.Class>>MedicalReport  to ClassDiagram.Class>>appointmenthistory represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>MedicalReport  to ClassDiagram.Class>>patient represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>MedicalReport  to ClassDiagram.Class>>physician represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>MedicalReport  to ClassDiagram.Class>>TestCenter represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>AppointmentHistory  to ClassDiagram.Class>>patient represented by ClassDiagram.Atrribute>>GeneratedName;
