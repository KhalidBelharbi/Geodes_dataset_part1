ClassDiagram.Class>> Venta =>=>=> RelationalSchema.Table>> venta;
ClassDiagram.Class>> Pelicula =>=>=> RelationalSchema.Table>> pelicula;
ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Class>> Comida =>=>=> RelationalSchema.Table>> comida;
ClassDiagram.Class>> VentaComida =>=>=> RelationalSchema.Table>> ventacomida;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Class>> Config =>=>=> RelationalSchema.Table>> config;
ClassDiagram.Class>> Genero =>=>=> RelationalSchema.Table>> genero;
ClassDiagram.Class>> Rol =>=>=> RelationalSchema.Table>> rol;
ClassDiagram.Class>> Menu =>=>=> RelationalSchema.Table>> menu;
ClassDiagram.Class>> DetalleVenta =>=>=> RelationalSchema.Table>> detalleventa;
ClassDiagram.Attribut>> Venta.idventa:Integer =>=>=> RelationalSchema.Column>> venta.idventa PRIMARY KEY;
ClassDiagram.Attribut>> Venta.fecha:LocalDateTime =>=>=> RelationalSchema.Column>> venta.fecha;
ClassDiagram.Attribut>> Venta.cantidad:Integer =>=>=> RelationalSchema.Column>> venta.cantidad;
ClassDiagram.Attribut>> Venta.total:Double =>=>=> RelationalSchema.Column>> venta.total;
ClassDiagram.Attribut>> Pelicula.idpelicula:Integer =>=>=> RelationalSchema.Column>> pelicula.idpelicula PRIMARY KEY;
ClassDiagram.Attribut>> Pelicula.nombre:String =>=>=> RelationalSchema.Column>> pelicula.nombre;
ClassDiagram.Attribut>> Pelicula.resena:String =>=>=> RelationalSchema.Column>> pelicula.resena;
ClassDiagram.Attribut>> Pelicula.duracion:Integer =>=>=> RelationalSchema.Column>> pelicula.duracion;
ClassDiagram.Attribut>> Pelicula.fechapublicacion:LocalDate =>=>=> RelationalSchema.Column>> pelicula.fechapublicacion;
ClassDiagram.Attribut>> Pelicula.urlportada:String =>=>=> RelationalSchema.Column>> pelicula.urlportada;
ClassDiagram.Attribut>> Usuario.idusuario:Integer =>=>=> RelationalSchema.Column>> usuario.idusuario PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.nombre:String =>=>=> RelationalSchema.Column>> usuario.nombre;
ClassDiagram.Attribut>> Usuario.clave:String =>=>=> RelationalSchema.Column>> usuario.clave;
ClassDiagram.Attribut>> Usuario.estado:boolean =>=>=> RelationalSchema.Column>> usuario.estado;
ClassDiagram.Attribut>> Comida.idcomida:Integer =>=>=> RelationalSchema.Column>> comida.idcomida PRIMARY KEY;
ClassDiagram.Attribut>> Comida.nombre:String =>=>=> RelationalSchema.Column>> comida.nombre;
ClassDiagram.Attribut>> Comida.precio:Double =>=>=> RelationalSchema.Column>> comida.precio;
ClassDiagram.Attribut>> Comida.foto:byte =>=>=> RelationalSchema.Column>> comida.foto;
ClassDiagram.Attribut>> VentaComida.GeneratedName:Venta =>=>=> RelationalSchema.Column>> ventacomida.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> VentaComida.GeneratedName:Comida =>=>=> RelationalSchema.Column>> ventacomida.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.idcliente:Integer =>=>=> RelationalSchema.Column>> cliente.idcliente PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.nombres:String =>=>=> RelationalSchema.Column>> cliente.nombres;
ClassDiagram.Attribut>> Cliente.apellidos:String =>=>=> RelationalSchema.Column>> cliente.apellidos;
ClassDiagram.Attribut>> Cliente.fechanac:LocalDate =>=>=> RelationalSchema.Column>> cliente.fechanac;
ClassDiagram.Attribut>> Cliente.dni:String =>=>=> RelationalSchema.Column>> cliente.dni;
ClassDiagram.Attribut>> Cliente.foto:byte =>=>=> RelationalSchema.Column>> cliente.foto;
ClassDiagram.Attribut>> Config.idconfig:Integer =>=>=> RelationalSchema.Column>> config.idconfig PRIMARY KEY;
ClassDiagram.Attribut>> Config.parametro:String =>=>=> RelationalSchema.Column>> config.parametro;
ClassDiagram.Attribut>> Config.valor:String =>=>=> RelationalSchema.Column>> config.valor;
ClassDiagram.Attribut>> Genero.idgenero:Integer =>=>=> RelationalSchema.Column>> genero.idgenero PRIMARY KEY;
ClassDiagram.Attribut>> Genero.nombre:String =>=>=> RelationalSchema.Column>> genero.nombre;
ClassDiagram.Attribut>> Rol.idrol:Integer =>=>=> RelationalSchema.Column>> rol.idrol PRIMARY KEY;
ClassDiagram.Attribut>> Rol.nombre:String =>=>=> RelationalSchema.Column>> rol.nombre;
ClassDiagram.Attribut>> Rol.descripcion:String =>=>=> RelationalSchema.Column>> rol.descripcion;
ClassDiagram.Attribut>> Menu.idmenu:Integer =>=>=> RelationalSchema.Column>> menu.idmenu PRIMARY KEY;
ClassDiagram.Attribut>> Menu.icono:String =>=>=> RelationalSchema.Column>> menu.icono;
ClassDiagram.Attribut>> Menu.nombre:String =>=>=> RelationalSchema.Column>> menu.nombre;
ClassDiagram.Attribut>> Menu.url:String =>=>=> RelationalSchema.Column>> menu.url;
ClassDiagram.Attribut>> DetalleVenta.iddetalle:Integer =>=>=> RelationalSchema.Column>> detalleventa.iddetalle PRIMARY KEY;
ClassDiagram.Attribut>> DetalleVenta.asiento:String =>=>=> RelationalSchema.Column>> detalleventa.asiento;
Many-To-One relationship from ClassDiagram.Class>>Venta  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Venta  to ClassDiagram.Class>>pelicula represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Venta  to ClassDiagram.Class>>List<DetalleVenta>;
Many-To-One relationship from ClassDiagram.Class>>Pelicula  to ClassDiagram.Class>>genero represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Usuario  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Usuario  and ClassDiagram.Class>>list<rol>: usuario_rol(id_usuario:Usuario [PK] #FK to Usuario,id_rol:list<rol> [PK] #FK to list<rol>);
One-To-One relationship between ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>usuario represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Menu  and ClassDiagram.Class>>list<rol>: menu_rol(id_menu:Menu [PK] #FK to Menu,id_rol:list<rol> [PK] #FK to list<rol>);
Many-To-One relationship from ClassDiagram.Class>>DetalleVenta  to ClassDiagram.Class>>venta represented by ClassDiagram.Atrribute>>GeneratedName;
