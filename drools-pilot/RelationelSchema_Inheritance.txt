
addrentity(serialversionuid:long, sdf:java.text.SimpleDateFormat, appl_no:java.lang.String, version:java.lang.Integer, store_cd:java.lang.String, org_id:java.lang.String, start_dtim:java.lang.String, strt_addr_2:java.lang.String, addr_pnu_cd:java.lang.String, nice_fraud_stat_cd:java.lang.String, lst_work_date:java.lang.Long);

phoneentity(serialversionuid:long, sdf:java.text.SimpleDateFormat, appl_no:java.lang.String, version:java.lang.Integer, store_cd:java.lang.String, org_id:java.lang.String, wire_mobile_gb:java.lang.String, start_dtim:java.lang.String, full_phone_no:java.lang.String, nice_fraud_stat_cd:java.lang.String, lst_work_date:java.lang.Long, resp_cd:java.lang.String, appls:java.util.List<FBApplPhone>);

testregitdetail(seq:int [PK], result_id:int, appl_no:String, version:int, store_cd:String, resp_cd:String, result:TestResult #FK to(testresult));

applentity2(appl_no:String [PK], version:int, store_cd:String);

testresult(serialversionuid:long, resp_cd_0000:String, resp_cd_er01:String, resp_cd_er02:String, resp_cd_er03:String, resp_cd_er11:String, resp_cd_error:String, //@generatedvalue(generator:int [PK], appl_no:String, version:int, store_cd:String, resp_cd:String, rule_result1:String, detail_cnt:int, telegram:String, reg_dt:Date, elapsed_time:long, err_msg:String);

applentity(appl_no:String [PK], version:int, store_cd:String);

applentity3(appl_no:String [PK], version:int, store_cd:String);


** PROGRAM TYPE: JPA+Hibernate(Hybrid)