ClassDiagram.Class>> Game =>=>=> RelationalSchema.Table>> game;
ClassDiagram.Class>> Question =>=>=> RelationalSchema.Table>> question;
ClassDiagram.Class>> QuestionAsked =>=>=> RelationalSchema.Table>> questionasked;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Player =>=>=> RelationalSchema.Table>> player;
ClassDiagram.Attribut>> Game.//varsid:int =>=>=> RelationalSchema.Column>> game.//varsid PRIMARY KEY;
ClassDiagram.Attribut>> Game.starttime:Date =>=>=> RelationalSchema.Column>> game.starttime;
ClassDiagram.Attribut>> Game.endtime:Date =>=>=> RelationalSchema.Column>> game.endtime;
ClassDiagram.Attribut>> Game.maxquestions:int =>=>=> RelationalSchema.Column>> game.maxquestions;
ClassDiagram.Attribut>> Question.//neededfunctions://defaultconstructor,getter&setter,tostring,@entity,//@overrideequals(...)&hashid:int =>=>=> RelationalSchema.Column>> question.//neededfunctions://defaultconstructor,getter&setter,tostring,@entity,//@overrideequals(...)&hashid PRIMARY KEY;
ClassDiagram.Attribut>> Question.questiontext:String =>=>=> RelationalSchema.Column>> question.questiontext;
ClassDiagram.Attribut>> Question.answer1answers1:String =>=>=> RelationalSchema.Column>> question.answer1answers1;
ClassDiagram.Attribut>> Question.answers2:String =>=>=> RelationalSchema.Column>> question.answers2;
ClassDiagram.Attribut>> Question.answers3:String =>=>=> RelationalSchema.Column>> question.answers3;
ClassDiagram.Attribut>> Question.answers4:String =>=>=> RelationalSchema.Column>> question.answers4;
ClassDiagram.Attribut>> Question.correctanswer:int =>=>=> RelationalSchema.Column>> question.correctanswer;
ClassDiagram.Attribut>> QuestionAsked.//varsid:int =>=>=> RelationalSchema.Column>> questionasked.//varsid PRIMARY KEY;
ClassDiagram.Attribut>> QuestionAsked.selectedanswer:int =>=>=> RelationalSchema.Column>> questionasked.selectedanswer;
ClassDiagram.Attribut>> Category.//neededfunctions:defaultconstructor,getter&setter,tostring,@entity,//@overrideequals(...)&hashid:int =>=>=> RelationalSchema.Column>> category.//neededfunctions:defaultconstructor,getter&setter,tostring,@entity,//@overrideequals(...)&hashid PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Player.//varsid:int =>=>=> RelationalSchema.Column>> player.//varsid PRIMARY KEY;
ClassDiagram.Attribut>> Player.name:String =>=>=> RelationalSchema.Column>> player.name;
Many-To-One relationship from ClassDiagram.Class>>Game  to ClassDiagram.Class>>player represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Game  and ClassDiagram.Class>>list<category>: master_data_knowledge_test.game_category(gameid:Game [PK] #FK to Game,categoryid:list<category> [PK] #FK to list<category>);
Many-To-One relationship from ClassDiagram.Class>>Question  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>QuestionAsked  to ClassDiagram.Class>>game represented by ClassDiagram.Atrribute>>//booleancorrect;
Many-To-One relationship from ClassDiagram.Class>>QuestionAsked  to ClassDiagram.Class>>question represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<Question>;
One-To-Many relationship from ClassDiagram.Class>>Player  to ClassDiagram.Class>>List<Game>;
