ClassDiagram.Class>> campusModel =>=>=> RelationalSchema.Table>> campusmodel;
ClassDiagram.Class>> AlunoModel =>=>=> RelationalSchema.Table>> alunomodel;
ClassDiagram.Class>> estadoModel =>=>=> RelationalSchema.Table>> estadomodel;
ClassDiagram.Class>> AreaModel =>=>=> RelationalSchema.Table>> areamodel;
ClassDiagram.Class>> cidadeModel =>=>=> RelationalSchema.Table>> cidademodel;
ClassDiagram.Class>> PalestranteModel =>=>=> RelationalSchema.Table>> palestrantemodel;
ClassDiagram.Class>> PessoaModel =>=>=> RelationalSchema.Table>> pessoamodel;
ClassDiagram.Attribut>> campusModel.idcampus:long =>=>=> RelationalSchema.Column>> campusmodel.idcampus PRIMARY KEY;
ClassDiagram.Attribut>> campusModel.campusnome:String =>=>=> RelationalSchema.Column>> campusmodel.campusnome;
ClassDiagram.Attribut>> campusModel.campuscidadeid:int =>=>=> RelationalSchema.Column>> campusmodel.campuscidadeid;
ClassDiagram.Attribut>> campusModel.campusestadoid:int =>=>=> RelationalSchema.Column>> campusmodel.campusestadoid;
ClassDiagram.Attribut>> AlunoModel.idaluno:int =>=>=> RelationalSchema.Column>> alunomodel.idaluno;
ClassDiagram.Attribut>> estadoModel.idestado:long =>=>=> RelationalSchema.Column>> estadomodel.idestado PRIMARY KEY;
ClassDiagram.Attribut>> estadoModel.estadonome:String =>=>=> RelationalSchema.Column>> estadomodel.estadonome;
ClassDiagram.Attribut>> estadoModel.estadosigla:String =>=>=> RelationalSchema.Column>> estadomodel.estadosigla;
ClassDiagram.Attribut>> AreaModel.idarea:int =>=>=> RelationalSchema.Column>> areamodel.idarea PRIMARY KEY;
ClassDiagram.Attribut>> AreaModel.nome:String =>=>=> RelationalSchema.Column>> areamodel.nome;
ClassDiagram.Attribut>> cidadeModel.idcidade:long =>=>=> RelationalSchema.Column>> cidademodel.idcidade PRIMARY KEY;
ClassDiagram.Attribut>> cidadeModel.cidadenome:String =>=>=> RelationalSchema.Column>> cidademodel.cidadenome;
ClassDiagram.Attribut>> PalestranteModel.siape:long =>=>=> RelationalSchema.Column>> palestrantemodel.siape;
ClassDiagram.Attribut>> PessoaModel.idpessoa:long =>=>=> RelationalSchema.Column>> pessoamodel.idpessoa PRIMARY KEY;
ClassDiagram.Attribut>> PessoaModel.nome:String =>=>=> RelationalSchema.Column>> pessoamodel.nome;
ClassDiagram.Attribut>> PessoaModel.email:String =>=>=> RelationalSchema.Column>> pessoamodel.email;
ClassDiagram.Attribut>> PessoaModel.idade:int =>=>=> RelationalSchema.Column>> pessoamodel.idade;
ClassDiagram.Attribut>> PessoaModel.cpf:long =>=>=> RelationalSchema.Column>> pessoamodel.cpf;
ClassDiagram.Attribut>> PessoaModel.rg:String =>=>=> RelationalSchema.Column>> pessoamodel.rg;
One-To-Many relationship from ClassDiagram.Class>>AreaModel  to ClassDiagram.Class>>List<PalestranteModel>;
Many-To-One relationship from ClassDiagram.Class>>cidadeModel  to ClassDiagram.Class>>estadomodel represented by ClassDiagram.Atrribute>>estado;
Many-To-One relationship from ClassDiagram.Class>>PalestranteModel  to ClassDiagram.Class>>areamodel represented by ClassDiagram.Atrribute>>area;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>PessoaModel  ;
