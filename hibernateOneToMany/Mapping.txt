ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> PostComment =>=>=> RelationalSchema.Table>> postcomment;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Client =>=>=> RelationalSchema.Table>> client;
ClassDiagram.Attribut>> Department.iddeparment:Integer =>=>=> RelationalSchema.Column>> department.iddeparment PRIMARY KEY;
ClassDiagram.Attribut>> Department.namedeparment:String =>=>=> RelationalSchema.Column>> department.namedeparment;
ClassDiagram.Attribut>> PostComment.id:Long =>=>=> RelationalSchema.Column>> postcomment.id PRIMARY KEY;
ClassDiagram.Attribut>> PostComment.review:String =>=>=> RelationalSchema.Column>> postcomment.review;
ClassDiagram.Attribut>> Address.idaddress:long =>=>=> RelationalSchema.Column>> address.idaddress PRIMARY KEY;
ClassDiagram.Attribut>> Employee.idemployee:int =>=>=> RelationalSchema.Column>> employee.idemployee PRIMARY KEY;
ClassDiagram.Attribut>> Employee.nameemployee:String =>=>=> RelationalSchema.Column>> employee.nameemployee;
ClassDiagram.Attribut>> Employee.salaryemployee:double =>=>=> RelationalSchema.Column>> employee.salaryemployee;
ClassDiagram.Attribut>> Employee.degemployee:String =>=>=> RelationalSchema.Column>> employee.degemployee;
ClassDiagram.Attribut>> Phone.id:long =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.type:String =>=>=> RelationalSchema.Column>> phone.type;
ClassDiagram.Attribut>> Phone.areacode:String =>=>=> RelationalSchema.Column>> phone.areacode;
ClassDiagram.Attribut>> Phone.pnumber:String =>=>=> RelationalSchema.Column>> phone.pnumber;
ClassDiagram.Attribut>> Post.id:Long =>=>=> RelationalSchema.Column>> post.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.title:String =>=>=> RelationalSchema.Column>> post.title;
ClassDiagram.Attribut>> Client.id:long =>=>=> RelationalSchema.Column>> client.id PRIMARY KEY;
ClassDiagram.Attribut>> Client.firstname:String =>=>=> RelationalSchema.Column>> client.firstname;
ClassDiagram.Attribut>> Client.lastname:String =>=>=> RelationalSchema.Column>> client.lastname;
ClassDiagram.Attribut>> Client.salary:String =>=>=> RelationalSchema.Column>> client.salary;
ClassDiagram.Attribut>> Client.managerid:String =>=>=> RelationalSchema.Column>> client.managerid;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List;
Many-To-One relationship from ClassDiagram.Class>>PostComment  to ClassDiagram.Class>>post represented by ClassDiagram.Atrribute>>/***bidirectional@onetomany*/;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>client represented by ClassDiagram.Atrribute>>owner;
One-To-Many relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>List<PostComment>;
One-To-Many relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>List<PostComment>;
One-To-Many relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>List<PostComment>;
One-To-Many relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>List<Address>;
One-To-Many relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>List<Phone>;
