ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Instructor =>=>=> RelationalSchema.Table>> instructor;
ClassDiagram.Class>> InstructorDetail =>=>=> RelationalSchema.Table>> instructordetail;
ClassDiagram.Class>> Review =>=>=> RelationalSchema.Table>> review;
ClassDiagram.Attribut>> Course.id:int =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.title:String =>=>=> RelationalSchema.Column>> course.title;
ClassDiagram.Attribut>> Student.id:int =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.firstname:String =>=>=> RelationalSchema.Column>> student.firstname;
ClassDiagram.Attribut>> Student.lastname:String =>=>=> RelationalSchema.Column>> student.lastname;
ClassDiagram.Attribut>> Student.email:String =>=>=> RelationalSchema.Column>> student.email;
ClassDiagram.Attribut>> Instructor.id:int =>=>=> RelationalSchema.Column>> instructor.id PRIMARY KEY;
ClassDiagram.Attribut>> Instructor.firstname:String =>=>=> RelationalSchema.Column>> instructor.firstname;
ClassDiagram.Attribut>> Instructor.lastname:String =>=>=> RelationalSchema.Column>> instructor.lastname;
ClassDiagram.Attribut>> Instructor.email:String =>=>=> RelationalSchema.Column>> instructor.email;
ClassDiagram.Attribut>> InstructorDetail.id:int =>=>=> RelationalSchema.Column>> instructordetail.id PRIMARY KEY;
ClassDiagram.Attribut>> InstructorDetail.youtubechannel:String =>=>=> RelationalSchema.Column>> instructordetail.youtubechannel;
ClassDiagram.Attribut>> InstructorDetail.hobby:String =>=>=> RelationalSchema.Column>> instructordetail.hobby;
ClassDiagram.Attribut>> Review.id:int =>=>=> RelationalSchema.Column>> review.id PRIMARY KEY;
ClassDiagram.Attribut>> Review.comment:String =>=>=> RelationalSchema.Column>> review.comment;
Many-To-One relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>Instructor represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>List<Review>;
Many-To-Many relationship between ClassDiagram.Class>>Course  and ClassDiagram.Class>>Student: course_student(course_id:Course [PK] #FK to Course,student_id:Student [PK] #FK to Student);
Many-To-Many relationship between ClassDiagram.Class>>Student  and ClassDiagram.Class>>Course: course_student(student_id:Student [PK] #FK to Student,course_id:Course [PK] #FK to Course);
One-To-One relationship between ClassDiagram.Class>>Instructor  to ClassDiagram.Class>>Instructor represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Instructor  to ClassDiagram.Class>>List<Course>;
One-To-One relationship between ClassDiagram.Class>>InstructorDetail  to ClassDiagram.Class>>Instructor represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Review  to ClassDiagram.Class>>Course represented by ClassDiagram.Atrribute>>GeneratedName;
