ClassDiagram.Class>> Venda =>=>=> RelationalSchema.Table>> venda;
ClassDiagram.Class>> Produto =>=>=> RelationalSchema.Table>> produto;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Attribut>> Venda.serialversionuid:long =>=>=> RelationalSchema.Column>> venda.serialversionuid;
ClassDiagram.Attribut>> Venda.//@max(value:Long =>=>=> RelationalSchema.Column>> venda.//@max(value PRIMARY KEY;
ClassDiagram.Attribut>> Venda.desconto:BigDecimal =>=>=> RelationalSchema.Column>> venda.desconto;
ClassDiagram.Attribut>> Produto.id:Long =>=>=> RelationalSchema.Column>> produto.id PRIMARY KEY;
ClassDiagram.Attribut>> Produto.descricao:String =>=>=> RelationalSchema.Column>> produto.descricao;
ClassDiagram.Attribut>> Produto.unidademedida:UnidadeMedidaType =>=>=> RelationalSchema.Column>> produto.unidademedida;
ClassDiagram.Attribut>> Produto.valor:BigDecimal =>=>=> RelationalSchema.Column>> produto.valor;
ClassDiagram.Attribut>> Cliente.id:Long =>=>=> RelationalSchema.Column>> cliente.id PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.nome:String =>=>=> RelationalSchema.Column>> cliente.nome;
ClassDiagram.Attribut>> Cliente.telefone:String =>=>=> RelationalSchema.Column>> cliente.telefone;
Many-To-One relationship from ClassDiagram.Class>>Venda  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>Venda  to ClassDiagram.Class>>produto represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>Produto  to ClassDiagram.Class>>List<Venda>;
One-To-Many relationship from ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>List<Venda>;
