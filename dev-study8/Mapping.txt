ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Attribut>> Account.id:Integer =>=>=> RelationalSchema.Column>> account.id PRIMARY KEY;
ClassDiagram.Attribut>> Account.email:String =>=>=> RelationalSchema.Column>> account.email;
ClassDiagram.Attribut>> Account.password:String =>=>=> RelationalSchema.Column>> account.password;
ClassDiagram.Attribut>> Account.roles:Set<AccountRole> =>=>=> RelationalSchema.Column>> account.roles;
ClassDiagram.Attribut>> Event.id:Integer =>=>=> RelationalSchema.Column>> event.id PRIMARY KEY;
ClassDiagram.Attribut>> Event.name:String =>=>=> RelationalSchema.Column>> event.name;
ClassDiagram.Attribut>> Event.description:String =>=>=> RelationalSchema.Column>> event.description;
ClassDiagram.Attribut>> Event.beginenrollmentdatetime:LocalDateTime =>=>=> RelationalSchema.Column>> event.beginenrollmentdatetime;
ClassDiagram.Attribut>> Event.closeenrollmentdatetime:LocalDateTime =>=>=> RelationalSchema.Column>> event.closeenrollmentdatetime;
ClassDiagram.Attribut>> Event.begineventdatetime:LocalDateTime =>=>=> RelationalSchema.Column>> event.begineventdatetime;
ClassDiagram.Attribut>> Event.endeventdatetime:LocalDateTime =>=>=> RelationalSchema.Column>> event.endeventdatetime;
ClassDiagram.Attribut>> Event.//(optional)이게없으면온라인모임location:String =>=>=> RelationalSchema.Column>> event.//(optional)이게없으면온라인모임location;
ClassDiagram.Attribut>> Event.//(optional)baseprice:int =>=>=> RelationalSchema.Column>> event.//(optional)baseprice;
ClassDiagram.Attribut>> Event.//(optional)maxprice:int =>=>=> RelationalSchema.Column>> event.//(optional)maxprice;
ClassDiagram.Attribut>> Event.limitofenrollment:int =>=>=> RelationalSchema.Column>> event.limitofenrollment;
ClassDiagram.Attribut>> Event.offline:boolean =>=>=> RelationalSchema.Column>> event.offline;
ClassDiagram.Attribut>> Event.free:boolean =>=>=> RelationalSchema.Column>> event.free;
ClassDiagram.Attribut>> Event.GeneratedName:EventStatus =>=>=> RelationalSchema.Column>> event.GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>account represented by ClassDiagram.Atrribute>>manger;
