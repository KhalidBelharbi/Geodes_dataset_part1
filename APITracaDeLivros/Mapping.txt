ClassDiagram.Class>> Estoque =>=>=> RelationalSchema.Table>> estoque;
ClassDiagram.Class>> PedidoReposicao =>=>=> RelationalSchema.Table>> pedidoreposicao;
ClassDiagram.Class>> CategoriaLivro =>=>=> RelationalSchema.Table>> categorialivro;
ClassDiagram.Class>> Produto =>=>=> RelationalSchema.Table>> produto;
ClassDiagram.Class>> Livro =>=>=> RelationalSchema.Table>> livro;
ClassDiagram.Class>> Imagem =>=>=> RelationalSchema.Table>> imagem;
ClassDiagram.Class>> PedidoProduto =>=>=> RelationalSchema.Table>> pedidoproduto;
ClassDiagram.Class>> Perfil =>=>=> RelationalSchema.Table>> perfil;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Class>> Papelaria =>=>=> RelationalSchema.Table>> papelaria;
ClassDiagram.Class>> Fornecedor =>=>=> RelationalSchema.Table>> fornecedor;
ClassDiagram.Class>> CategoriaPapelaria =>=>=> RelationalSchema.Table>> categoriapapelaria;
ClassDiagram.Class>> Funcionario =>=>=> RelationalSchema.Table>> funcionario;
ClassDiagram.Class>> Pedido =>=>=> RelationalSchema.Table>> pedido;
ClassDiagram.Class>> Categoria =>=>=> RelationalSchema.Table>> categoria;
ClassDiagram.Class>> Endereco =>=>=> RelationalSchema.Table>> endereco;
ClassDiagram.Class>> Chamado =>=>=> RelationalSchema.Table>> chamado;
ClassDiagram.Attribut>> Estoque.id:Long =>=>=> RelationalSchema.Column>> estoque.id PRIMARY KEY;
ClassDiagram.Attribut>> Estoque.corredor:Integer =>=>=> RelationalSchema.Column>> estoque.corredor;
ClassDiagram.Attribut>> Estoque.prateleira:Character =>=>=> RelationalSchema.Column>> estoque.prateleira;
ClassDiagram.Attribut>> Estoque.created:LocalDate =>=>=> RelationalSchema.Column>> estoque.created;
ClassDiagram.Attribut>> Estoque.updated:LocalDate =>=>=> RelationalSchema.Column>> estoque.updated;
ClassDiagram.Attribut>> Estoque.deletesoft:Boolean =>=>=> RelationalSchema.Column>> estoque.deletesoft;
ClassDiagram.Attribut>> PedidoReposicao.id:Long =>=>=> RelationalSchema.Column>> pedidoreposicao.id PRIMARY KEY;
ClassDiagram.Attribut>> PedidoReposicao.descricao:String =>=>=> RelationalSchema.Column>> pedidoreposicao.descricao;
ClassDiagram.Attribut>> PedidoReposicao.dataentraga:LocalDate =>=>=> RelationalSchema.Column>> pedidoreposicao.dataentraga;
ClassDiagram.Attribut>> PedidoReposicao.obs:String =>=>=> RelationalSchema.Column>> pedidoreposicao.obs;
ClassDiagram.Attribut>> PedidoReposicao.valor:BigDecimal =>=>=> RelationalSchema.Column>> pedidoreposicao.valor;
ClassDiagram.Attribut>> PedidoReposicao.created:LocalDate =>=>=> RelationalSchema.Column>> pedidoreposicao.created;
ClassDiagram.Attribut>> PedidoReposicao.updated:LocalDate =>=>=> RelationalSchema.Column>> pedidoreposicao.updated;
ClassDiagram.Attribut>> PedidoReposicao.deletesoft:Boolean =>=>=> RelationalSchema.Column>> pedidoreposicao.deletesoft;
ClassDiagram.Attribut>> Produto.id:Long =>=>=> RelationalSchema.Column>> produto.id PRIMARY KEY;
ClassDiagram.Attribut>> Produto.nome:String =>=>=> RelationalSchema.Column>> produto.nome;
ClassDiagram.Attribut>> Produto.descricao:String =>=>=> RelationalSchema.Column>> produto.descricao;
ClassDiagram.Attribut>> Produto.porcentagemdesconto:BigDecimal =>=>=> RelationalSchema.Column>> produto.porcentagemdesconto;
ClassDiagram.Attribut>> Produto.valor:BigDecimal =>=>=> RelationalSchema.Column>> produto.valor;
ClassDiagram.Attribut>> Produto.disponivel:Boolean =>=>=> RelationalSchema.Column>> produto.disponivel;
ClassDiagram.Attribut>> Produto.created:LocalDate =>=>=> RelationalSchema.Column>> produto.created;
ClassDiagram.Attribut>> Produto.updated:LocalDate =>=>=> RelationalSchema.Column>> produto.updated;
ClassDiagram.Attribut>> Produto.deletesoft:Boolean =>=>=> RelationalSchema.Column>> produto.deletesoft;
ClassDiagram.Attribut>> Livro.//centimetros:10.3cmaltura:BigDecimal =>=>=> RelationalSchema.Column>> livro.//centimetros:10.3cmaltura;
ClassDiagram.Attribut>> Livro.autor:String =>=>=> RelationalSchema.Column>> livro.autor;
ClassDiagram.Attribut>> Livro.acabamento:TipoAcabamento =>=>=> RelationalSchema.Column>> livro.acabamento;
ClassDiagram.Attribut>> Livro.idioma:String =>=>=> RelationalSchema.Column>> livro.idioma;
ClassDiagram.Attribut>> Livro.//centimetros:5.3cmlargura:BigDecimal =>=>=> RelationalSchema.Column>> livro.//centimetros:5.3cmlargura;
ClassDiagram.Attribut>> Livro.numeropaginas:Integer =>=>=> RelationalSchema.Column>> livro.numeropaginas;
ClassDiagram.Attribut>> Livro.pais:String =>=>=> RelationalSchema.Column>> livro.pais;
ClassDiagram.Attribut>> Livro.//gramas:340gpeso:Integer =>=>=> RelationalSchema.Column>> livro.//gramas:340gpeso;
ClassDiagram.Attribut>> Livro.//centimetros:12.3cmprofundidade:BigDecimal =>=>=> RelationalSchema.Column>> livro.//centimetros:12.3cmprofundidade;
ClassDiagram.Attribut>> Imagem.id:Long =>=>=> RelationalSchema.Column>> imagem.id PRIMARY KEY;
ClassDiagram.Attribut>> Imagem.url:String =>=>=> RelationalSchema.Column>> imagem.url;
ClassDiagram.Attribut>> Imagem.created:LocalDate =>=>=> RelationalSchema.Column>> imagem.created;
ClassDiagram.Attribut>> Imagem.updated:LocalDate =>=>=> RelationalSchema.Column>> imagem.updated;
ClassDiagram.Attribut>> Imagem.deletesoft:Boolean =>=>=> RelationalSchema.Column>> imagem.deletesoft;
ClassDiagram.Attribut>> PedidoProduto.id:Long =>=>=> RelationalSchema.Column>> pedidoproduto.id PRIMARY KEY;
ClassDiagram.Attribut>> PedidoProduto.valorproduto:BigDecimal =>=>=> RelationalSchema.Column>> pedidoproduto.valorproduto;
ClassDiagram.Attribut>> PedidoProduto.datacompra:LocalDate =>=>=> RelationalSchema.Column>> pedidoproduto.datacompra;
ClassDiagram.Attribut>> PedidoProduto.created:LocalDate =>=>=> RelationalSchema.Column>> pedidoproduto.created;
ClassDiagram.Attribut>> PedidoProduto.updated:LocalDate =>=>=> RelationalSchema.Column>> pedidoproduto.updated;
ClassDiagram.Attribut>> PedidoProduto.deletesoft:Boolean =>=>=> RelationalSchema.Column>> pedidoproduto.deletesoft;
ClassDiagram.Attribut>> Perfil.id:Long =>=>=> RelationalSchema.Column>> perfil.id PRIMARY KEY;
ClassDiagram.Attribut>> Perfil.nome:String =>=>=> RelationalSchema.Column>> perfil.nome;
ClassDiagram.Attribut>> Cliente.id:Long =>=>=> RelationalSchema.Column>> cliente.id PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.nome:String =>=>=> RelationalSchema.Column>> cliente.nome;
ClassDiagram.Attribut>> Cliente.datanascimento:LocalDate =>=>=> RelationalSchema.Column>> cliente.datanascimento;
ClassDiagram.Attribut>> Cliente.email:String =>=>=> RelationalSchema.Column>> cliente.email;
ClassDiagram.Attribut>> Cliente.senha:String =>=>=> RelationalSchema.Column>> cliente.senha;
ClassDiagram.Attribut>> Cliente.cpf:String =>=>=> RelationalSchema.Column>> cliente.cpf;
ClassDiagram.Attribut>> Cliente.telefone_01:String =>=>=> RelationalSchema.Column>> cliente.telefone_01;
ClassDiagram.Attribut>> Cliente.telefone_02:String =>=>=> RelationalSchema.Column>> cliente.telefone_02;
ClassDiagram.Attribut>> Cliente.ativo:Boolean =>=>=> RelationalSchema.Column>> cliente.ativo;
ClassDiagram.Attribut>> Cliente.created:LocalDate =>=>=> RelationalSchema.Column>> cliente.created;
ClassDiagram.Attribut>> Cliente.updated:LocalDate =>=>=> RelationalSchema.Column>> cliente.updated;
ClassDiagram.Attribut>> Cliente.deletesoft:Boolean =>=>=> RelationalSchema.Column>> cliente.deletesoft;
ClassDiagram.Attribut>> Fornecedor.id:Long =>=>=> RelationalSchema.Column>> fornecedor.id PRIMARY KEY;
ClassDiagram.Attribut>> Fornecedor.cnpj:String =>=>=> RelationalSchema.Column>> fornecedor.cnpj;
ClassDiagram.Attribut>> Fornecedor.inscricaoestadual:String =>=>=> RelationalSchema.Column>> fornecedor.inscricaoestadual;
ClassDiagram.Attribut>> Fornecedor.nome:String =>=>=> RelationalSchema.Column>> fornecedor.nome;
ClassDiagram.Attribut>> Fornecedor.rua:String =>=>=> RelationalSchema.Column>> fornecedor.rua;
ClassDiagram.Attribut>> Fornecedor.bairro:String =>=>=> RelationalSchema.Column>> fornecedor.bairro;
ClassDiagram.Attribut>> Fornecedor.cidade:String =>=>=> RelationalSchema.Column>> fornecedor.cidade;
ClassDiagram.Attribut>> Fornecedor.cep:String =>=>=> RelationalSchema.Column>> fornecedor.cep;
ClassDiagram.Attribut>> Fornecedor.numero:String =>=>=> RelationalSchema.Column>> fornecedor.numero;
ClassDiagram.Attribut>> Fornecedor.telefone_01:String =>=>=> RelationalSchema.Column>> fornecedor.telefone_01;
ClassDiagram.Attribut>> Fornecedor.telefone_02:String =>=>=> RelationalSchema.Column>> fornecedor.telefone_02;
ClassDiagram.Attribut>> Fornecedor.telefone_03:String =>=>=> RelationalSchema.Column>> fornecedor.telefone_03;
ClassDiagram.Attribut>> Fornecedor.email_01:String =>=>=> RelationalSchema.Column>> fornecedor.email_01;
ClassDiagram.Attribut>> Fornecedor.email_02:String =>=>=> RelationalSchema.Column>> fornecedor.email_02;
ClassDiagram.Attribut>> Fornecedor.email_03:String =>=>=> RelationalSchema.Column>> fornecedor.email_03;
ClassDiagram.Attribut>> Fornecedor.created:LocalDate =>=>=> RelationalSchema.Column>> fornecedor.created;
ClassDiagram.Attribut>> Fornecedor.updated:LocalDate =>=>=> RelationalSchema.Column>> fornecedor.updated;
ClassDiagram.Attribut>> Fornecedor.deletesoft:Boolean =>=>=> RelationalSchema.Column>> fornecedor.deletesoft;
ClassDiagram.Attribut>> Funcionario.id:Long =>=>=> RelationalSchema.Column>> funcionario.id PRIMARY KEY;
ClassDiagram.Attribut>> Funcionario.nome:String =>=>=> RelationalSchema.Column>> funcionario.nome;
ClassDiagram.Attribut>> Funcionario.cpf:String =>=>=> RelationalSchema.Column>> funcionario.cpf;
ClassDiagram.Attribut>> Funcionario.ativo:Boolean =>=>=> RelationalSchema.Column>> funcionario.ativo;
ClassDiagram.Attribut>> Funcionario.created:LocalDate =>=>=> RelationalSchema.Column>> funcionario.created;
ClassDiagram.Attribut>> Funcionario.updated:LocalDate =>=>=> RelationalSchema.Column>> funcionario.updated;
ClassDiagram.Attribut>> Funcionario.deletesoft:Boolean =>=>=> RelationalSchema.Column>> funcionario.deletesoft;
ClassDiagram.Attribut>> Pedido.id:Long =>=>=> RelationalSchema.Column>> pedido.id PRIMARY KEY;
ClassDiagram.Attribut>> Pedido.valortotal:BigDecimal =>=>=> RelationalSchema.Column>> pedido.valortotal;
ClassDiagram.Attribut>> Pedido.datacompra:Date =>=>=> RelationalSchema.Column>> pedido.datacompra;
ClassDiagram.Attribut>> Pedido.status:StatusPedido =>=>=> RelationalSchema.Column>> pedido.status;
ClassDiagram.Attribut>> Pedido.created:LocalDate =>=>=> RelationalSchema.Column>> pedido.created;
ClassDiagram.Attribut>> Pedido.updated:LocalDate =>=>=> RelationalSchema.Column>> pedido.updated;
ClassDiagram.Attribut>> Pedido.deletesoft:Boolean =>=>=> RelationalSchema.Column>> pedido.deletesoft;
ClassDiagram.Attribut>> Categoria.id:Long =>=>=> RelationalSchema.Column>> categoria.id PRIMARY KEY;
ClassDiagram.Attribut>> Categoria.nome:String =>=>=> RelationalSchema.Column>> categoria.nome;
ClassDiagram.Attribut>> Categoria.created:LocalDate =>=>=> RelationalSchema.Column>> categoria.created;
ClassDiagram.Attribut>> Categoria.updated:LocalDate =>=>=> RelationalSchema.Column>> categoria.updated;
ClassDiagram.Attribut>> Categoria.deletesoft:Boolean =>=>=> RelationalSchema.Column>> categoria.deletesoft;
ClassDiagram.Attribut>> Endereco.id:Long =>=>=> RelationalSchema.Column>> endereco.id PRIMARY KEY;
ClassDiagram.Attribut>> Endereco.rua:String =>=>=> RelationalSchema.Column>> endereco.rua;
ClassDiagram.Attribut>> Endereco.bairro:String =>=>=> RelationalSchema.Column>> endereco.bairro;
ClassDiagram.Attribut>> Endereco.cidade:String =>=>=> RelationalSchema.Column>> endereco.cidade;
ClassDiagram.Attribut>> Endereco.cep:String =>=>=> RelationalSchema.Column>> endereco.cep;
ClassDiagram.Attribut>> Endereco.numero:String =>=>=> RelationalSchema.Column>> endereco.numero;
ClassDiagram.Attribut>> Endereco.created:LocalDate =>=>=> RelationalSchema.Column>> endereco.created;
ClassDiagram.Attribut>> Endereco.updated:LocalDate =>=>=> RelationalSchema.Column>> endereco.updated;
ClassDiagram.Attribut>> Endereco.deletesoft:Boolean =>=>=> RelationalSchema.Column>> endereco.deletesoft;
ClassDiagram.Attribut>> Chamado.id:Long =>=>=> RelationalSchema.Column>> chamado.id PRIMARY KEY;
ClassDiagram.Attribut>> Chamado.titulo:String =>=>=> RelationalSchema.Column>> chamado.titulo;
ClassDiagram.Attribut>> Chamado.descricao:String =>=>=> RelationalSchema.Column>> chamado.descricao;
ClassDiagram.Attribut>> Chamado.atendido:Boolean =>=>=> RelationalSchema.Column>> chamado.atendido;
ClassDiagram.Attribut>> Chamado.created:LocalDate =>=>=> RelationalSchema.Column>> chamado.created;
ClassDiagram.Attribut>> Chamado.updated:LocalDate =>=>=> RelationalSchema.Column>> chamado.updated;
ClassDiagram.Attribut>> Chamado.deletesoft:Boolean =>=>=> RelationalSchema.Column>> chamado.deletesoft;
One-To-Many relationship from ClassDiagram.Class>>Estoque  to ClassDiagram.Class>>List<Produto>;
Many-To-One relationship from ClassDiagram.Class>>PedidoReposicao  to ClassDiagram.Class>>funcionario represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PedidoReposicao  to ClassDiagram.Class>>fornecedor represented by ClassDiagram.Atrribute>>GeneratedName;
list<categoria>: produto_list<categoria>(produtoID:produto [PK] #FK to produto,list<categoria>ID:list<categoria> [PK] #FK to list<categoria>);
Many-To-One relationship from ClassDiagram.Class>>Produto  to ClassDiagram.Class>>fornecedor represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Produto  to ClassDiagram.Class>>funcionario represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Produto  to ClassDiagram.Class>>Estoque represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Produto  to ClassDiagram.Class>>List<Imagem>;
Many-To-One relationship from ClassDiagram.Class>>Imagem  to ClassDiagram.Class>>Produto represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PedidoProduto  to ClassDiagram.Class>>pedido represented by ClassDiagram.Atrribute>>decompra;
Many-To-One relationship from ClassDiagram.Class>>PedidoProduto  to ClassDiagram.Class>>Produto represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>List<Endereco>;
One-To-Many relationship from ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>List<Chamado>;
One-To-Many relationship from ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>List<Pedido>;
One-To-Many relationship from ClassDiagram.Class>>Fornecedor  to ClassDiagram.Class>>List<Produto>;
One-To-Many relationship from ClassDiagram.Class>>Fornecedor  to ClassDiagram.Class>>List<PedidoReposicao>;
list<perfil>: funcionario_list<perfil>(funcionarioID:funcionario [PK] #FK to funcionario,list<perfil>ID:list<perfil> [PK] #FK to list<perfil>);
One-To-Many relationship from ClassDiagram.Class>>Funcionario  to ClassDiagram.Class>>List<PedidoReposicao>;
Many-To-One relationship from ClassDiagram.Class>>Pedido  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Pedido  to ClassDiagram.Class>>endereco represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Pedido  to ClassDiagram.Class>>List<PedidoProduto>;
Many-To-One relationship from ClassDiagram.Class>>Endereco  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Chamado  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Produto  ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Categoria  SubClass>>Livro SubClass>>Papelaria ;
