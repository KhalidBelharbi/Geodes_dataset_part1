ClassDiagram.Class>> PersonasProductos =>=>=> RelationalSchema.Table>> personasproductos;
ClassDiagram.Class>> Producto =>=>=> RelationalSchema.Table>> producto;
ClassDiagram.Class>> Nacimiento =>=>=> RelationalSchema.Table>> nacimiento;
ClassDiagram.Class>> Persona =>=>=> RelationalSchema.Table>> persona;
ClassDiagram.Class>> Mascota =>=>=> RelationalSchema.Table>> mascota;
ClassDiagram.Attribut>> PersonasProductos.serialversionuid:long =>=>=> RelationalSchema.Column>> personasproductos.serialversionuid;
ClassDiagram.Attribut>> PersonasProductos.personaid:Long =>=>=> RelationalSchema.Column>> personasproductos.personaid PRIMARY KEY;
ClassDiagram.Attribut>> PersonasProductos.productoid:Long =>=>=> RelationalSchema.Column>> personasproductos.productoid PRIMARY KEY;
ClassDiagram.Attribut>> Producto.serialversionuid:long =>=>=> RelationalSchema.Column>> producto.serialversionuid;
ClassDiagram.Attribut>> Producto.idproducto:Long =>=>=> RelationalSchema.Column>> producto.idproducto PRIMARY KEY;
ClassDiagram.Attribut>> Producto.nombreproducto:String =>=>=> RelationalSchema.Column>> producto.nombreproducto;
ClassDiagram.Attribut>> Producto.precioproducto:Double =>=>=> RelationalSchema.Column>> producto.precioproducto;
ClassDiagram.Attribut>> Nacimiento.serialversionuid:long =>=>=> RelationalSchema.Column>> nacimiento.serialversionuid;
ClassDiagram.Attribut>> Nacimiento.idnacimiento:Long =>=>=> RelationalSchema.Column>> nacimiento.idnacimiento PRIMARY KEY;
ClassDiagram.Attribut>> Nacimiento.fechanacimiento:LocalDate =>=>=> RelationalSchema.Column>> nacimiento.fechanacimiento;
ClassDiagram.Attribut>> Nacimiento.ciudadnacimiento:String =>=>=> RelationalSchema.Column>> nacimiento.ciudadnacimiento;
ClassDiagram.Attribut>> Nacimiento.departamentonacimiento:String =>=>=> RelationalSchema.Column>> nacimiento.departamentonacimiento;
ClassDiagram.Attribut>> Nacimiento.paisnacimiento:String =>=>=> RelationalSchema.Column>> nacimiento.paisnacimiento;
ClassDiagram.Attribut>> Persona.serialversionuid:long =>=>=> RelationalSchema.Column>> persona.serialversionuid;
ClassDiagram.Attribut>> Persona.idpersona:Long =>=>=> RelationalSchema.Column>> persona.idpersona PRIMARY KEY;
ClassDiagram.Attribut>> Persona.nombre:String =>=>=> RelationalSchema.Column>> persona.nombre;
ClassDiagram.Attribut>> Persona.telefono:String =>=>=> RelationalSchema.Column>> persona.telefono;
ClassDiagram.Attribut>> Persona.profesion:String =>=>=> RelationalSchema.Column>> persona.profesion;
ClassDiagram.Attribut>> Persona.tipo:int =>=>=> RelationalSchema.Column>> persona.tipo;
ClassDiagram.Attribut>> Mascota.serialversionuid:long =>=>=> RelationalSchema.Column>> mascota.serialversionuid;
ClassDiagram.Attribut>> Mascota.idmascota:Long =>=>=> RelationalSchema.Column>> mascota.idmascota PRIMARY KEY;
ClassDiagram.Attribut>> Mascota.nombre:String =>=>=> RelationalSchema.Column>> mascota.nombre;
ClassDiagram.Attribut>> Mascota.raza:String =>=>=> RelationalSchema.Column>> mascota.raza;
ClassDiagram.Attribut>> Mascota.colormascota:String =>=>=> RelationalSchema.Column>> mascota.colormascota;
ClassDiagram.Attribut>> Mascota.sexo:String =>=>=> RelationalSchema.Column>> mascota.sexo;
One-To-One relationship between ClassDiagram.Class>>Nacimiento  to ClassDiagram.Class>>persona represented by ClassDiagram.Atrribute>>//paracrearunarelaciÃ³nbidireccional;
One-To-One relationship between ClassDiagram.Class>>Persona  to ClassDiagram.Class>>nacimiento represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Persona  to ClassDiagram.Class>>List<Mascota>;
Many-To-Many relationship between ClassDiagram.Class>>Persona  and ClassDiagram.Class>>list<producto>: personas_productos(persona_id:Persona [PK] #FK to Persona,producto_id:list<producto> [PK] #FK to list<producto>);
Many-To-One relationship from ClassDiagram.Class>>Mascota  to ClassDiagram.Class>>persona represented by ClassDiagram.Atrribute>>id_persona;
