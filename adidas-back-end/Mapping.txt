ClassDiagram.Class>> Size =>=>=> RelationalSchema.Table>> size;
ClassDiagram.Class>> Review =>=>=> RelationalSchema.Table>> review;
ClassDiagram.Class>> Detail =>=>=> RelationalSchema.Table>> detail;
ClassDiagram.Class>> File =>=>=> RelationalSchema.Table>> file;
ClassDiagram.Class>> RGB =>=>=> RelationalSchema.Table>> rgb;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Contact =>=>=> RelationalSchema.Table>> contact;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Color =>=>=> RelationalSchema.Table>> color;
ClassDiagram.Class>> Rating =>=>=> RelationalSchema.Table>> rating;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> HSL =>=>=> RelationalSchema.Table>> hsl;
ClassDiagram.Attribut>> Size.id:Long =>=>=> RelationalSchema.Column>> size.id PRIMARY KEY;
ClassDiagram.Attribut>> Size.value:String =>=>=> RelationalSchema.Column>> size.value;
ClassDiagram.Attribut>> Size.GeneratedName:Gender =>=>=> RelationalSchema.Column>> size.GeneratedName;
ClassDiagram.Attribut>> Size.createdat:Date =>=>=> RelationalSchema.Column>> size.createdat;
ClassDiagram.Attribut>> Size.updat:Date =>=>=> RelationalSchema.Column>> size.updat;
ClassDiagram.Attribut>> Review.id:Long =>=>=> RelationalSchema.Column>> review.id PRIMARY KEY;
ClassDiagram.Attribut>> Review.title:String =>=>=> RelationalSchema.Column>> review.title;
ClassDiagram.Attribut>> Review.review:String =>=>=> RelationalSchema.Column>> review.review;
ClassDiagram.Attribut>> Review.isrecommended:Boolean =>=>=> RelationalSchema.Column>> review.isrecommended;
ClassDiagram.Attribut>> Review.createdat:Date =>=>=> RelationalSchema.Column>> review.createdat;
ClassDiagram.Attribut>> Review.updat:Date =>=>=> RelationalSchema.Column>> review.updat;
ClassDiagram.Attribut>> Detail.id:Long =>=>=> RelationalSchema.Column>> detail.id PRIMARY KEY;
ClassDiagram.Attribut>> Detail.value:String =>=>=> RelationalSchema.Column>> detail.value;
ClassDiagram.Attribut>> Detail.createdat:Date =>=>=> RelationalSchema.Column>> detail.createdat;
ClassDiagram.Attribut>> Detail.updat:Date =>=>=> RelationalSchema.Column>> detail.updat;
ClassDiagram.Attribut>> File.id:Long =>=>=> RelationalSchema.Column>> file.id PRIMARY KEY;
ClassDiagram.Attribut>> File.name:String =>=>=> RelationalSchema.Column>> file.name;
ClassDiagram.Attribut>> File.filepath:String =>=>=> RelationalSchema.Column>> file.filepath;
ClassDiagram.Attribut>> File.fileurl:String =>=>=> RelationalSchema.Column>> file.fileurl;
ClassDiagram.Attribut>> File.filesize:Long =>=>=> RelationalSchema.Column>> file.filesize;
ClassDiagram.Attribut>> File.filetype:String =>=>=> RelationalSchema.Column>> file.filetype;
ClassDiagram.Attribut>> File.createdat:Date =>=>=> RelationalSchema.Column>> file.createdat;
ClassDiagram.Attribut>> File.updat:Date =>=>=> RelationalSchema.Column>> file.updat;
ClassDiagram.Attribut>> RGB.id:Long =>=>=> RelationalSchema.Column>> rgb.id PRIMARY KEY;
ClassDiagram.Attribut>> RGB.r:Double =>=>=> RelationalSchema.Column>> rgb.r;
ClassDiagram.Attribut>> RGB.g:Double =>=>=> RelationalSchema.Column>> rgb.g;
ClassDiagram.Attribut>> RGB.b:Double =>=>=> RelationalSchema.Column>> rgb.b;
ClassDiagram.Attribut>> RGB.createdat:Date =>=>=> RelationalSchema.Column>> rgb.createdat;
ClassDiagram.Attribut>> RGB.updat:Date =>=>=> RelationalSchema.Column>> rgb.updat;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.role:String =>=>=> RelationalSchema.Column>> role.role;
ClassDiagram.Attribut>> Role.createdat:Date =>=>=> RelationalSchema.Column>> role.createdat;
ClassDiagram.Attribut>> Role.updat:Date =>=>=> RelationalSchema.Column>> role.updat;
ClassDiagram.Attribut>> Product.id:Long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.code:String =>=>=> RelationalSchema.Column>> product.code;
ClassDiagram.Attribut>> Product.price:Double =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Product.quantity:Integer =>=>=> RelationalSchema.Column>> product.quantity;
ClassDiagram.Attribut>> Product.description:String =>=>=> RelationalSchema.Column>> product.description;
ClassDiagram.Attribut>> Product.isnew:Boolean =>=>=> RelationalSchema.Column>> product.isnew;
ClassDiagram.Attribut>> Product.gender:String =>=>=> RelationalSchema.Column>> product.gender;
ClassDiagram.Attribut>> Product.production:Date =>=>=> RelationalSchema.Column>> product.production;
ClassDiagram.Attribut>> Product.createdat:Date =>=>=> RelationalSchema.Column>> product.createdat;
ClassDiagram.Attribut>> Product.updat:Date =>=>=> RelationalSchema.Column>> product.updat;
ClassDiagram.Attribut>> Contact.id:Long =>=>=> RelationalSchema.Column>> contact.id PRIMARY KEY;
ClassDiagram.Attribut>> Contact.type:String =>=>=> RelationalSchema.Column>> contact.type;
ClassDiagram.Attribut>> Contact.value:String =>=>=> RelationalSchema.Column>> contact.value;
ClassDiagram.Attribut>> Contact.createdat:Date =>=>=> RelationalSchema.Column>> contact.createdat;
ClassDiagram.Attribut>> Contact.updat:Date =>=>=> RelationalSchema.Column>> contact.updat;
ClassDiagram.Attribut>> Address.id:Long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.country:String =>=>=> RelationalSchema.Column>> address.country;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.provaince:String =>=>=> RelationalSchema.Column>> address.provaince;
ClassDiagram.Attribut>> Address.avenue:String =>=>=> RelationalSchema.Column>> address.avenue;
ClassDiagram.Attribut>> Address.building:String =>=>=> RelationalSchema.Column>> address.building;
ClassDiagram.Attribut>> Address.house:String =>=>=> RelationalSchema.Column>> address.house;
ClassDiagram.Attribut>> Address.createdat:Date =>=>=> RelationalSchema.Column>> address.createdat;
ClassDiagram.Attribut>> Address.updat:Date =>=>=> RelationalSchema.Column>> address.updat;
ClassDiagram.Attribut>> Order.id:Long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.createdat:Date =>=>=> RelationalSchema.Column>> order.createdat;
ClassDiagram.Attribut>> Order.updat:Date =>=>=> RelationalSchema.Column>> order.updat;
ClassDiagram.Attribut>> Category.id:Long =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Category.createdat:Date =>=>=> RelationalSchema.Column>> category.createdat;
ClassDiagram.Attribut>> Category.updat:Date =>=>=> RelationalSchema.Column>> category.updat;
ClassDiagram.Attribut>> Color.id:Long =>=>=> RelationalSchema.Column>> color.id PRIMARY KEY;
ClassDiagram.Attribut>> Color.name:String =>=>=> RelationalSchema.Column>> color.name;
ClassDiagram.Attribut>> Color.hex:String =>=>=> RelationalSchema.Column>> color.hex;
ClassDiagram.Attribut>> Color.createdat:Date =>=>=> RelationalSchema.Column>> color.createdat;
ClassDiagram.Attribut>> Color.updat:Date =>=>=> RelationalSchema.Column>> color.updat;
ClassDiagram.Attribut>> Rating.id:Long =>=>=> RelationalSchema.Column>> rating.id PRIMARY KEY;
ClassDiagram.Attribut>> Rating.value:String =>=>=> RelationalSchema.Column>> rating.value;
ClassDiagram.Attribut>> Rating.createdat:Date =>=>=> RelationalSchema.Column>> rating.createdat;
ClassDiagram.Attribut>> Rating.updat:Date =>=>=> RelationalSchema.Column>> rating.updat;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.createdat:Date =>=>=> RelationalSchema.Column>> user.createdat;
ClassDiagram.Attribut>> User.updat:Date =>=>=> RelationalSchema.Column>> user.updat;
ClassDiagram.Attribut>> HSL.id:Long =>=>=> RelationalSchema.Column>> hsl.id PRIMARY KEY;
ClassDiagram.Attribut>> HSL.h:Double =>=>=> RelationalSchema.Column>> hsl.h;
ClassDiagram.Attribut>> HSL.l:Double =>=>=> RelationalSchema.Column>> hsl.l;
ClassDiagram.Attribut>> HSL.s:Double =>=>=> RelationalSchema.Column>> hsl.s;
ClassDiagram.Attribut>> HSL.createdat:Date =>=>=> RelationalSchema.Column>> hsl.createdat;
ClassDiagram.Attribut>> HSL.updat:Date =>=>=> RelationalSchema.Column>> hsl.updat;
Many-To-One relationship from ClassDiagram.Class>>Review  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
list<color>: product_list<color>(productID:product [PK] #FK to product,list<color>ID:list<color> [PK] #FK to list<color>);
Size: product_list<color>(productID:product [PK] #FK to product,list<color>ID:list<color> [PK] #FK to list<color>);product_Size(productID:product [PK] #FK to product,SizeID:Size [PK] #FK to Size);
list<category>: product_list<color>(productID:product [PK] #FK to product,list<color>ID:list<color> [PK] #FK to list<color>);product_Size(productID:product [PK] #FK to product,SizeID:Size [PK] #FK to Size);product_list<category>(productID:product [PK] #FK to product,list<category>ID:list<category> [PK] #FK to list<category>);
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Detail>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Rating>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Review>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<File>;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
list<product>: order_list<product>(orderID:order [PK] #FK to order,list<product>ID:list<product> [PK] #FK to list<product>);
One-To-One relationship between ClassDiagram.Class>>Color  to ClassDiagram.Class>>hsl represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Color  to ClassDiagram.Class>>rgb represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Address>;
list<role>: user_list<role>(userID:user [PK] #FK to user,list<role>ID:list<role> [PK] #FK to list<role>);
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Contact>;
