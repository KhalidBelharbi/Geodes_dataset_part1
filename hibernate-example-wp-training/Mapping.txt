ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Laptop =>=>=> RelationalSchema.Table>> laptop;
ClassDiagram.Class>> ImportedFourWheelers =>=>=> RelationalSchema.Table>> importedfourwheelers;
ClassDiagram.Class>> Vehicles =>=>=> RelationalSchema.Table>> vehicles;
ClassDiagram.Class>> EmpInfo =>=>=> RelationalSchema.Table>> empinfo;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Vehicle =>=>=> RelationalSchema.Table>> vehicle;
ClassDiagram.Class>> TwoWheelers =>=>=> RelationalSchema.Table>> twowheelers;
ClassDiagram.Class>> Emp =>=>=> RelationalSchema.Table>> emp;
ClassDiagram.Class>> FourWheelers =>=>=> RelationalSchema.Table>> fourwheelers;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Attribut>> Customer.GeneratedName:Name =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Customer.father:Name =>=>=> RelationalSchema.Column>> customer.father;
ClassDiagram.Attribut>> Customer.email:String =>=>=> RelationalSchema.Column>> customer.email;
ClassDiagram.Attribut>> Customer.mobile:String =>=>=> RelationalSchema.Column>> customer.mobile;
ClassDiagram.Attribut>> Laptop.laptopid:int =>=>=> RelationalSchema.Column>> laptop.laptopid PRIMARY KEY;
ClassDiagram.Attribut>> Laptop.brand:String =>=>=> RelationalSchema.Column>> laptop.brand;
ClassDiagram.Attribut>> Laptop.price:int =>=>=> RelationalSchema.Column>> laptop.price;
ClassDiagram.Attribut>> ImportedFourWheelers.duty:int =>=>=> RelationalSchema.Column>> importedfourwheelers.duty;
ClassDiagram.Attribut>> Vehicles.regno:String =>=>=> RelationalSchema.Column>> vehicles.regno PRIMARY KEY;
ClassDiagram.Attribut>> Vehicles.vtype:String =>=>=> RelationalSchema.Column>> vehicles.vtype;
ClassDiagram.Attribut>> EmpInfo.GeneratedName:Name =>=>=> RelationalSchema.Column>> empinfo.GeneratedName;
ClassDiagram.Attribut>> EmpInfo.address:String =>=>=> RelationalSchema.Column>> empinfo.address;
ClassDiagram.Attribut>> EmpInfo.city:String =>=>=> RelationalSchema.Column>> empinfo.city;
ClassDiagram.Attribut>> Employee.code:int =>=>=> RelationalSchema.Column>> employee.code PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Vehicle.regno:String =>=>=> RelationalSchema.Column>> vehicle.regno PRIMARY KEY;
ClassDiagram.Attribut>> Vehicle.vtype:String =>=>=> RelationalSchema.Column>> vehicle.vtype;
ClassDiagram.Attribut>> Vehicle.vdesc:String =>=>=> RelationalSchema.Column>> vehicle.vdesc;
ClassDiagram.Attribut>> TwoWheelers.handletype:String =>=>=> RelationalSchema.Column>> twowheelers.handletype;
ClassDiagram.Attribut>> Emp.empno:int =>=>=> RelationalSchema.Column>> emp.empno PRIMARY KEY;
ClassDiagram.Attribut>> Emp.ename:String =>=>=> RelationalSchema.Column>> emp.ename;
ClassDiagram.Attribut>> Emp.sal:int =>=>=> RelationalSchema.Column>> emp.sal;
ClassDiagram.Attribut>> Emp.desg:String =>=>=> RelationalSchema.Column>> emp.desg;
ClassDiagram.Attribut>> Emp.GeneratedName:Address =>=>=> RelationalSchema.Column>> emp.GeneratedName;
ClassDiagram.Attribut>> FourWheelers.wheeltype:String =>=>=> RelationalSchema.Column>> fourwheelers.wheeltype;
ClassDiagram.Attribut>> Project.code:int =>=>=> RelationalSchema.Column>> project.code PRIMARY KEY;
ClassDiagram.Attribut>> Project.ptitle:String =>=>=> RelationalSchema.Column>> project.ptitle;
One-To-One relationship between ClassDiagram.Class>>Laptop  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>//@onetoone(mappedby;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Laptop represented by ClassDiagram.Atrribute>>//@jointable(name;
One-To-Many relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>List<Vehicle>;
Many-To-One relationship from ClassDiagram.Class>>Vehicle  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>emp;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>Vehicles  ;
