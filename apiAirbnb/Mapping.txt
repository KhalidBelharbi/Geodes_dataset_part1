ClassDiagram.Class>> Voyageur =>=>=> RelationalSchema.Table>> voyageur;
ClassDiagram.Class>> Hote =>=>=> RelationalSchema.Table>> hote;
ClassDiagram.Class>> Appartement =>=>=> RelationalSchema.Table>> appartement;
ClassDiagram.Class>> Logement =>=>=> RelationalSchema.Table>> logement;
ClassDiagram.Class>> Maison =>=>=> RelationalSchema.Table>> maison;
ClassDiagram.Class>> SejourLong =>=>=> RelationalSchema.Table>> sejourlong;
ClassDiagram.Class>> SejourCourt =>=>=> RelationalSchema.Table>> sejourcourt;
ClassDiagram.Class>> Sejour =>=>=> RelationalSchema.Table>> sejour;
ClassDiagram.Class>> Reservation =>=>=> RelationalSchema.Table>> reservation;
ClassDiagram.Attribut>> Voyageur.id:long =>=>=> RelationalSchema.Column>> voyageur.id PRIMARY KEY;
ClassDiagram.Attribut>> Hote.id:long =>=>=> RelationalSchema.Column>> hote.id PRIMARY KEY;
ClassDiagram.Attribut>> Hote.delaireponse:int =>=>=> RelationalSchema.Column>> hote.delaireponse;
ClassDiagram.Attribut>> Appartement.superficiebalcon:int =>=>=> RelationalSchema.Column>> appartement.superficiebalcon;
ClassDiagram.Attribut>> Appartement.numeroetage:int =>=>=> RelationalSchema.Column>> appartement.numeroetage;
ClassDiagram.Attribut>> Logement.id:long =>=>=> RelationalSchema.Column>> logement.id PRIMARY KEY;
ClassDiagram.Attribut>> Logement.tarifparnuit:int =>=>=> RelationalSchema.Column>> logement.tarifparnuit;
ClassDiagram.Attribut>> Logement.adresse:String =>=>=> RelationalSchema.Column>> logement.adresse;
ClassDiagram.Attribut>> Logement.superficie:int =>=>=> RelationalSchema.Column>> logement.superficie;
ClassDiagram.Attribut>> Logement.nbvoyageursmax:int =>=>=> RelationalSchema.Column>> logement.nbvoyageursmax;
ClassDiagram.Attribut>> Logement.index:int =>=>=> RelationalSchema.Column>> logement.index;
ClassDiagram.Attribut>> Logement.cpt:int =>=>=> RelationalSchema.Column>> logement.cpt;
ClassDiagram.Attribut>> Maison.superficiejardin:int =>=>=> RelationalSchema.Column>> maison.superficiejardin;
ClassDiagram.Attribut>> Maison.possedepiscine:boolean =>=>=> RelationalSchema.Column>> maison.possedepiscine;
ClassDiagram.Attribut>> SejourLong.promotion_en_pourcentage:int =>=>=> RelationalSchema.Column>> sejourlong.promotion_en_pourcentage;
ClassDiagram.Attribut>> SejourLong.promotion:int =>=>=> RelationalSchema.Column>> sejourlong.promotion;
ClassDiagram.Attribut>> SejourLong.tarif:int =>=>=> RelationalSchema.Column>> sejourlong.tarif;
ClassDiagram.Attribut>> SejourCourt.tarif:int =>=>=> RelationalSchema.Column>> sejourcourt.tarif;
ClassDiagram.Attribut>> Sejour.id:long =>=>=> RelationalSchema.Column>> sejour.id PRIMARY KEY;
ClassDiagram.Attribut>> Sejour.arrivee:Date =>=>=> RelationalSchema.Column>> sejour.arrivee;
ClassDiagram.Attribut>> Sejour.nbnuits:int =>=>=> RelationalSchema.Column>> sejour.nbnuits;
ClassDiagram.Attribut>> Sejour.nbvoyageurs:int =>=>=> RelationalSchema.Column>> sejour.nbvoyageurs;
ClassDiagram.Attribut>> Reservation.id:int =>=>=> RelationalSchema.Column>> reservation.id PRIMARY KEY;
ClassDiagram.Attribut>> Reservation.dereservation:Date =>=>=> RelationalSchema.Column>> reservation.dereservation;
ClassDiagram.Attribut>> Reservation.estvalidee:boolean =>=>=> RelationalSchema.Column>> reservation.estvalidee;
Many-To-One relationship from ClassDiagram.Class>>Logement  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Sejour  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Reservation  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Reservation  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>GeneratedName;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Logement  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Sejour  SubClass>>voyageur SubClass>>hote ;
