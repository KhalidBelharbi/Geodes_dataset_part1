ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Class>> Categoria =>=>=> RelationalSchema.Table>> categoria;
ClassDiagram.Class>> Edicion =>=>=> RelationalSchema.Table>> edicion;
ClassDiagram.Class>> InscripcionProg =>=>=> RelationalSchema.Table>> inscripcionprog;
ClassDiagram.Class>> InscripcionEd =>=>=> RelationalSchema.Table>> inscripcioned;
ClassDiagram.Class>> Programa =>=>=> RelationalSchema.Table>> programa;
ClassDiagram.Class>> Estudiante =>=>=> RelationalSchema.Table>> estudiante;
ClassDiagram.Class>> Curso =>=>=> RelationalSchema.Table>> curso;
ClassDiagram.Class>> Docente =>=>=> RelationalSchema.Table>> docente;
ClassDiagram.Class>> Instituto =>=>=> RelationalSchema.Table>> instituto;
ClassDiagram.Attribut>> Usuario.nickname:String =>=>=> RelationalSchema.Column>> usuario.nickname PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.nombre:String =>=>=> RelationalSchema.Column>> usuario.nombre;
ClassDiagram.Attribut>> Usuario.apellido:String =>=>=> RelationalSchema.Column>> usuario.apellido;
ClassDiagram.Attribut>> Usuario.email:String =>=>=> RelationalSchema.Column>> usuario.email;
ClassDiagram.Attribut>> Usuario.fnac:Date =>=>=> RelationalSchema.Column>> usuario.fnac;
ClassDiagram.Attribut>> Usuario.pass:String =>=>=> RelationalSchema.Column>> usuario.pass;
ClassDiagram.Attribut>> Usuario.foto:String =>=>=> RelationalSchema.Column>> usuario.foto;
ClassDiagram.Attribut>> Categoria.nombre:String =>=>=> RelationalSchema.Column>> categoria.nombre PRIMARY KEY;
ClassDiagram.Attribut>> Edicion.nombre:String =>=>=> RelationalSchema.Column>> edicion.nombre PRIMARY KEY;
ClassDiagram.Attribut>> Edicion.finicio:Date =>=>=> RelationalSchema.Column>> edicion.finicio;
ClassDiagram.Attribut>> Edicion.ffin:Date =>=>=> RelationalSchema.Column>> edicion.ffin;
ClassDiagram.Attribut>> Edicion.cupo:Integer =>=>=> RelationalSchema.Column>> edicion.cupo;
ClassDiagram.Attribut>> Edicion.fpublicacion:Date =>=>=> RelationalSchema.Column>> edicion.fpublicacion;
ClassDiagram.Attribut>> Edicion.foto:String =>=>=> RelationalSchema.Column>> edicion.foto;
ClassDiagram.Attribut>> InscripcionProg.GeneratedName:Programa =>=>=> RelationalSchema.Column>> inscripcionprog.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> InscripcionProg.p:Estudiante =>=>=> RelationalSchema.Column>> inscripcionprog.p PRIMARY KEY;
ClassDiagram.Attribut>> InscripcionProg.finscripcion:Date =>=>=> RelationalSchema.Column>> inscripcionprog.finscripcion;
ClassDiagram.Attribut>> InscripcionEd.GeneratedName:Edicion =>=>=> RelationalSchema.Column>> inscripcioned.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> InscripcionEd.e:Estudiante =>=>=> RelationalSchema.Column>> inscripcioned.e PRIMARY KEY;
ClassDiagram.Attribut>> InscripcionEd.finscripcion:Date =>=>=> RelationalSchema.Column>> inscripcioned.finscripcion;
ClassDiagram.Attribut>> InscripcionEd.estadoinsc:String =>=>=> RelationalSchema.Column>> inscripcioned.estadoinsc;
ClassDiagram.Attribut>> Programa.nombre:String =>=>=> RelationalSchema.Column>> programa.nombre PRIMARY KEY;
ClassDiagram.Attribut>> Programa.descripcion:String =>=>=> RelationalSchema.Column>> programa.descripcion;
ClassDiagram.Attribut>> Programa.finicio:Date =>=>=> RelationalSchema.Column>> programa.finicio;
ClassDiagram.Attribut>> Programa.ffin:Date =>=>=> RelationalSchema.Column>> programa.ffin;
ClassDiagram.Attribut>> Programa.foto:String =>=>=> RelationalSchema.Column>> programa.foto;
ClassDiagram.Attribut>> Curso.nombre:String =>=>=> RelationalSchema.Column>> curso.nombre PRIMARY KEY;
ClassDiagram.Attribut>> Curso.descripcion:String =>=>=> RelationalSchema.Column>> curso.descripcion;
ClassDiagram.Attribut>> Curso.url:String =>=>=> RelationalSchema.Column>> curso.url;
ClassDiagram.Attribut>> Curso.duracion:Integer =>=>=> RelationalSchema.Column>> curso.duracion;
ClassDiagram.Attribut>> Curso.canthoras:Integer =>=>=> RelationalSchema.Column>> curso.canthoras;
ClassDiagram.Attribut>> Curso.creditos:Integer =>=>=> RelationalSchema.Column>> curso.creditos;
ClassDiagram.Attribut>> Curso.fechareg:Date =>=>=> RelationalSchema.Column>> curso.fechareg;
ClassDiagram.Attribut>> Curso.foto:String =>=>=> RelationalSchema.Column>> curso.foto;
ClassDiagram.Attribut>> Instituto.nombre:String =>=>=> RelationalSchema.Column>> instituto.nombre PRIMARY KEY;
One-To-Many relationship from ClassDiagram.Class>>Usuario  to ClassDiagram.Class>>List<Usuario>;
One-To-Many relationship from ClassDiagram.Class>>Usuario  to ClassDiagram.Class>>List<Usuario>;
: edicion_(edicionID:edicion [PK] #FK to edicion,ID: [PK] #FK to );
One-To-Many relationship from ClassDiagram.Class>>Edicion  to ClassDiagram.Class>>List<InscripcionEd>;
Many-To-One relationship from ClassDiagram.Class>>InscripcionProg  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>InscripcionProg  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>p;
Many-To-One relationship from ClassDiagram.Class>>InscripcionEd  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>InscripcionEd  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>e;
: programa_(programaID:programa [PK] #FK to programa,ID: [PK] #FK to );
One-To-Many relationship from ClassDiagram.Class>>Programa  to ClassDiagram.Class>>List<InscripcionProg>;
One-To-Many relationship from ClassDiagram.Class>>Estudiante  to ClassDiagram.Class>>List<InscripcionEd>;
One-To-Many relationship from ClassDiagram.Class>>Estudiante  to ClassDiagram.Class>>List<InscripcionProg>;
One-To-Many relationship from ClassDiagram.Class>>Curso  to ClassDiagram.Class>>List<Edicion>;
: curso_(cursoID:curso [PK] #FK to curso,ID: [PK] #FK to );
: curso_(cursoID:curso [PK] #FK to curso,ID: [PK] #FK to );curso_(cursoID:curso [PK] #FK to curso,ID: [PK] #FK to );
Many-To-One relationship from ClassDiagram.Class>>Docente  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>insti;
One-To-Many relationship from ClassDiagram.Class>>Instituto  to ClassDiagram.Class>>List<Curso>;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Usuario  SubClass>>Usuario SubClass>>Categoria SubClass>>Edicion SubClass>>InscripcionProg SubClass>>InscripcionEd SubClass>>Programa SubClass>>Curso SubClass>>Instituto ;
