ClassDiagram.Class>> Commande =>=>=> RelationalSchema.Table>> commande;
ClassDiagram.Class>> Email =>=>=> RelationalSchema.Table>> email;
ClassDiagram.Class>> PizzaIngredients =>=>=> RelationalSchema.Table>> pizzaingredients;
ClassDiagram.Class>> CommandePizza =>=>=> RelationalSchema.Table>> commandepizza;
ClassDiagram.Class>> Utilisateur =>=>=> RelationalSchema.Table>> utilisateur;
ClassDiagram.Class>> Pizza =>=>=> RelationalSchema.Table>> pizza;
ClassDiagram.Class>> Client =>=>=> RelationalSchema.Table>> client;
ClassDiagram.Class>> Ingredient =>=>=> RelationalSchema.Table>> ingredient;
ClassDiagram.Class>> Livreur =>=>=> RelationalSchema.Table>> livreur;
ClassDiagram.Attribut>> Commande.id:Integer =>=>=> RelationalSchema.Column>> commande.id PRIMARY KEY;
ClassDiagram.Attribut>> Commande.numerocommande:String =>=>=> RelationalSchema.Column>> commande.numerocommande;
ClassDiagram.Attribut>> Commande.statut:StatutCommande =>=>=> RelationalSchema.Column>> commande.statut;
ClassDiagram.Attribut>> Commande.statutpaiement:StatutCommandePaiement =>=>=> RelationalSchema.Column>> commande.statutpaiement;
ClassDiagram.Attribut>> Commande.datecommande:Calendar =>=>=> RelationalSchema.Column>> commande.datecommande;
ClassDiagram.Attribut>> Commande.supprime:boolean =>=>=> RelationalSchema.Column>> commande.supprime;
ClassDiagram.Attribut>> Email.id:Integer =>=>=> RelationalSchema.Column>> email.id PRIMARY KEY;
ClassDiagram.Attribut>> Email.expediteur:String =>=>=> RelationalSchema.Column>> email.expediteur;
ClassDiagram.Attribut>> Email.destinataire:String =>=>=> RelationalSchema.Column>> email.destinataire;
ClassDiagram.Attribut>> Email.GeneratedName:Date =>=>=> RelationalSchema.Column>> email.GeneratedName;
ClassDiagram.Attribut>> Email.objet:String =>=>=> RelationalSchema.Column>> email.objet;
ClassDiagram.Attribut>> Email.pizza:String =>=>=> RelationalSchema.Column>> email.pizza;
ClassDiagram.Attribut>> Email.message:String =>=>=> RelationalSchema.Column>> email.message;
ClassDiagram.Attribut>> PizzaIngredients.id:PizzaIngredientId =>=>=> RelationalSchema.Column>> pizzaingredients.id;
ClassDiagram.Attribut>> PizzaIngredients.quantiterequise:Double =>=>=> RelationalSchema.Column>> pizzaingredients.quantiterequise;
ClassDiagram.Attribut>> CommandePizza.commandeid:Integer =>=>=> RelationalSchema.Column>> commandepizza.commandeid PRIMARY KEY;
ClassDiagram.Attribut>> CommandePizza.pizzaid:Integer =>=>=> RelationalSchema.Column>> commandepizza.pizzaid PRIMARY KEY;
ClassDiagram.Attribut>> CommandePizza.quantite:int =>=>=> RelationalSchema.Column>> commandepizza.quantite;
ClassDiagram.Attribut>> Utilisateur.id:Integer =>=>=> RelationalSchema.Column>> utilisateur.id PRIMARY KEY;
ClassDiagram.Attribut>> Utilisateur.nom:String =>=>=> RelationalSchema.Column>> utilisateur.nom;
ClassDiagram.Attribut>> Utilisateur.prenom:String =>=>=> RelationalSchema.Column>> utilisateur.prenom;
ClassDiagram.Attribut>> Utilisateur.email:String =>=>=> RelationalSchema.Column>> utilisateur.email;
ClassDiagram.Attribut>> Utilisateur.motdepasse:String =>=>=> RelationalSchema.Column>> utilisateur.motdepasse;
ClassDiagram.Attribut>> Pizza.format:Map<String,String> =>=>=> RelationalSchema.Column>> pizza.format;
ClassDiagram.Attribut>> Pizza.autre_format:String =>=>=> RelationalSchema.Column>> pizza.autre_format;
ClassDiagram.Attribut>> Pizza.id:Integer =>=>=> RelationalSchema.Column>> pizza.id PRIMARY KEY;
ClassDiagram.Attribut>> Pizza.code:String =>=>=> RelationalSchema.Column>> pizza.code;
ClassDiagram.Attribut>> Pizza.nom:String =>=>=> RelationalSchema.Column>> pizza.nom;
ClassDiagram.Attribut>> Pizza.prix:BigDecimal =>=>=> RelationalSchema.Column>> pizza.prix;
ClassDiagram.Attribut>> Pizza.categorie:CategoriePizza =>=>=> RelationalSchema.Column>> pizza.categorie;
ClassDiagram.Attribut>> Pizza.urlimage:String =>=>=> RelationalSchema.Column>> pizza.urlimage;
ClassDiagram.Attribut>> Pizza.actif:boolean =>=>=> RelationalSchema.Column>> pizza.actif;
ClassDiagram.Attribut>> Client.id:Integer =>=>=> RelationalSchema.Column>> client.id PRIMARY KEY;
ClassDiagram.Attribut>> Client.nom:String =>=>=> RelationalSchema.Column>> client.nom;
ClassDiagram.Attribut>> Client.prenom:String =>=>=> RelationalSchema.Column>> client.prenom;
ClassDiagram.Attribut>> Client.email:String =>=>=> RelationalSchema.Column>> client.email;
ClassDiagram.Attribut>> Client.password:String =>=>=> RelationalSchema.Column>> client.password;
ClassDiagram.Attribut>> Client.actif:boolean =>=>=> RelationalSchema.Column>> client.actif;
ClassDiagram.Attribut>> Client.adresse:String =>=>=> RelationalSchema.Column>> client.adresse;
ClassDiagram.Attribut>> Client.telephone:String =>=>=> RelationalSchema.Column>> client.telephone;
ClassDiagram.Attribut>> Client.dernieremodification:Date =>=>=> RelationalSchema.Column>> client.dernieremodification;
ClassDiagram.Attribut>> Client.abonne:boolean =>=>=> RelationalSchema.Column>> client.abonne;
ClassDiagram.Attribut>> Ingredient.id:Integer =>=>=> RelationalSchema.Column>> ingredient.id PRIMARY KEY;
ClassDiagram.Attribut>> Ingredient.code:String =>=>=> RelationalSchema.Column>> ingredient.code;
ClassDiagram.Attribut>> Ingredient.nom:String =>=>=> RelationalSchema.Column>> ingredient.nom;
ClassDiagram.Attribut>> Ingredient.quantite:Double =>=>=> RelationalSchema.Column>> ingredient.quantite;
ClassDiagram.Attribut>> Ingredient.seuil:Double =>=>=> RelationalSchema.Column>> ingredient.seuil;
ClassDiagram.Attribut>> Ingredient.actif:boolean =>=>=> RelationalSchema.Column>> ingredient.actif;
ClassDiagram.Attribut>> Livreur.code_livreur_par_defaut:String =>=>=> RelationalSchema.Column>> livreur.code_livreur_par_defaut;
ClassDiagram.Attribut>> Livreur.nb_caracteres_nom_prenom_code:int =>=>=> RelationalSchema.Column>> livreur.nb_caracteres_nom_prenom_code;
ClassDiagram.Attribut>> Livreur.//caractèreajoutésiunnomouprénomesttropcourtcaractere_remplissage_code:char =>=>=> RelationalSchema.Column>> livreur.//caractèreajoutésiunnomouprénomesttropcourtcaractere_remplissage_code;
ClassDiagram.Attribut>> Livreur.id:Integer =>=>=> RelationalSchema.Column>> livreur.id PRIMARY KEY;
ClassDiagram.Attribut>> Livreur.code:String =>=>=> RelationalSchema.Column>> livreur.code;
ClassDiagram.Attribut>> Livreur.nom:String =>=>=> RelationalSchema.Column>> livreur.nom;
ClassDiagram.Attribut>> Livreur.prenom:String =>=>=> RelationalSchema.Column>> livreur.prenom;
ClassDiagram.Attribut>> Livreur.actif:boolean =>=>=> RelationalSchema.Column>> livreur.actif;
Many-To-One relationship from ClassDiagram.Class>>Commande  to ClassDiagram.Class>>livreur represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Commande  to ClassDiagram.Class>>client represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Commande  to ClassDiagram.Class>>List<CommandePizza>;
Many-To-One relationship from ClassDiagram.Class>>CommandePizza  to ClassDiagram.Class>>Commande represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>CommandePizza  to ClassDiagram.Class>>Pizza represented by ClassDiagram.Atrribute>>id;
One-To-Many relationship from ClassDiagram.Class>>Pizza  to ClassDiagram.Class>>List<PizzaIngredients>;
