ClassDiagram.Class>> Compatibility =>=>=> RelationalSchema.Table>> compatibility;
ClassDiagram.Class>> UserDiet =>=>=> RelationalSchema.Table>> userdiet;
ClassDiagram.Class>> Mission =>=>=> RelationalSchema.Table>> mission;
ClassDiagram.Class>> InCompatibility =>=>=> RelationalSchema.Table>> incompatibility;
ClassDiagram.Class>> Disease =>=>=> RelationalSchema.Table>> disease;
ClassDiagram.Class>> Store =>=>=> RelationalSchema.Table>> store;
ClassDiagram.Class>> Nutrient =>=>=> RelationalSchema.Table>> nutrient;
ClassDiagram.Class>> StoreReview =>=>=> RelationalSchema.Table>> storereview;
ClassDiagram.Class>> Review =>=>=> RelationalSchema.Table>> review;
ClassDiagram.Class>> UserProfile =>=>=> RelationalSchema.Table>> userprofile;
ClassDiagram.Class>> ProfileDietRequest =>=>=> RelationalSchema.Table>> profiledietrequest;
ClassDiagram.Class>> MissionDetail =>=>=> RelationalSchema.Table>> missiondetail;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> Compatibility.id:int =>=>=> RelationalSchema.Column>> compatibility.id PRIMARY KEY;
ClassDiagram.Attribut>> Compatibility.fooda:String =>=>=> RelationalSchema.Column>> compatibility.fooda;
ClassDiagram.Attribut>> Compatibility.foodb:String =>=>=> RelationalSchema.Column>> compatibility.foodb;
ClassDiagram.Attribut>> Compatibility.description:String =>=>=> RelationalSchema.Column>> compatibility.description;
ClassDiagram.Attribut>> Compatibility.searchcnt:int =>=>=> RelationalSchema.Column>> compatibility.searchcnt;
ClassDiagram.Attribut>> Compatibility.reviewcnt:String =>=>=> RelationalSchema.Column>> compatibility.reviewcnt;
ClassDiagram.Attribut>> Compatibility.avgstar:String =>=>=> RelationalSchema.Column>> compatibility.avgstar;
ClassDiagram.Attribut>> UserDiet.id:String =>=>=> RelationalSchema.Column>> userdiet.id PRIMARY KEY;
ClassDiagram.Attribut>> UserDiet.diettype:int =>=>=> RelationalSchema.Column>> userdiet.diettype;
ClassDiagram.Attribut>> UserDiet.food:String =>=>=> RelationalSchema.Column>> userdiet.food;
ClassDiagram.Attribut>> UserDiet.dish:int =>=>=> RelationalSchema.Column>> userdiet.dish;
ClassDiagram.Attribut>> UserDiet.create:Date =>=>=> RelationalSchema.Column>> userdiet.create;
ClassDiagram.Attribut>> UserDiet.userid:String =>=>=> RelationalSchema.Column>> userdiet.userid;
ClassDiagram.Attribut>> UserDiet.missionid:String =>=>=> RelationalSchema.Column>> userdiet.missionid;
ClassDiagram.Attribut>> UserDiet.carbo:double =>=>=> RelationalSchema.Column>> userdiet.carbo;
ClassDiagram.Attribut>> UserDiet.protein:double =>=>=> RelationalSchema.Column>> userdiet.protein;
ClassDiagram.Attribut>> UserDiet.fat:double =>=>=> RelationalSchema.Column>> userdiet.fat;
ClassDiagram.Attribut>> UserDiet.energy:double =>=>=> RelationalSchema.Column>> userdiet.energy;
ClassDiagram.Attribut>> Mission.mid:String =>=>=> RelationalSchema.Column>> mission.mid PRIMARY KEY;
ClassDiagram.Attribut>> Mission.create:Date =>=>=> RelationalSchema.Column>> mission.create;
ClassDiagram.Attribut>> Mission.progress:boolean =>=>=> RelationalSchema.Column>> mission.progress;
ClassDiagram.Attribut>> Mission.result:boolean =>=>=> RelationalSchema.Column>> mission.result;
ClassDiagram.Attribut>> Mission.//stringmissiontype//+-기능이따로필요없을거같아서string타입targetenergy:double =>=>=> RelationalSchema.Column>> mission.//stringmissiontype//+-기능이따로필요없을거같아서string타입targetenergy;
ClassDiagram.Attribut>> Mission.targetcarbohidrate:double =>=>=> RelationalSchema.Column>> mission.targetcarbohidrate;
ClassDiagram.Attribut>> Mission.targetprotein:double =>=>=> RelationalSchema.Column>> mission.targetprotein;
ClassDiagram.Attribut>> Mission.targetfat:double =>=>=> RelationalSchema.Column>> mission.targetfat;
ClassDiagram.Attribut>> Mission.//언더바있는컬럼profileuid:String =>=>=> RelationalSchema.Column>> mission.//언더바있는컬럼profileuid;
ClassDiagram.Attribut>> InCompatibility.serialversionuid:long =>=>=> RelationalSchema.Column>> incompatibility.serialversionuid;
ClassDiagram.Attribut>> InCompatibility.id:int =>=>=> RelationalSchema.Column>> incompatibility.id PRIMARY KEY;
ClassDiagram.Attribut>> InCompatibility.fooda:String =>=>=> RelationalSchema.Column>> incompatibility.fooda;
ClassDiagram.Attribut>> InCompatibility.foodb:String =>=>=> RelationalSchema.Column>> incompatibility.foodb;
ClassDiagram.Attribut>> InCompatibility.description:String =>=>=> RelationalSchema.Column>> incompatibility.description;
ClassDiagram.Attribut>> InCompatibility.searchcnt:int =>=>=> RelationalSchema.Column>> incompatibility.searchcnt;
ClassDiagram.Attribut>> InCompatibility.reviewcnt:String =>=>=> RelationalSchema.Column>> incompatibility.reviewcnt;
ClassDiagram.Attribut>> InCompatibility.avgstar:String =>=>=> RelationalSchema.Column>> incompatibility.avgstar;
ClassDiagram.Attribut>> Disease.name:String =>=>=> RelationalSchema.Column>> disease.name PRIMARY KEY;
ClassDiagram.Attribut>> Store.//id,name,area,tel,address,latitude,longitude,category,menuid:int =>=>=> RelationalSchema.Column>> store.//id,name,area,tel,address,latitude,longitude,category,menuid PRIMARY KEY;
ClassDiagram.Attribut>> Store.name:String =>=>=> RelationalSchema.Column>> store.name;
ClassDiagram.Attribut>> Store.area:String =>=>=> RelationalSchema.Column>> store.area;
ClassDiagram.Attribut>> Store.tel:String =>=>=> RelationalSchema.Column>> store.tel;
ClassDiagram.Attribut>> Store.address:String =>=>=> RelationalSchema.Column>> store.address;
ClassDiagram.Attribut>> Store.latitude:double =>=>=> RelationalSchema.Column>> store.latitude;
ClassDiagram.Attribut>> Store.longitude:double =>=>=> RelationalSchema.Column>> store.longitude;
ClassDiagram.Attribut>> Store.category:String =>=>=> RelationalSchema.Column>> store.category;
ClassDiagram.Attribut>> Store.menu:String =>=>=> RelationalSchema.Column>> store.menu;
ClassDiagram.Attribut>> Nutrient.//food,energy,protein,fat,carbohydrate,calcium,sodium,iron,p,k,vitamin_b1,vitamin_b2,vitamin_c//id,food,energy,carbohydrate,protein,fat,cholesterol,fiber,sodiumid:int =>=>=> RelationalSchema.Column>> nutrient.//food,energy,protein,fat,carbohydrate,calcium,sodium,iron,p,k,vitamin_b1,vitamin_b2,vitamin_c//id,food,energy,carbohydrate,protein,fat,cholesterol,fiber,sodiumid PRIMARY KEY;
ClassDiagram.Attribut>> Nutrient.food:String =>=>=> RelationalSchema.Column>> nutrient.food;
ClassDiagram.Attribut>> Nutrient.energy:double =>=>=> RelationalSchema.Column>> nutrient.energy;
ClassDiagram.Attribut>> Nutrient.protein:double =>=>=> RelationalSchema.Column>> nutrient.protein;
ClassDiagram.Attribut>> Nutrient.fat:double =>=>=> RelationalSchema.Column>> nutrient.fat;
ClassDiagram.Attribut>> Nutrient.carbohidrate:double =>=>=> RelationalSchema.Column>> nutrient.carbohidrate;
ClassDiagram.Attribut>> Nutrient.//@column(name:double =>=>=> RelationalSchema.Column>> nutrient.//@column(name;
ClassDiagram.Attribut>> Nutrient.//@column(name:double =>=>=> RelationalSchema.Column>> nutrient.//@column(name;
ClassDiagram.Attribut>> Nutrient.fiber:double =>=>=> RelationalSchema.Column>> nutrient.fiber;
ClassDiagram.Attribut>> StoreReview.id:int =>=>=> RelationalSchema.Column>> storereview.id PRIMARY KEY;
ClassDiagram.Attribut>> StoreReview.store:String =>=>=> RelationalSchema.Column>> storereview.store;
ClassDiagram.Attribut>> StoreReview.user:String =>=>=> RelationalSchema.Column>> storereview.user;
ClassDiagram.Attribut>> StoreReview.score:String =>=>=> RelationalSchema.Column>> storereview.score;
ClassDiagram.Attribut>> StoreReview.content:String =>=>=> RelationalSchema.Column>> storereview.content;
ClassDiagram.Attribut>> StoreReview.reg_time:String =>=>=> RelationalSchema.Column>> storereview.reg_time;
ClassDiagram.Attribut>> Review.id:int =>=>=> RelationalSchema.Column>> review.id PRIMARY KEY;
ClassDiagram.Attribut>> Review.//@manytoone//@joincolumn(name:double =>=>=> RelationalSchema.Column>> review.//@manytoone//@joincolumn(name;
ClassDiagram.Attribut>> Review.compatibilityid:int =>=>=> RelationalSchema.Column>> review.compatibilityid;
ClassDiagram.Attribut>> Review.userid:String =>=>=> RelationalSchema.Column>> review.userid;
ClassDiagram.Attribut>> Review.compatibilitytype:int =>=>=> RelationalSchema.Column>> review.compatibilitytype;
ClassDiagram.Attribut>> UserProfile.uid:String =>=>=> RelationalSchema.Column>> userprofile.uid PRIMARY KEY;
ClassDiagram.Attribut>> UserProfile.nickname:String =>=>=> RelationalSchema.Column>> userprofile.nickname;
ClassDiagram.Attribut>> UserProfile.targetweight:int =>=>=> RelationalSchema.Column>> userprofile.targetweight;
ClassDiagram.Attribut>> UserProfile.targettype:String =>=>=> RelationalSchema.Column>> userprofile.targettype;
ClassDiagram.Attribut>> UserProfile.height:int =>=>=> RelationalSchema.Column>> userprofile.height;
ClassDiagram.Attribut>> UserProfile.gendertype:int =>=>=> RelationalSchema.Column>> userprofile.gendertype;
ClassDiagram.Attribut>> UserProfile.imgurl:String =>=>=> RelationalSchema.Column>> userprofile.imgurl;
ClassDiagram.Attribut>> UserProfile.accounttype:int =>=>=> RelationalSchema.Column>> userprofile.accounttype;
ClassDiagram.Attribut>> UserProfile.//권장영양섭취량을위한칼럼들age:int =>=>=> RelationalSchema.Column>> userprofile.//권장영양섭취량을위한칼럼들age;
ClassDiagram.Attribut>> UserProfile.targetenergy:double =>=>=> RelationalSchema.Column>> userprofile.targetenergy;
ClassDiagram.Attribut>> UserProfile.targetcarbohidrate:double =>=>=> RelationalSchema.Column>> userprofile.targetcarbohidrate;
ClassDiagram.Attribut>> UserProfile.targetprotein:double =>=>=> RelationalSchema.Column>> userprofile.targetprotein;
ClassDiagram.Attribut>> UserProfile.targetfat:double =>=>=> RelationalSchema.Column>> userprofile.targetfat;
ClassDiagram.Attribut>> UserProfile.tagname:String =>=>=> RelationalSchema.Column>> userprofile.tagname;
ClassDiagram.Attribut>> ProfileDietRequest.uid:String =>=>=> RelationalSchema.Column>> profiledietrequest.uid;
ClassDiagram.Attribut>> ProfileDietRequest.date:String =>=>=> RelationalSchema.Column>> profiledietrequest.date;
ClassDiagram.Attribut>> MissionDetail.uid:String =>=>=> RelationalSchema.Column>> missiondetail.uid;
ClassDiagram.Attribut>> MissionDetail.GeneratedName:Date =>=>=> RelationalSchema.Column>> missiondetail.GeneratedName;
ClassDiagram.Attribut>> User.uid:String =>=>=> RelationalSchema.Column>> user.uid PRIMARY KEY;
ClassDiagram.Attribut>> User.pw:String =>=>=> RelationalSchema.Column>> user.pw;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.nickname:String =>=>=> RelationalSchema.Column>> user.nickname;
ClassDiagram.Attribut>> User.accounttype:int =>=>=> RelationalSchema.Column>> user.accounttype;
One-To-Many relationship from ClassDiagram.Class>>Mission  to ClassDiagram.Class>>List<UserDiet>;
One-To-Many relationship from ClassDiagram.Class>>UserProfile  to ClassDiagram.Class>>List<UserDiet>;
