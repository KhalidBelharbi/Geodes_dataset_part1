ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> Post.serialversionuid:long =>=>=> RelationalSchema.Column>> post.serialversionuid;
ClassDiagram.Attribut>> Post.id:Long =>=>=> RelationalSchema.Column>> post.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.body:String =>=>=> RelationalSchema.Column>> post.body;
ClassDiagram.Attribut>> Post.bodyhtml:String =>=>=> RelationalSchema.Column>> post.bodyhtml;
ClassDiagram.Attribut>> Post.timestamp:Date =>=>=> RelationalSchema.Column>> post.timestamp;
Many-To-One relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>User represented by ClassDiagram.Atrribute>>author;
