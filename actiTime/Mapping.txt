ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> UserRole =>=>=> RelationalSchema.Table>> userrole;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Attribut>> User.version:Integer =>=>=> RelationalSchema.Column>> user.version;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.manager:boolean =>=>=> RelationalSchema.Column>> user.manager;
ClassDiagram.Attribut>> User.enabled:boolean =>=>=> RelationalSchema.Column>> user.enabled;
ClassDiagram.Attribut>> UserRole.GeneratedName:User =>=>=> RelationalSchema.Column>> userrole.GeneratedName;
ClassDiagram.Attribut>> UserRole.GeneratedName:Role =>=>=> RelationalSchema.Column>> userrole.GeneratedName;
ClassDiagram.Attribut>> Role.role_employee:String =>=>=> RelationalSchema.Column>> role.role_employee;
ClassDiagram.Attribut>> Role.role_manager:String =>=>=> RelationalSchema.Column>> role.role_manager;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Set<UserRole>;
