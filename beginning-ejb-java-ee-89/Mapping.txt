ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> FullTimeEmployee =>=>=> RelationalSchema.Table>> fulltimeemployee;
ClassDiagram.Class>> PartTimeEmployee =>=>=> RelationalSchema.Table>> parttimeemployee;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.id:Integer =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.version:Integer =>=>=> RelationalSchema.Column>> person.version;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.department:String =>=>=> RelationalSchema.Column>> employee.department;
ClassDiagram.Attribut>> Employee.email:String =>=>=> RelationalSchema.Column>> employee.email;
ClassDiagram.Attribut>> FullTimeEmployee.serialversionuid:long =>=>=> RelationalSchema.Column>> fulltimeemployee.serialversionuid;
ClassDiagram.Attribut>> FullTimeEmployee.annualsalary:double =>=>=> RelationalSchema.Column>> fulltimeemployee.annualsalary;
ClassDiagram.Attribut>> PartTimeEmployee.serialversionuid:long =>=>=> RelationalSchema.Column>> parttimeemployee.serialversionuid;
ClassDiagram.Attribut>> PartTimeEmployee.hourlywage:double =>=>=> RelationalSchema.Column>> parttimeemployee.hourlywage;
ClassDiagram.Attribut>> Address.serialversionuid:long =>=>=> RelationalSchema.Column>> address.serialversionuid;
ClassDiagram.Attribut>> Address.id:Integer =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.street1:String =>=>=> RelationalSchema.Column>> address.street1;
ClassDiagram.Attribut>> Address.street2:String =>=>=> RelationalSchema.Column>> address.street2;
ClassDiagram.Attribut>> Address.version:Integer =>=>=> RelationalSchema.Column>> address.version;
ClassDiagram.Attribut>> Address.zipcode:String =>=>=> RelationalSchema.Column>> address.zipcode;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>home;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Employee represented by ClassDiagram.Atrribute>>manager;
One-To-Many relationship from ClassDiagram.Class>>FullTimeEmployee  to ClassDiagram.Class>>List<Employee>;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Person  SubClass>>employee SubClass>>fulltimeemployee SubClass>>parttimeemployee ;
