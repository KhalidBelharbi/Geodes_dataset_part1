ClassDiagram.Class>> Film =>=>=> RelationalSchema.Table>> film;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Language =>=>=> RelationalSchema.Table>> language;
ClassDiagram.Class>> Payment =>=>=> RelationalSchema.Table>> payment;
ClassDiagram.Class>> City =>=>=> RelationalSchema.Table>> city;
ClassDiagram.Class>> Actor =>=>=> RelationalSchema.Table>> actor;
ClassDiagram.Class>> FilmCategory =>=>=> RelationalSchema.Table>> filmcategory;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Rental =>=>=> RelationalSchema.Table>> rental;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> FilmActor =>=>=> RelationalSchema.Table>> filmactor;
ClassDiagram.Class>> Store =>=>=> RelationalSchema.Table>> store;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> Inventory =>=>=> RelationalSchema.Table>> inventory;
ClassDiagram.Class>> Staff =>=>=> RelationalSchema.Table>> staff;
ClassDiagram.Attribut>> Film.id:Long =>=>=> RelationalSchema.Column>> film.id PRIMARY KEY;
ClassDiagram.Attribut>> Film.title:String =>=>=> RelationalSchema.Column>> film.title;
ClassDiagram.Attribut>> Film.description:String =>=>=> RelationalSchema.Column>> film.description;
ClassDiagram.Attribut>> Film.rentalduration:int =>=>=> RelationalSchema.Column>> film.rentalduration;
ClassDiagram.Attribut>> Film.rentalrate:int =>=>=> RelationalSchema.Column>> film.rentalrate;
ClassDiagram.Attribut>> Film.length:int =>=>=> RelationalSchema.Column>> film.length;
ClassDiagram.Attribut>> Film.replacementcost:int =>=>=> RelationalSchema.Column>> film.replacementcost;
ClassDiagram.Attribut>> Film.specialfeatures:String =>=>=> RelationalSchema.Column>> film.specialfeatures;
ClassDiagram.Attribut>> Film.fulltext:String =>=>=> RelationalSchema.Column>> film.fulltext;
ClassDiagram.Attribut>> Category.id:Long =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Language.id:Long =>=>=> RelationalSchema.Column>> language.id PRIMARY KEY;
ClassDiagram.Attribut>> Language.name:String =>=>=> RelationalSchema.Column>> language.name;
ClassDiagram.Attribut>> Payment.id:Long =>=>=> RelationalSchema.Column>> payment.id PRIMARY KEY;
ClassDiagram.Attribut>> Payment.amount:int =>=>=> RelationalSchema.Column>> payment.amount;
ClassDiagram.Attribut>> Payment.paymentdate:LocalDateTime =>=>=> RelationalSchema.Column>> payment.paymentdate;
ClassDiagram.Attribut>> City.id:Long =>=>=> RelationalSchema.Column>> city.id PRIMARY KEY;
ClassDiagram.Attribut>> City.city:String =>=>=> RelationalSchema.Column>> city.city;
ClassDiagram.Attribut>> Actor.id:Long =>=>=> RelationalSchema.Column>> actor.id PRIMARY KEY;
ClassDiagram.Attribut>> Actor.firstname:String =>=>=> RelationalSchema.Column>> actor.firstname;
ClassDiagram.Attribut>> Actor.lastname:String =>=>=> RelationalSchema.Column>> actor.lastname;
ClassDiagram.Attribut>> FilmCategory.GeneratedName:Film =>=>=> RelationalSchema.Column>> filmcategory.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> FilmCategory.GeneratedName:Category =>=>=> RelationalSchema.Column>> filmcategory.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Address.id:Long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.address:String =>=>=> RelationalSchema.Column>> address.address;
ClassDiagram.Attribut>> Address.address2:String =>=>=> RelationalSchema.Column>> address.address2;
ClassDiagram.Attribut>> Address.district:String =>=>=> RelationalSchema.Column>> address.district;
ClassDiagram.Attribut>> Address.postalcode:String =>=>=> RelationalSchema.Column>> address.postalcode;
ClassDiagram.Attribut>> Address.phone:String =>=>=> RelationalSchema.Column>> address.phone;
ClassDiagram.Attribut>> Rental.id:Long =>=>=> RelationalSchema.Column>> rental.id PRIMARY KEY;
ClassDiagram.Attribut>> Rental.rentaldate:LocalDateTime =>=>=> RelationalSchema.Column>> rental.rentaldate;
ClassDiagram.Attribut>> Rental.returndate:LocalDateTime =>=>=> RelationalSchema.Column>> rental.returndate;
ClassDiagram.Attribut>> Customer.id:Long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.firstname:String =>=>=> RelationalSchema.Column>> customer.firstname;
ClassDiagram.Attribut>> Customer.lastname:String =>=>=> RelationalSchema.Column>> customer.lastname;
ClassDiagram.Attribut>> Customer.email:String =>=>=> RelationalSchema.Column>> customer.email;
ClassDiagram.Attribut>> Customer.activebool:boolean =>=>=> RelationalSchema.Column>> customer.activebool;
ClassDiagram.Attribut>> Customer.createdate:LocalDate =>=>=> RelationalSchema.Column>> customer.createdate;
ClassDiagram.Attribut>> Customer.lastupdate:LocalDateTime =>=>=> RelationalSchema.Column>> customer.lastupdate;
ClassDiagram.Attribut>> Customer.active:int =>=>=> RelationalSchema.Column>> customer.active;
ClassDiagram.Attribut>> FilmActor.GeneratedName:Film =>=>=> RelationalSchema.Column>> filmactor.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> FilmActor.GeneratedName:Actor =>=>=> RelationalSchema.Column>> filmactor.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Store.id:Long =>=>=> RelationalSchema.Column>> store.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.id:Long =>=>=> RelationalSchema.Column>> country.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.country:String =>=>=> RelationalSchema.Column>> country.country;
ClassDiagram.Attribut>> Inventory.id:Long =>=>=> RelationalSchema.Column>> inventory.id PRIMARY KEY;
ClassDiagram.Attribut>> Staff.id:Long =>=>=> RelationalSchema.Column>> staff.id PRIMARY KEY;
ClassDiagram.Attribut>> Staff.firstname:String =>=>=> RelationalSchema.Column>> staff.firstname;
ClassDiagram.Attribut>> Staff.lastname:String =>=>=> RelationalSchema.Column>> staff.lastname;
ClassDiagram.Attribut>> Staff.email:String =>=>=> RelationalSchema.Column>> staff.email;
ClassDiagram.Attribut>> Staff.active:boolean =>=>=> RelationalSchema.Column>> staff.active;
ClassDiagram.Attribut>> Staff.username:String =>=>=> RelationalSchema.Column>> staff.username;
ClassDiagram.Attribut>> Staff.password:String =>=>=> RelationalSchema.Column>> staff.password;
ClassDiagram.Attribut>> Staff.picture:byte =>=>=> RelationalSchema.Column>> staff.picture;
Many-To-One relationship from ClassDiagram.Class>>Film  to ClassDiagram.Class>>Language represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Payment  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Payment  to ClassDiagram.Class>>staff represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>City  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>FilmCategory  to ClassDiagram.Class>>Film represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>FilmCategory  to ClassDiagram.Class>>Category represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>City represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Rental  to ClassDiagram.Class>>inventory represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Rental  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Rental  to ClassDiagram.Class>>staff represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Store represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>FilmActor  to ClassDiagram.Class>>Film represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>FilmActor  to ClassDiagram.Class>>Actor represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Store  to ClassDiagram.Class>>staff represented by ClassDiagram.Atrribute>>manager;
One-To-One relationship between ClassDiagram.Class>>Store  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Inventory  to ClassDiagram.Class>>Film represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Inventory  to ClassDiagram.Class>>Store represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Staff  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Staff  to ClassDiagram.Class>>Store represented by ClassDiagram.Atrribute>>GeneratedName;
