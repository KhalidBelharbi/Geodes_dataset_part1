ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> City =>=>=> RelationalSchema.Table>> city;
ClassDiagram.Class>> Street =>=>=> RelationalSchema.Table>> street;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> UserRole =>=>=> RelationalSchema.Table>> userrole;
ClassDiagram.Class>> PersonDetails =>=>=> RelationalSchema.Table>> persondetails;
ClassDiagram.Class>> PersonCompetence =>=>=> RelationalSchema.Table>> personcompetence;
ClassDiagram.Class>> Document =>=>=> RelationalSchema.Table>> document;
ClassDiagram.Class>> Competence =>=>=> RelationalSchema.Table>> competence;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Manager =>=>=> RelationalSchema.Table>> manager;
ClassDiagram.Class>> PositionDetails =>=>=> RelationalSchema.Table>> positiondetails;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Position =>=>=> RelationalSchema.Table>> position;
ClassDiagram.Class>> Branch =>=>=> RelationalSchema.Table>> branch;
ClassDiagram.Class>> Inventory =>=>=> RelationalSchema.Table>> inventory;
ClassDiagram.Class>> CompanyDetails =>=>=> RelationalSchema.Table>> companydetails;
ClassDiagram.Class>> AuditHistory =>=>=> RelationalSchema.Table>> audithistory;
ClassDiagram.Class>> SearchHistory =>=>=> RelationalSchema.Table>> searchhistory;
ClassDiagram.Attribut>> Address.number:String =>=>=> RelationalSchema.Column>> address.number;
ClassDiagram.Attribut>> Address.GeneratedName:EntityDescription =>=>=> RelationalSchema.Column>> address.GeneratedName;
ClassDiagram.Attribut>> City.cityname:String =>=>=> RelationalSchema.Column>> city.cityname;
ClassDiagram.Attribut>> Street.postcode:String =>=>=> RelationalSchema.Column>> street.postcode;
ClassDiagram.Attribut>> Street.streetname:String =>=>=> RelationalSchema.Column>> street.streetname;
ClassDiagram.Attribut>> Country.countryname:String =>=>=> RelationalSchema.Column>> country.countryname;
ClassDiagram.Attribut>> User.role_not_found:String =>=>=> RelationalSchema.Column>> user.role_not_found;
ClassDiagram.Attribut>> User.login:String =>=>=> RelationalSchema.Column>> user.login;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> UserRole.rolename:String =>=>=> RelationalSchema.Column>> userrole.rolename;
ClassDiagram.Attribut>> PersonDetails.mothername:String =>=>=> RelationalSchema.Column>> persondetails.mothername;
ClassDiagram.Attribut>> PersonDetails.mothermaidenname:String =>=>=> RelationalSchema.Column>> persondetails.mothermaidenname;
ClassDiagram.Attribut>> PersonDetails.fathername:String =>=>=> RelationalSchema.Column>> persondetails.fathername;
ClassDiagram.Attribut>> PersonDetails.documentnumber:String =>=>=> RelationalSchema.Column>> persondetails.documentnumber;
ClassDiagram.Attribut>> PersonDetails.idnumber:String =>=>=> RelationalSchema.Column>> persondetails.idnumber;
ClassDiagram.Attribut>> PersonCompetence.level:Integer =>=>=> RelationalSchema.Column>> personcompetence.level;
ClassDiagram.Attribut>> Document.title:String =>=>=> RelationalSchema.Column>> document.title;
ClassDiagram.Attribut>> Document.description:String =>=>=> RelationalSchema.Column>> document.description;
ClassDiagram.Attribut>> Document.releasedby:String =>=>=> RelationalSchema.Column>> document.releasedby;
ClassDiagram.Attribut>> Document.GeneratedName:DocumentType =>=>=> RelationalSchema.Column>> document.GeneratedName;
ClassDiagram.Attribut>> Document.documentnumber:String =>=>=> RelationalSchema.Column>> document.documentnumber;
ClassDiagram.Attribut>> Document.idnumber:String =>=>=> RelationalSchema.Column>> document.idnumber;
ClassDiagram.Attribut>> Document.releasedate:LocalDate =>=>=> RelationalSchema.Column>> document.releasedate;
ClassDiagram.Attribut>> Document.expirydate:LocalDate =>=>=> RelationalSchema.Column>> document.expirydate;
ClassDiagram.Attribut>> Competence.GeneratedName:EntityDescription =>=>=> RelationalSchema.Column>> competence.GeneratedName;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.middlename:String =>=>=> RelationalSchema.Column>> person.middlename;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.maidenname:String =>=>=> RelationalSchema.Column>> person.maidenname;
ClassDiagram.Attribut>> Person.GeneratedName:Gender =>=>=> RelationalSchema.Column>> person.GeneratedName;
ClassDiagram.Attribut>> Person.birthdate:LocalDate =>=>=> RelationalSchema.Column>> person.birthdate;
ClassDiagram.Attribut>> PositionDetails.positioncreationdate:LocalDate =>=>=> RelationalSchema.Column>> positiondetails.positioncreationdate;
ClassDiagram.Attribut>> PositionDetails.positiondeactivationdate:LocalDate =>=>=> RelationalSchema.Column>> positiondetails.positiondeactivationdate;
ClassDiagram.Attribut>> PositionDetails.isactive:boolean =>=>=> RelationalSchema.Column>> positiondetails.isactive;
ClassDiagram.Attribut>> Department.GeneratedName:EntityDescription =>=>=> RelationalSchema.Column>> department.GeneratedName;
ClassDiagram.Attribut>> Company.GeneratedName:EntityDescription =>=>=> RelationalSchema.Column>> company.GeneratedName;
ClassDiagram.Attribut>> Position.GeneratedName:EntityDescription =>=>=> RelationalSchema.Column>> position.GeneratedName;
ClassDiagram.Attribut>> Branch.GeneratedName:EntityDescription =>=>=> RelationalSchema.Column>> branch.GeneratedName;
ClassDiagram.Attribut>> Branch.branchcreationdate:LocalDate =>=>=> RelationalSchema.Column>> branch.branchcreationdate;
ClassDiagram.Attribut>> Inventory.GeneratedName:EntityDescription =>=>=> RelationalSchema.Column>> inventory.GeneratedName;
ClassDiagram.Attribut>> Inventory.price:BigDecimal =>=>=> RelationalSchema.Column>> inventory.price;
ClassDiagram.Attribut>> CompanyDetails.vat_no:String =>=>=> RelationalSchema.Column>> companydetails.vat_no;
ClassDiagram.Attribut>> CompanyDetails.companycreationdate:LocalDate =>=>=> RelationalSchema.Column>> companydetails.companycreationdate;
ClassDiagram.Attribut>> AuditHistory.id:Long =>=>=> RelationalSchema.Column>> audithistory.id PRIMARY KEY;
ClassDiagram.Attribut>> AuditHistory.tablename:String =>=>=> RelationalSchema.Column>> audithistory.tablename;
ClassDiagram.Attribut>> AuditHistory.beforestatement:String =>=>=> RelationalSchema.Column>> audithistory.beforestatement;
ClassDiagram.Attribut>> AuditHistory.afterstatement:String =>=>=> RelationalSchema.Column>> audithistory.afterstatement;
ClassDiagram.Attribut>> AuditHistory.operationtype:String =>=>=> RelationalSchema.Column>> audithistory.operationtype;
ClassDiagram.Attribut>> SearchHistory.query:String =>=>=> RelationalSchema.Column>> searchhistory.query;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>street represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>city represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>GeneratedName;
list<userrole>: user_list<userrole>(userID:user [PK] #FK to user,list<userrole>ID:list<userrole> [PK] #FK to list<userrole>);
Many-To-One relationship from ClassDiagram.Class>>PersonDetails  to ClassDiagram.Class>>document represented by ClassDiagram.Atrribute>>type;
Many-To-One relationship from ClassDiagram.Class>>PersonDetails  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>nationality;
list<document>: personcompetence_list<document>(personcompetenceID:personcompetence [PK] #FK to personcompetence,list<document>ID:list<document> [PK] #FK to list<document>);
Many-To-One relationship from ClassDiagram.Class>>PersonCompetence  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PersonCompetence  to ClassDiagram.Class>>competence represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Document  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>release;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>persondetails represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Manager  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>List<Department>;
list<inventory>: positiondetails_list<inventory>(positiondetailsID:positiondetails [PK] #FK to positiondetails,list<inventory>ID:list<inventory> [PK] #FK to list<inventory>);
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>branch represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>manager represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>position represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>department represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Company  to ClassDiagram.Class>>companydetails represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Position  to ClassDiagram.Class>>positiondetails represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Branch  to ClassDiagram.Class>>company represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Branch  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Inventory  to ClassDiagram.Class>>branch represented by ClassDiagram.Atrribute>>GeneratedName;
list<competence>: inventory_list<competence>(inventoryID:inventory [PK] #FK to inventory,list<competence>ID:list<competence> [PK] #FK to list<competence>);
Many-To-One relationship from ClassDiagram.Class>>CompanyDetails  to ClassDiagram.Class>>branch represented by ClassDiagram.Atrribute>>mother;
