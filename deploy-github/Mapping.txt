ClassDiagram.Class>> Area =>=>=> RelationalSchema.Table>> area;
ClassDiagram.Class>> Activity =>=>=> RelationalSchema.Table>> activity;
ClassDiagram.Class>> Member =>=>=> RelationalSchema.Table>> member;
ClassDiagram.Class>> Bookmember =>=>=> RelationalSchema.Table>> bookmember;
ClassDiagram.Class>> Activityrole =>=>=> RelationalSchema.Table>> activityrole;
ClassDiagram.Attribut>> Area.areaid:Integer =>=>=> RelationalSchema.Column>> area.areaid PRIMARY KEY;
ClassDiagram.Attribut>> Area.areaname:String =>=>=> RelationalSchema.Column>> area.areaname;
ClassDiagram.Attribut>> Activity.activityid:Integer =>=>=> RelationalSchema.Column>> activity.activityid PRIMARY KEY;
ClassDiagram.Attribut>> Activity.activityname:String =>=>=> RelationalSchema.Column>> activity.activityname;
ClassDiagram.Attribut>> Activity.activity:Date =>=>=> RelationalSchema.Column>> activity.activity;
ClassDiagram.Attribut>> Activity.activitytime:String =>=>=> RelationalSchema.Column>> activity.activitytime;
ClassDiagram.Attribut>> Activity.duration:int =>=>=> RelationalSchema.Column>> activity.duration;
ClassDiagram.Attribut>> Member.memberid:Integer =>=>=> RelationalSchema.Column>> member.memberid PRIMARY KEY;
ClassDiagram.Attribut>> Member.name:String =>=>=> RelationalSchema.Column>> member.name;
ClassDiagram.Attribut>> Member.address:String =>=>=> RelationalSchema.Column>> member.address;
ClassDiagram.Attribut>> Member.town:String =>=>=> RelationalSchema.Column>> member.town;
ClassDiagram.Attribut>> Member.city:String =>=>=> RelationalSchema.Column>> member.city;
ClassDiagram.Attribut>> Member.postcode:String =>=>=> RelationalSchema.Column>> member.postcode;
ClassDiagram.Attribut>> Member.//@column(nullable:String =>=>=> RelationalSchema.Column>> member.//@column(nullable;
ClassDiagram.Attribut>> Member.phone:String =>=>=> RelationalSchema.Column>> member.phone;
ClassDiagram.Attribut>> Member.email:String =>=>=> RelationalSchema.Column>> member.email;
ClassDiagram.Attribut>> Member.username:String =>=>=> RelationalSchema.Column>> member.username;
ClassDiagram.Attribut>> Member.password:String =>=>=> RelationalSchema.Column>> member.password;
ClassDiagram.Attribut>> Member.role:String =>=>=> RelationalSchema.Column>> member.role;
ClassDiagram.Attribut>> Member.enabled:boolean =>=>=> RelationalSchema.Column>> member.enabled;
ClassDiagram.Attribut>> Bookmember.activityid:Integer =>=>=> RelationalSchema.Column>> bookmember.activityid PRIMARY KEY;
ClassDiagram.Attribut>> Bookmember.memberid:Integer =>=>=> RelationalSchema.Column>> bookmember.memberid PRIMARY KEY;
ClassDiagram.Attribut>> Bookmember.activityroleid:Integer =>=>=> RelationalSchema.Column>> bookmember.activityroleid;
ClassDiagram.Attribut>> Activityrole.roleid:Integer =>=>=> RelationalSchema.Column>> activityrole.roleid PRIMARY KEY;
ClassDiagram.Attribut>> Activityrole.rolename:String =>=>=> RelationalSchema.Column>> activityrole.rolename;
Many-To-Many relationship between ClassDiagram.Class>>Activity  and ClassDiagram.Class>>list<member>: bookmember(activityid:Activity [PK] #FK to Activity,memberid:list<member> [PK] #FK to list<member>);
