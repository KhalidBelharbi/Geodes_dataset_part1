ClassDiagram.Class>> DBStopTime =>=>=> RelationalSchema.Table>> dbstoptime;
ClassDiagram.Class>> DBCalendarDate =>=>=> RelationalSchema.Table>> dbcalendardate;
ClassDiagram.Class>> DBStop =>=>=> RelationalSchema.Table>> dbstop;
ClassDiagram.Class>> DBTrip =>=>=> RelationalSchema.Table>> dbtrip;
ClassDiagram.Class>> DBFrequency =>=>=> RelationalSchema.Table>> dbfrequency;
ClassDiagram.Class>> DBCalendar =>=>=> RelationalSchema.Table>> dbcalendar;
ClassDiagram.Class>> DBRoute =>=>=> RelationalSchema.Table>> dbroute;
ClassDiagram.Attribut>> DBStopTime.serialversionuid:long =>=>=> RelationalSchema.Column>> dbstoptime.serialversionuid;
ClassDiagram.Attribut>> DBStopTime.stoptimenum:Long =>=>=> RelationalSchema.Column>> dbstoptime.stoptimenum;
ClassDiagram.Attribut>> DBStopTime.tripid:String =>=>=> RelationalSchema.Column>> dbstoptime.tripid;
ClassDiagram.Attribut>> DBStopTime.tripnum:Long =>=>=> RelationalSchema.Column>> dbstoptime.tripnum;
ClassDiagram.Attribut>> DBStopTime.stopsequence:int =>=>=> RelationalSchema.Column>> dbstoptime.stopsequence;
ClassDiagram.Attribut>> DBStopTime.stopid:String =>=>=> RelationalSchema.Column>> dbstoptime.stopid;
ClassDiagram.Attribut>> DBStopTime.stopnum:Long =>=>=> RelationalSchema.Column>> dbstoptime.stopnum;
ClassDiagram.Attribut>> DBStopTime.headsign:String =>=>=> RelationalSchema.Column>> dbstoptime.headsign;
ClassDiagram.Attribut>> DBStopTime.arrival:GTFSLocalTime =>=>=> RelationalSchema.Column>> dbstoptime.arrival;
ClassDiagram.Attribut>> DBStopTime.departure:GTFSLocalTime =>=>=> RelationalSchema.Column>> dbstoptime.departure;
ClassDiagram.Attribut>> DBStopTime.pickuptype:short =>=>=> RelationalSchema.Column>> dbstoptime.pickuptype;
ClassDiagram.Attribut>> DBStopTime.dropofftype:short =>=>=> RelationalSchema.Column>> dbstoptime.dropofftype;
ClassDiagram.Attribut>> DBStopTime.timepoint:Short =>=>=> RelationalSchema.Column>> dbstoptime.timepoint;
ClassDiagram.Attribut>> DBStopTime.disttraveled:Float =>=>=> RelationalSchema.Column>> dbstoptime.disttraveled;
ClassDiagram.Attribut>> DBCalendarDate.serialversionuid:long =>=>=> RelationalSchema.Column>> dbcalendardate.serialversionuid;
ClassDiagram.Attribut>> DBCalendarDate.calendardatenum:Long =>=>=> RelationalSchema.Column>> dbcalendardate.calendardatenum;
ClassDiagram.Attribut>> DBCalendarDate.//@javax.persistence.id//@org.springframework.data.annotation.idserviceid:Long =>=>=> RelationalSchema.Column>> dbcalendardate.//@javax.persistence.id//@org.springframework.data.annotation.idserviceid;
ClassDiagram.Attribut>> DBCalendarDate.//@javax.persistence.id//@org.springframework.data.annotation.idexceptiondate:LocalDate =>=>=> RelationalSchema.Column>> dbcalendardate.//@javax.persistence.id//@org.springframework.data.annotation.idexceptiondate;
ClassDiagram.Attribut>> DBCalendarDate.exceptiontype:short =>=>=> RelationalSchema.Column>> dbcalendardate.exceptiontype;
ClassDiagram.Attribut>> DBStop.serialversionuid:long =>=>=> RelationalSchema.Column>> dbstop.serialversionuid;
ClassDiagram.Attribut>> DBStop.stopnum:Long =>=>=> RelationalSchema.Column>> dbstop.stopnum;
ClassDiagram.Attribut>> DBStop.stopid:String =>=>=> RelationalSchema.Column>> dbstop.stopid;
ClassDiagram.Attribut>> DBStop.stopcode:String =>=>=> RelationalSchema.Column>> dbstop.stopcode;
ClassDiagram.Attribut>> DBStop.stopname:String =>=>=> RelationalSchema.Column>> dbstop.stopname;
ClassDiagram.Attribut>> DBStop.stopdescription:String =>=>=> RelationalSchema.Column>> dbstop.stopdescription;
ClassDiagram.Attribut>> DBStop.latitude:float =>=>=> RelationalSchema.Column>> dbstop.latitude;
ClassDiagram.Attribut>> DBStop.longitude:float =>=>=> RelationalSchema.Column>> dbstop.longitude;
ClassDiagram.Attribut>> DBStop.url:String =>=>=> RelationalSchema.Column>> dbstop.url;
ClassDiagram.Attribut>> DBStop.locationtype:short =>=>=> RelationalSchema.Column>> dbstop.locationtype;
ClassDiagram.Attribut>> DBStop.parentstation:String =>=>=> RelationalSchema.Column>> dbstop.parentstation;
ClassDiagram.Attribut>> DBStop.//check:probablebooleaninreality.wheelchairboarding:short =>=>=> RelationalSchema.Column>> dbstop.//check:probablebooleaninreality.wheelchairboarding;
ClassDiagram.Attribut>> DBStop.platformcode:String =>=>=> RelationalSchema.Column>> dbstop.platformcode;
ClassDiagram.Attribut>> DBTrip.serialversionuid:long =>=>=> RelationalSchema.Column>> dbtrip.serialversionuid;
ClassDiagram.Attribut>> DBTrip.tripnum:Long =>=>=> RelationalSchema.Column>> dbtrip.tripnum;
ClassDiagram.Attribut>> DBTrip.routenum:Long =>=>=> RelationalSchema.Column>> dbtrip.routenum;
ClassDiagram.Attribut>> DBTrip.servicenum:Long =>=>=> RelationalSchema.Column>> dbtrip.servicenum;
ClassDiagram.Attribut>> DBTrip.tripid:String =>=>=> RelationalSchema.Column>> dbtrip.tripid;
ClassDiagram.Attribut>> DBTrip.headsign:String =>=>=> RelationalSchema.Column>> dbtrip.headsign;
ClassDiagram.Attribut>> DBTrip.direction:short =>=>=> RelationalSchema.Column>> dbtrip.direction;
ClassDiagram.Attribut>> DBTrip.starttime:GTFSLocalTime =>=>=> RelationalSchema.Column>> dbtrip.starttime;
ClassDiagram.Attribut>> DBTrip.shapeid:String =>=>=> RelationalSchema.Column>> dbtrip.shapeid;
ClassDiagram.Attribut>> DBTrip.blockid:String =>=>=> RelationalSchema.Column>> dbtrip.blockid;
ClassDiagram.Attribut>> DBTrip.shortname:String =>=>=> RelationalSchema.Column>> dbtrip.shortname;
ClassDiagram.Attribut>> DBTrip.wheelchairaccessible:short =>=>=> RelationalSchema.Column>> dbtrip.wheelchairaccessible;
ClassDiagram.Attribut>> DBTrip.bikesallowed:short =>=>=> RelationalSchema.Column>> dbtrip.bikesallowed;
ClassDiagram.Attribut>> DBFrequency.serialversionuid:long =>=>=> RelationalSchema.Column>> dbfrequency.serialversionuid;
ClassDiagram.Attribut>> DBFrequency.frequencynum:Long =>=>=> RelationalSchema.Column>> dbfrequency.frequencynum;
ClassDiagram.Attribut>> DBFrequency.tripnum:Long =>=>=> RelationalSchema.Column>> dbfrequency.tripnum;
ClassDiagram.Attribut>> DBFrequency.starttime:GTFSLocalTime =>=>=> RelationalSchema.Column>> dbfrequency.starttime;
ClassDiagram.Attribut>> DBFrequency.endtime:GTFSLocalTime =>=>=> RelationalSchema.Column>> dbfrequency.endtime;
ClassDiagram.Attribut>> DBFrequency.headwaysecs:short =>=>=> RelationalSchema.Column>> dbfrequency.headwaysecs;
ClassDiagram.Attribut>> DBFrequency.//todo:checkifthisactuallyboolean.exacttimes:short =>=>=> RelationalSchema.Column>> dbfrequency.//todo:checkifthisactuallyboolean.exacttimes;
ClassDiagram.Attribut>> DBCalendar.serialversionuid:long =>=>=> RelationalSchema.Column>> dbcalendar.serialversionuid;
ClassDiagram.Attribut>> DBCalendar.servicenum:Long =>=>=> RelationalSchema.Column>> dbcalendar.servicenum;
ClassDiagram.Attribut>> DBCalendar.serviceid:String =>=>=> RelationalSchema.Column>> dbcalendar.serviceid;
ClassDiagram.Attribut>> DBCalendar.validfrom:LocalDate =>=>=> RelationalSchema.Column>> dbcalendar.validfrom;
ClassDiagram.Attribut>> DBCalendar.validuntil:LocalDate =>=>=> RelationalSchema.Column>> dbcalendar.validuntil;
ClassDiagram.Attribut>> DBCalendar.monday:boolean =>=>=> RelationalSchema.Column>> dbcalendar.monday;
ClassDiagram.Attribut>> DBCalendar.tuesday:boolean =>=>=> RelationalSchema.Column>> dbcalendar.tuesday;
ClassDiagram.Attribut>> DBCalendar.wednesday:boolean =>=>=> RelationalSchema.Column>> dbcalendar.wednesday;
ClassDiagram.Attribut>> DBCalendar.thursday:boolean =>=>=> RelationalSchema.Column>> dbcalendar.thursday;
ClassDiagram.Attribut>> DBCalendar.friday:boolean =>=>=> RelationalSchema.Column>> dbcalendar.friday;
ClassDiagram.Attribut>> DBCalendar.saturday:boolean =>=>=> RelationalSchema.Column>> dbcalendar.saturday;
ClassDiagram.Attribut>> DBCalendar.sunday:boolean =>=>=> RelationalSchema.Column>> dbcalendar.sunday;
ClassDiagram.Attribut>> DBRoute.serialversionuid:long =>=>=> RelationalSchema.Column>> dbroute.serialversionuid;
ClassDiagram.Attribut>> DBRoute.routenum:Long =>=>=> RelationalSchema.Column>> dbroute.routenum;
ClassDiagram.Attribut>> DBRoute.routeid:String =>=>=> RelationalSchema.Column>> dbroute.routeid;
ClassDiagram.Attribut>> DBRoute.shortname:String =>=>=> RelationalSchema.Column>> dbroute.shortname;
ClassDiagram.Attribut>> DBRoute.longname:String =>=>=> RelationalSchema.Column>> dbroute.longname;
ClassDiagram.Attribut>> DBRoute.type:RouteType =>=>=> RelationalSchema.Column>> dbroute.type;
ClassDiagram.Attribut>> DBRoute.description:String =>=>=> RelationalSchema.Column>> dbroute.description;
ClassDiagram.Attribut>> DBRoute.url:String =>=>=> RelationalSchema.Column>> dbroute.url;
