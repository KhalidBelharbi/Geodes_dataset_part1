
dbstoptime(serialversionuid:long, stoptimenum:Long, tripid:String, tripnum:Long, stopsequence:int, stopid:String, stopnum:Long, headsign:String, arrival:GTFSLocalTime, departure:GTFSLocalTime, pickuptype:short, dropofftype:short, timepoint:Short, disttraveled:Float);

dbcalendardate(serialversionuid:long, calendardatenum:Long, //@javax.persistence.id//@org.springframework.data.annotation.idserviceid:Long, //@javax.persistence.id//@org.springframework.data.annotation.idexceptiondate:LocalDate, exceptiontype:short);

dbstop(serialversionuid:long, stopnum:Long, stopid:String, stopcode:String, stopname:String, stopdescription:String, latitude:float, longitude:float, url:String, locationtype:short, parentstation:String, //check:probablebooleaninreality.wheelchairboarding:short, platformcode:String);

dbtrip(serialversionuid:long, tripnum:Long, routenum:Long, servicenum:Long, tripid:String, headsign:String, direction:short, starttime:GTFSLocalTime, shapeid:String, blockid:String, shortname:String, wheelchairaccessible:short, bikesallowed:short);

dbfrequency(serialversionuid:long, frequencynum:Long, tripnum:Long, starttime:GTFSLocalTime, endtime:GTFSLocalTime, headwaysecs:short, //todo:checkifthisactuallyboolean.exacttimes:short);

dbcalendar(serialversionuid:long, servicenum:Long, serviceid:String, validfrom:LocalDate, validuntil:LocalDate, monday:boolean, tuesday:boolean, wednesday:boolean, thursday:boolean, friday:boolean, saturday:boolean, sunday:boolean);

dbroute(serialversionuid:long, routenum:Long, routeid:String, shortname:String, longname:String, type:RouteType, description:String, url:String);


** PROGRAM TYPE: JPA+Hibernate(Hybrid)