ClassDiagram.Class>> OrderStatus =>=>=> RelationalSchema.Table>> orderstatus;
ClassDiagram.Class>> Color =>=>=> RelationalSchema.Table>> color;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Image360 =>=>=> RelationalSchema.Table>> image360;
ClassDiagram.Class>> Province =>=>=> RelationalSchema.Table>> province;
ClassDiagram.Class>> District =>=>=> RelationalSchema.Table>> district;
ClassDiagram.Class>> Review =>=>=> RelationalSchema.Table>> review;
ClassDiagram.Class>> Image =>=>=> RelationalSchema.Table>> image;
ClassDiagram.Class>> PaymentType =>=>=> RelationalSchema.Table>> paymenttype;
ClassDiagram.Class>> PasswordResetToken =>=>=> RelationalSchema.Table>> passwordresettoken;
ClassDiagram.Class>> UnitPrice =>=>=> RelationalSchema.Table>> unitprice;
ClassDiagram.Class>> Answer =>=>=> RelationalSchema.Table>> answer;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Store =>=>=> RelationalSchema.Table>> store;
ClassDiagram.Class>> Member =>=>=> RelationalSchema.Table>> member;
ClassDiagram.Class>> Question =>=>=> RelationalSchema.Table>> question;
ClassDiagram.Class>> MemberType =>=>=> RelationalSchema.Table>> membertype;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Inventory =>=>=> RelationalSchema.Table>> inventory;
ClassDiagram.Class>> Promotion =>=>=> RelationalSchema.Table>> promotion;
ClassDiagram.Class>> Ward =>=>=> RelationalSchema.Table>> ward;
ClassDiagram.Class>> OrderDetail =>=>=> RelationalSchema.Table>> orderdetail;
ClassDiagram.Class>> Users =>=>=> RelationalSchema.Table>> users;
ClassDiagram.Class>> Producer =>=>=> RelationalSchema.Table>> producer;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Material =>=>=> RelationalSchema.Table>> material;
ClassDiagram.Class>> Origin =>=>=> RelationalSchema.Table>> origin;
ClassDiagram.Class>> OrderGroup =>=>=> RelationalSchema.Table>> ordergroup;
ClassDiagram.Attribut>> OrderStatus.id:Long =>=>=> RelationalSchema.Column>> orderstatus.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderStatus.name:String =>=>=> RelationalSchema.Column>> orderstatus.name;
ClassDiagram.Attribut>> OrderStatus.status:int =>=>=> RelationalSchema.Column>> orderstatus.status;
ClassDiagram.Attribut>> Color.id:Long =>=>=> RelationalSchema.Column>> color.id PRIMARY KEY;
ClassDiagram.Attribut>> Color.name:String =>=>=> RelationalSchema.Column>> color.name;
ClassDiagram.Attribut>> Color.status:int =>=>=> RelationalSchema.Column>> color.status;
ClassDiagram.Attribut>> Product.id:Long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.plug:String =>=>=> RelationalSchema.Column>> product.plug;
ClassDiagram.Attribut>> Product.description:String =>=>=> RelationalSchema.Column>> product.description;
ClassDiagram.Attribut>> Product.quantity:int =>=>=> RelationalSchema.Column>> product.quantity;
ClassDiagram.Attribut>> Product.avatar:String =>=>=> RelationalSchema.Column>> product.avatar;
ClassDiagram.Attribut>> Product.avgstart:float =>=>=> RelationalSchema.Column>> product.avgstart;
ClassDiagram.Attribut>> Product.created_at:Date =>=>=> RelationalSchema.Column>> product.created_at;
ClassDiagram.Attribut>> Product.upd_at:Date =>=>=> RelationalSchema.Column>> product.upd_at;
ClassDiagram.Attribut>> Product.status:int =>=>=> RelationalSchema.Column>> product.status;
ClassDiagram.Attribut>> Image360.id:Long =>=>=> RelationalSchema.Column>> image360.id PRIMARY KEY;
ClassDiagram.Attribut>> Image360.path:String =>=>=> RelationalSchema.Column>> image360.path;
ClassDiagram.Attribut>> Image360.status:int =>=>=> RelationalSchema.Column>> image360.status;
ClassDiagram.Attribut>> Province.provinceid:String =>=>=> RelationalSchema.Column>> province.provinceid PRIMARY KEY;
ClassDiagram.Attribut>> Province.name:String =>=>=> RelationalSchema.Column>> province.name;
ClassDiagram.Attribut>> District.districtid:String =>=>=> RelationalSchema.Column>> district.districtid PRIMARY KEY;
ClassDiagram.Attribut>> District.name:String =>=>=> RelationalSchema.Column>> district.name;
ClassDiagram.Attribut>> District.provinceid:String =>=>=> RelationalSchema.Column>> district.provinceid;
ClassDiagram.Attribut>> Review.id:Long =>=>=> RelationalSchema.Column>> review.id PRIMARY KEY;
ClassDiagram.Attribut>> Review.content:String =>=>=> RelationalSchema.Column>> review.content;
ClassDiagram.Attribut>> Review.rating:int =>=>=> RelationalSchema.Column>> review.rating;
ClassDiagram.Attribut>> Review.status:int =>=>=> RelationalSchema.Column>> review.status;
ClassDiagram.Attribut>> Review.created_at:Date =>=>=> RelationalSchema.Column>> review.created_at;
ClassDiagram.Attribut>> Review.upd_at:Date =>=>=> RelationalSchema.Column>> review.upd_at;
ClassDiagram.Attribut>> Image.id:Long =>=>=> RelationalSchema.Column>> image.id PRIMARY KEY;
ClassDiagram.Attribut>> Image.path:String =>=>=> RelationalSchema.Column>> image.path;
ClassDiagram.Attribut>> Image.status:int =>=>=> RelationalSchema.Column>> image.status;
ClassDiagram.Attribut>> PaymentType.id:Long =>=>=> RelationalSchema.Column>> paymenttype.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentType.name:String =>=>=> RelationalSchema.Column>> paymenttype.name;
ClassDiagram.Attribut>> PaymentType.status:int =>=>=> RelationalSchema.Column>> paymenttype.status;
ClassDiagram.Attribut>> PasswordResetToken.id:Long =>=>=> RelationalSchema.Column>> passwordresettoken.id PRIMARY KEY;
ClassDiagram.Attribut>> PasswordResetToken.token:String =>=>=> RelationalSchema.Column>> passwordresettoken.token;
ClassDiagram.Attribut>> PasswordResetToken.expiry:Date =>=>=> RelationalSchema.Column>> passwordresettoken.expiry;
ClassDiagram.Attribut>> UnitPrice.id:Long =>=>=> RelationalSchema.Column>> unitprice.id PRIMARY KEY;
ClassDiagram.Attribut>> UnitPrice.price:int =>=>=> RelationalSchema.Column>> unitprice.price;
ClassDiagram.Attribut>> UnitPrice.created_at:Date =>=>=> RelationalSchema.Column>> unitprice.created_at;
ClassDiagram.Attribut>> UnitPrice.start_time:Date =>=>=> RelationalSchema.Column>> unitprice.start_time;
ClassDiagram.Attribut>> UnitPrice.end_time:Date =>=>=> RelationalSchema.Column>> unitprice.end_time;
ClassDiagram.Attribut>> UnitPrice.root:int =>=>=> RelationalSchema.Column>> unitprice.root;
ClassDiagram.Attribut>> Answer.id:Long =>=>=> RelationalSchema.Column>> answer.id PRIMARY KEY;
ClassDiagram.Attribut>> Answer.content:String =>=>=> RelationalSchema.Column>> answer.content;
ClassDiagram.Attribut>> Answer.status:int =>=>=> RelationalSchema.Column>> answer.status;
ClassDiagram.Attribut>> Answer.created_at:Date =>=>=> RelationalSchema.Column>> answer.created_at;
ClassDiagram.Attribut>> Customer.id:Long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.address:String =>=>=> RelationalSchema.Column>> customer.address;
ClassDiagram.Attribut>> Customer.sex:String =>=>=> RelationalSchema.Column>> customer.sex;
ClassDiagram.Attribut>> Customer.phone:String =>=>=> RelationalSchema.Column>> customer.phone;
ClassDiagram.Attribut>> Customer.birthday:Date =>=>=> RelationalSchema.Column>> customer.birthday;
ClassDiagram.Attribut>> Store.id:Long =>=>=> RelationalSchema.Column>> store.id PRIMARY KEY;
ClassDiagram.Attribut>> Store.name:String =>=>=> RelationalSchema.Column>> store.name;
ClassDiagram.Attribut>> Store.address:String =>=>=> RelationalSchema.Column>> store.address;
ClassDiagram.Attribut>> Store.phone:String =>=>=> RelationalSchema.Column>> store.phone;
ClassDiagram.Attribut>> Store.introduce:String =>=>=> RelationalSchema.Column>> store.introduce;
ClassDiagram.Attribut>> Store.website:String =>=>=> RelationalSchema.Column>> store.website;
ClassDiagram.Attribut>> Store.status:int =>=>=> RelationalSchema.Column>> store.status;
ClassDiagram.Attribut>> Member.id:Long =>=>=> RelationalSchema.Column>> member.id PRIMARY KEY;
ClassDiagram.Attribut>> Member.start_time:Date =>=>=> RelationalSchema.Column>> member.start_time;
ClassDiagram.Attribut>> Member.end_time:Date =>=>=> RelationalSchema.Column>> member.end_time;
ClassDiagram.Attribut>> Question.id:Long =>=>=> RelationalSchema.Column>> question.id PRIMARY KEY;
ClassDiagram.Attribut>> Question.content:String =>=>=> RelationalSchema.Column>> question.content;
ClassDiagram.Attribut>> Question.status:int =>=>=> RelationalSchema.Column>> question.status;
ClassDiagram.Attribut>> Question.created_at:Date =>=>=> RelationalSchema.Column>> question.created_at;
ClassDiagram.Attribut>> MemberType.id:Long =>=>=> RelationalSchema.Column>> membertype.id PRIMARY KEY;
ClassDiagram.Attribut>> MemberType.name:String =>=>=> RelationalSchema.Column>> membertype.name;
ClassDiagram.Attribut>> MemberType.price:int =>=>=> RelationalSchema.Column>> membertype.price;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Inventory.id:Long =>=>=> RelationalSchema.Column>> inventory.id PRIMARY KEY;
ClassDiagram.Attribut>> Inventory.quantity:int =>=>=> RelationalSchema.Column>> inventory.quantity;
ClassDiagram.Attribut>> Inventory.created_at:Date =>=>=> RelationalSchema.Column>> inventory.created_at;
ClassDiagram.Attribut>> Inventory._receipt:Date =>=>=> RelationalSchema.Column>> inventory._receipt;
ClassDiagram.Attribut>> Promotion.id:Long =>=>=> RelationalSchema.Column>> promotion.id PRIMARY KEY;
ClassDiagram.Attribut>> Promotion.name:String =>=>=> RelationalSchema.Column>> promotion.name;
ClassDiagram.Attribut>> Promotion.description:String =>=>=> RelationalSchema.Column>> promotion.description;
ClassDiagram.Attribut>> Promotion.sale_off:int =>=>=> RelationalSchema.Column>> promotion.sale_off;
ClassDiagram.Attribut>> Promotion.status:int =>=>=> RelationalSchema.Column>> promotion.status;
ClassDiagram.Attribut>> Promotion.created_at:Date =>=>=> RelationalSchema.Column>> promotion.created_at;
ClassDiagram.Attribut>> Promotion.start_time:Date =>=>=> RelationalSchema.Column>> promotion.start_time;
ClassDiagram.Attribut>> Promotion.end_time:Date =>=>=> RelationalSchema.Column>> promotion.end_time;
ClassDiagram.Attribut>> Ward.wardid:String =>=>=> RelationalSchema.Column>> ward.wardid PRIMARY KEY;
ClassDiagram.Attribut>> Ward.name:String =>=>=> RelationalSchema.Column>> ward.name;
ClassDiagram.Attribut>> Ward.districtid:String =>=>=> RelationalSchema.Column>> ward.districtid;
ClassDiagram.Attribut>> OrderDetail.id:OrderDetailId =>=>=> RelationalSchema.Column>> orderdetail.id;
ClassDiagram.Attribut>> OrderDetail.quantity:int =>=>=> RelationalSchema.Column>> orderdetail.quantity;
ClassDiagram.Attribut>> Users.id:Long =>=>=> RelationalSchema.Column>> users.id PRIMARY KEY;
ClassDiagram.Attribut>> Users.email:String =>=>=> RelationalSchema.Column>> users.email;
ClassDiagram.Attribut>> Users.password:String =>=>=> RelationalSchema.Column>> users.password;
ClassDiagram.Attribut>> Producer.id:Long =>=>=> RelationalSchema.Column>> producer.id PRIMARY KEY;
ClassDiagram.Attribut>> Producer.name:String =>=>=> RelationalSchema.Column>> producer.name;
ClassDiagram.Attribut>> Producer.status:int =>=>=> RelationalSchema.Column>> producer.status;
ClassDiagram.Attribut>> Producer.plug:String =>=>=> RelationalSchema.Column>> producer.plug;
ClassDiagram.Attribut>> Order.id:Long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.address:String =>=>=> RelationalSchema.Column>> order.address;
ClassDiagram.Attribut>> Order.phone:String =>=>=> RelationalSchema.Column>> order.phone;
ClassDiagram.Attribut>> Order.created_at:Date =>=>=> RelationalSchema.Column>> order.created_at;
ClassDiagram.Attribut>> Category.id:Long =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Category.plug:String =>=>=> RelationalSchema.Column>> category.plug;
ClassDiagram.Attribut>> Category.parentid:Long =>=>=> RelationalSchema.Column>> category.parentid;
ClassDiagram.Attribut>> Category.status:int =>=>=> RelationalSchema.Column>> category.status;
ClassDiagram.Attribut>> Material.id:Long =>=>=> RelationalSchema.Column>> material.id PRIMARY KEY;
ClassDiagram.Attribut>> Material.name:String =>=>=> RelationalSchema.Column>> material.name;
ClassDiagram.Attribut>> Material.plug:String =>=>=> RelationalSchema.Column>> material.plug;
ClassDiagram.Attribut>> Material.status:int =>=>=> RelationalSchema.Column>> material.status;
ClassDiagram.Attribut>> Origin.id:Long =>=>=> RelationalSchema.Column>> origin.id PRIMARY KEY;
ClassDiagram.Attribut>> Origin.name:String =>=>=> RelationalSchema.Column>> origin.name;
ClassDiagram.Attribut>> Origin.plug:String =>=>=> RelationalSchema.Column>> origin.plug;
ClassDiagram.Attribut>> Origin.status:int =>=>=> RelationalSchema.Column>> origin.status;
ClassDiagram.Attribut>> OrderGroup.id:Long =>=>=> RelationalSchema.Column>> ordergroup.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderGroup.address:String =>=>=> RelationalSchema.Column>> ordergroup.address;
ClassDiagram.Attribut>> OrderGroup.phone:String =>=>=> RelationalSchema.Column>> ordergroup.phone;
ClassDiagram.Attribut>> OrderGroup.created_at:Date =>=>=> RelationalSchema.Column>> ordergroup.created_at;
One-To-Many relationship from ClassDiagram.Class>>OrderStatus  to ClassDiagram.Class>>List<Order>;
One-To-Many relationship from ClassDiagram.Class>>Color  to ClassDiagram.Class>>List<OrderDetail>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Inventory>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Question>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Image>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Image360>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<OrderDetail>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Review>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<UnitPrice>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<OrderDetail>;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Category represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Store represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Producer represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>origin represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>Material represented by ClassDiagram.Atrribute>>s;
Many-To-Many relationship between ClassDiagram.Class>>Product  and ClassDiagram.Class>>Color: product_color(product_id:Product [PK] #FK to Product,color_id:Color [PK] #FK to Color);
null: product_color(product_id:Product [PK] #FK to Product,color_id:Color [PK] #FK to Color);
Many-To-One relationship from ClassDiagram.Class>>Image360  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>_id;
One-To-Many relationship from ClassDiagram.Class>>Province  to ClassDiagram.Class>>List<Store>;
One-To-Many relationship from ClassDiagram.Class>>District  to ClassDiagram.Class>>List<Store>;
Many-To-One relationship from ClassDiagram.Class>>Review  to ClassDiagram.Class>>Users represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>Review  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Review  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Image  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>_id;
One-To-Many relationship from ClassDiagram.Class>>PaymentType  to ClassDiagram.Class>>Set<Order>;
One-To-Many relationship from ClassDiagram.Class>>PaymentType  to ClassDiagram.Class>>Set<OrderGroup>;
One-To-One relationship between ClassDiagram.Class>>PasswordResetToken  to ClassDiagram.Class>>Users represented by ClassDiagram.Atrribute>>user;
One-To-Many relationship from ClassDiagram.Class>>UnitPrice  to ClassDiagram.Class>>List<OrderDetail>;
Many-To-One relationship from ClassDiagram.Class>>UnitPrice  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Answer  to ClassDiagram.Class>>Question represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Answer  to ClassDiagram.Class>>Store represented by ClassDiagram.Atrribute>>s;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Users represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Store  to ClassDiagram.Class>>Users represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>List<Answer>;
One-To-Many relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>List<Order>;
One-To-Many relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>List<Promotion>;
One-To-Many relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>List<Member>;
Many-To-One relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>Province represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>District represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>Ward represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Member  to ClassDiagram.Class>>Member represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Member  to ClassDiagram.Class>>Store represented by ClassDiagram.Atrribute>>s;
One-To-Many relationship from ClassDiagram.Class>>Question  to ClassDiagram.Class>>List<Answer>;
Many-To-One relationship from ClassDiagram.Class>>Question  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>Question  to ClassDiagram.Class>>Users represented by ClassDiagram.Atrribute>>user;
One-To-Many relationship from ClassDiagram.Class>>MemberType  to ClassDiagram.Class>>Set<Member>;
Many-To-One relationship from ClassDiagram.Class>>Inventory  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>s;
One-To-Many relationship from ClassDiagram.Class>>Promotion  to ClassDiagram.Class>>List<OrderDetail>;
Many-To-One relationship from ClassDiagram.Class>>Promotion  to ClassDiagram.Class>>Store represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Promotion  and ClassDiagram.Class>>Product: product_promotion(promotion_id:Promotion [PK] #FK to Promotion,product_id:Product [PK] #FK to Product);
One-To-Many relationship from ClassDiagram.Class>>Ward  to ClassDiagram.Class>>List<Store>;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>Color represented by ClassDiagram.Atrribute>>s;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>UnitPrice represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>Promotion represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Users  to ClassDiagram.Class>>Store represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Users  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Set<Order>;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Set<OrderGroup>;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Set<Review>;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Set<Question>;
Many-To-Many relationship between ClassDiagram.Class>>Users  and ClassDiagram.Class>>Role: user_role(user_id:Users [PK] #FK to Users,role_id:Role [PK] #FK to Role);
One-To-Many relationship from ClassDiagram.Class>>Producer  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>List<OrderDetail>;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>List<Review>;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>PaymentType represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Users represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>OrderStatus represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Order represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Store represented by ClassDiagram.Atrribute>>s;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>Material  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>Origin  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>OrderGroup  to ClassDiagram.Class>>List<Order>;
Many-To-One relationship from ClassDiagram.Class>>OrderGroup  to ClassDiagram.Class>>PaymentType represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderGroup  to ClassDiagram.Class>>Users represented by ClassDiagram.Atrribute>>user;
