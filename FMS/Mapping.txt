ClassDiagram.Class>> Auditable =>=>=> RelationalSchema.Table>> auditable;
ClassDiagram.Class>> Trainer =>=>=> RelationalSchema.Table>> trainer;
ClassDiagram.Class>> Assignment =>=>=> RelationalSchema.Table>> assignment;
ClassDiagram.Class>> Trainee_Assignment =>=>=> RelationalSchema.Table>> trainee_assignment;
ClassDiagram.Class>> Module =>=>=> RelationalSchema.Table>> module;
ClassDiagram.Class>> Topic =>=>=> RelationalSchema.Table>> topic;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Feedback =>=>=> RelationalSchema.Table>> feedback;
ClassDiagram.Class>> Feedback_Question =>=>=> RelationalSchema.Table>> feedback_question;
ClassDiagram.Class>> Trainee_Comment =>=>=> RelationalSchema.Table>> trainee_comment;
ClassDiagram.Class>> Enrollment =>=>=> RelationalSchema.Table>> enrollment;
ClassDiagram.Class>> Question =>=>=> RelationalSchema.Table>> question;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Admin =>=>=> RelationalSchema.Table>> admin;
ClassDiagram.Class>> Answer =>=>=> RelationalSchema.Table>> answer;
ClassDiagram.Class>> Trainee =>=>=> RelationalSchema.Table>> trainee;
ClassDiagram.Class>> Class =>=>=> RelationalSchema.Table>> class;
ClassDiagram.Class>> TypeFeedback =>=>=> RelationalSchema.Table>> typefeedback;
ClassDiagram.Attribut>> Auditable.createdby:U =>=>=> RelationalSchema.Column>> auditable.createdby;
ClassDiagram.Attribut>> Auditable.created:Date =>=>=> RelationalSchema.Column>> auditable.created;
ClassDiagram.Attribut>> Auditable.lastmodifiedby:U =>=>=> RelationalSchema.Column>> auditable.lastmodifiedby;
ClassDiagram.Attribut>> Auditable.lastmodified:Date =>=>=> RelationalSchema.Column>> auditable.lastmodified;
ClassDiagram.Attribut>> Trainer.username:String =>=>=> RelationalSchema.Column>> trainer.username PRIMARY KEY;
ClassDiagram.Attribut>> Trainer.name:String =>=>=> RelationalSchema.Column>> trainer.name;
ClassDiagram.Attribut>> Trainer.email:String =>=>=> RelationalSchema.Column>> trainer.email;
ClassDiagram.Attribut>> Trainer.phone:String =>=>=> RelationalSchema.Column>> trainer.phone;
ClassDiagram.Attribut>> Trainer.address:String =>=>=> RelationalSchema.Column>> trainer.address;
ClassDiagram.Attribut>> Trainer.isactive:Boolean =>=>=> RelationalSchema.Column>> trainer.isactive;
ClassDiagram.Attribut>> Trainer.password:String =>=>=> RelationalSchema.Column>> trainer.password;
ClassDiagram.Attribut>> Trainer.idskill:int =>=>=> RelationalSchema.Column>> trainer.idskill;
ClassDiagram.Attribut>> Trainer.activationcode:String =>=>=> RelationalSchema.Column>> trainer.activationcode;
ClassDiagram.Attribut>> Trainer.resetpasswordcode:String =>=>=> RelationalSchema.Column>> trainer.resetpasswordcode;
ClassDiagram.Attribut>> Trainer.isreceivenotification:Boolean =>=>=> RelationalSchema.Column>> trainer.isreceivenotification;
ClassDiagram.Attribut>> Assignment.GeneratedName:AssignmentKey =>=>=> RelationalSchema.Column>> assignment.GeneratedName;
ClassDiagram.Attribut>> Assignment.registrationcode:String =>=>=> RelationalSchema.Column>> assignment.registrationcode;
ClassDiagram.Attribut>> Trainee_Assignment.registrationcode:String =>=>=> RelationalSchema.Column>> trainee_assignment.registrationcode PRIMARY KEY;
ClassDiagram.Attribut>> Trainee_Assignment.traineeid:String =>=>=> RelationalSchema.Column>> trainee_assignment.traineeid;
ClassDiagram.Attribut>> Module.moduleid:long =>=>=> RelationalSchema.Column>> module.moduleid PRIMARY KEY;
ClassDiagram.Attribut>> Module.modulename:String =>=>=> RelationalSchema.Column>> module.modulename;
ClassDiagram.Attribut>> Module.starttime:Date =>=>=> RelationalSchema.Column>> module.starttime;
ClassDiagram.Attribut>> Module.endtime:Date =>=>=> RelationalSchema.Column>> module.endtime;
ClassDiagram.Attribut>> Module.isdeleted:boolean =>=>=> RelationalSchema.Column>> module.isdeleted;
ClassDiagram.Attribut>> Module.feedbackstarttime:Date =>=>=> RelationalSchema.Column>> module.feedbackstarttime;
ClassDiagram.Attribut>> Module.feedbackendtime:Date =>=>=> RelationalSchema.Column>> module.feedbackendtime;
ClassDiagram.Attribut>> Topic.topicid:int =>=>=> RelationalSchema.Column>> topic.topicid PRIMARY KEY;
ClassDiagram.Attribut>> Topic.topicname:String =>=>=> RelationalSchema.Column>> topic.topicname;
ClassDiagram.Attribut>> Course.id:long =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.coursename:String =>=>=> RelationalSchema.Column>> course.coursename;
ClassDiagram.Attribut>> Course.admin:String =>=>=> RelationalSchema.Column>> course.admin;
ClassDiagram.Attribut>> Course.startdate:String =>=>=> RelationalSchema.Column>> course.startdate;
ClassDiagram.Attribut>> Course.enddate:String =>=>=> RelationalSchema.Column>> course.enddate;
ClassDiagram.Attribut>> Feedback.feedbackid:long =>=>=> RelationalSchema.Column>> feedback.feedbackid PRIMARY KEY;
ClassDiagram.Attribut>> Feedback.title:String =>=>=> RelationalSchema.Column>> feedback.title;
ClassDiagram.Attribut>> Feedback.isdeleted:boolean =>=>=> RelationalSchema.Column>> feedback.isdeleted;
ClassDiagram.Attribut>> Feedback_Question.GeneratedName:Feedback_QuestionKey =>=>=> RelationalSchema.Column>> feedback_question.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Trainee_Comment.classid:long =>=>=> RelationalSchema.Column>> trainee_comment.classid PRIMARY KEY;
ClassDiagram.Attribut>> Trainee_Comment.moduleid:long =>=>=> RelationalSchema.Column>> trainee_comment.moduleid;
ClassDiagram.Attribut>> Trainee_Comment.traineeid:String =>=>=> RelationalSchema.Column>> trainee_comment.traineeid;
ClassDiagram.Attribut>> Trainee_Comment.comment:String =>=>=> RelationalSchema.Column>> trainee_comment.comment;
ClassDiagram.Attribut>> Enrollment./***/serialversionuid:long =>=>=> RelationalSchema.Column>> enrollment./***/serialversionuid;
ClassDiagram.Attribut>> Enrollment._enroll:Class =>=>=> RelationalSchema.Column>> enrollment._enroll PRIMARY KEY;
ClassDiagram.Attribut>> Enrollment._enroll:Trainee =>=>=> RelationalSchema.Column>> enrollment._enroll PRIMARY KEY;
ClassDiagram.Attribut>> Question.questionid:int =>=>=> RelationalSchema.Column>> question.questionid PRIMARY KEY;
ClassDiagram.Attribut>> Question.quesioncontent:String =>=>=> RelationalSchema.Column>> question.quesioncontent;
ClassDiagram.Attribut>> Question.isdeleted:Boolean =>=>=> RelationalSchema.Column>> question.isdeleted;
ClassDiagram.Attribut>> User.id:long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> Admin.username:String =>=>=> RelationalSchema.Column>> admin.username PRIMARY KEY;
ClassDiagram.Attribut>> Admin.name:String =>=>=> RelationalSchema.Column>> admin.name;
ClassDiagram.Attribut>> Admin.email:String =>=>=> RelationalSchema.Column>> admin.email;
ClassDiagram.Attribut>> Admin.password:String =>=>=> RelationalSchema.Column>> admin.password;
ClassDiagram.Attribut>> Answer.GeneratedName:AnswerKey =>=>=> RelationalSchema.Column>> answer.GeneratedName;
ClassDiagram.Attribut>> Answer.value:int =>=>=> RelationalSchema.Column>> answer.value;
ClassDiagram.Attribut>> Answer.comment:String =>=>=> RelationalSchema.Column>> answer.comment;
ClassDiagram.Attribut>> Trainee.username:String =>=>=> RelationalSchema.Column>> trainee.username PRIMARY KEY;
ClassDiagram.Attribut>> Trainee.name:String =>=>=> RelationalSchema.Column>> trainee.name;
ClassDiagram.Attribut>> Trainee.email:String =>=>=> RelationalSchema.Column>> trainee.email;
ClassDiagram.Attribut>> Trainee.phone:String =>=>=> RelationalSchema.Column>> trainee.phone;
ClassDiagram.Attribut>> Trainee.address:String =>=>=> RelationalSchema.Column>> trainee.address;
ClassDiagram.Attribut>> Trainee.isactive:Boolean =>=>=> RelationalSchema.Column>> trainee.isactive;
ClassDiagram.Attribut>> Trainee.password:String =>=>=> RelationalSchema.Column>> trainee.password;
ClassDiagram.Attribut>> Trainee.activationcode:String =>=>=> RelationalSchema.Column>> trainee.activationcode;
ClassDiagram.Attribut>> Trainee.resetpasswordcode:String =>=>=> RelationalSchema.Column>> trainee.resetpasswordcode;
ClassDiagram.Attribut>> Class.classid:Long =>=>=> RelationalSchema.Column>> class.classid PRIMARY KEY;
ClassDiagram.Attribut>> Class.classname:String =>=>=> RelationalSchema.Column>> class.classname;
ClassDiagram.Attribut>> Class.capacity:int =>=>=> RelationalSchema.Column>> class.capacity;
ClassDiagram.Attribut>> Class.starttime:Date =>=>=> RelationalSchema.Column>> class.starttime;
ClassDiagram.Attribut>> Class.endtime:Date =>=>=> RelationalSchema.Column>> class.endtime;
ClassDiagram.Attribut>> Class.isdeleted:Boolean =>=>=> RelationalSchema.Column>> class.isdeleted;
ClassDiagram.Attribut>> TypeFeedback.typeid:long =>=>=> RelationalSchema.Column>> typefeedback.typeid PRIMARY KEY;
ClassDiagram.Attribut>> TypeFeedback.typename:String =>=>=> RelationalSchema.Column>> typefeedback.typename;
ClassDiagram.Attribut>> TypeFeedback.isdeleted:boolean =>=>=> RelationalSchema.Column>> typefeedback.isdeleted;
One-To-Many relationship from ClassDiagram.Class>>Trainer  to ClassDiagram.Class>>List<Assignment>;
Many-To-One relationship from ClassDiagram.Class>>Module  to ClassDiagram.Class>>admin represented by ClassDiagram.Atrribute>>_module;
Many-To-One relationship from ClassDiagram.Class>>Module  to ClassDiagram.Class>>feedback represented by ClassDiagram.Atrribute>>_module;
One-To-Many relationship from ClassDiagram.Class>>Module  to ClassDiagram.Class>>List<Answer>;
One-To-Many relationship from ClassDiagram.Class>>Module  to ClassDiagram.Class>>List<Assignment>;
One-To-Many relationship from ClassDiagram.Class>>Topic  to ClassDiagram.Class>>List<Question>;
Many-To-One relationship from ClassDiagram.Class>>Feedback  to ClassDiagram.Class>>admin represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>Feedback  to ClassDiagram.Class>>typefeedback represented by ClassDiagram.Atrribute>>feedback_typeid;
One-To-Many relationship from ClassDiagram.Class>>Feedback  to ClassDiagram.Class>>List<Feedback_Question>;
One-To-Many relationship from ClassDiagram.Class>>Feedback  to ClassDiagram.Class>>List<Module>;
Many-To-One relationship from ClassDiagram.Class>>Enrollment  to ClassDiagram.Class>>class represented by ClassDiagram.Atrribute>>_enroll;
Many-To-One relationship from ClassDiagram.Class>>Enrollment  to ClassDiagram.Class>>trainee represented by ClassDiagram.Atrribute>>_enroll;
Many-To-One relationship from ClassDiagram.Class>>Question  to ClassDiagram.Class>>topic represented by ClassDiagram.Atrribute>>_question;
One-To-Many relationship from ClassDiagram.Class>>Question  to ClassDiagram.Class>>List<Answer>;
One-To-Many relationship from ClassDiagram.Class>>Question  to ClassDiagram.Class>>List<Feedback_Question>;
One-To-Many relationship from ClassDiagram.Class>>Admin  to ClassDiagram.Class>>List<Module>;
One-To-Many relationship from ClassDiagram.Class>>Admin  to ClassDiagram.Class>>List<Feedback>;
One-To-Many relationship from ClassDiagram.Class>>Trainee  to ClassDiagram.Class>>List<Answer>;
One-To-Many relationship from ClassDiagram.Class>>Trainee  to ClassDiagram.Class>>List<Enrollment>;
One-To-Many relationship from ClassDiagram.Class>>Class  to ClassDiagram.Class>>List<Answer>;
One-To-Many relationship from ClassDiagram.Class>>Class  to ClassDiagram.Class>>List<Enrollment>;
One-To-Many relationship from ClassDiagram.Class>>Class  to ClassDiagram.Class>>List<Assignment>;
One-To-Many relationship from ClassDiagram.Class>>TypeFeedback  to ClassDiagram.Class>>List<Feedback>;
