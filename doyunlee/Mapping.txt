ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Reply =>=>=> RelationalSchema.Table>> reply;
ClassDiagram.Class>> UserVo =>=>=> RelationalSchema.Table>> uservo;
ClassDiagram.Class>> Payment =>=>=> RelationalSchema.Table>> payment;
ClassDiagram.Class>> Board =>=>=> RelationalSchema.Table>> board;
ClassDiagram.Class>> Cart =>=>=> RelationalSchema.Table>> cart;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Attribut>> Product.prdno:long =>=>=> RelationalSchema.Column>> product.prdno PRIMARY KEY;
ClassDiagram.Attribut>> Product.prdname:String =>=>=> RelationalSchema.Column>> product.prdname;
ClassDiagram.Attribut>> Product.prdimg:String =>=>=> RelationalSchema.Column>> product.prdimg;
ClassDiagram.Attribut>> Product.prdprice:String =>=>=> RelationalSchema.Column>> product.prdprice;
ClassDiagram.Attribut>> Product.prdinv:String =>=>=> RelationalSchema.Column>> product.prdinv;
ClassDiagram.Attribut>> Product.ctgname:String =>=>=> RelationalSchema.Column>> product.ctgname;
ClassDiagram.Attribut>> Reply.rplno:long =>=>=> RelationalSchema.Column>> reply.rplno PRIMARY KEY;
ClassDiagram.Attribut>> Reply.rplcontent:String =>=>=> RelationalSchema.Column>> reply.rplcontent;
ClassDiagram.Attribut>> Reply.rplwrtdate:String =>=>=> RelationalSchema.Column>> reply.rplwrtdate;
ClassDiagram.Attribut>> Reply.usrname:String =>=>=> RelationalSchema.Column>> reply.usrname;
ClassDiagram.Attribut>> Reply.usrno:String =>=>=> RelationalSchema.Column>> reply.usrno;
ClassDiagram.Attribut>> Reply.boardno:String =>=>=> RelationalSchema.Column>> reply.boardno;
ClassDiagram.Attribut>> UserVo.usrno:Long =>=>=> RelationalSchema.Column>> uservo.usrno PRIMARY KEY;
ClassDiagram.Attribut>> UserVo.//usrname:String =>=>=> RelationalSchema.Column>> uservo.//usrname;
ClassDiagram.Attribut>> UserVo.usrnickname:String =>=>=> RelationalSchema.Column>> uservo.usrnickname;
ClassDiagram.Attribut>> UserVo.usremail:String =>=>=> RelationalSchema.Column>> uservo.usremail;
ClassDiagram.Attribut>> UserVo.password:String =>=>=> RelationalSchema.Column>> uservo.password;
ClassDiagram.Attribut>> UserVo.usrages:String =>=>=> RelationalSchema.Column>> uservo.usrages;
ClassDiagram.Attribut>> UserVo.usrcity:String =>=>=> RelationalSchema.Column>> uservo.usrcity;
ClassDiagram.Attribut>> UserVo.usrgender:String =>=>=> RelationalSchema.Column>> uservo.usrgender;
ClassDiagram.Attribut>> UserVo.usrphone:String =>=>=> RelationalSchema.Column>> uservo.usrphone;
ClassDiagram.Attribut>> UserVo.//사용자아이디username:String =>=>=> RelationalSchema.Column>> uservo.//사용자아이디username;
ClassDiagram.Attribut>> UserVo.usraddr:String =>=>=> RelationalSchema.Column>> uservo.usraddr;
ClassDiagram.Attribut>> UserVo.roles:List<Role> =>=>=> RelationalSchema.Column>> uservo.roles;
ClassDiagram.Attribut>> Payment.payno:long =>=>=> RelationalSchema.Column>> payment.payno PRIMARY KEY;
ClassDiagram.Attribut>> Payment.payprice:String =>=>=> RelationalSchema.Column>> payment.payprice;
ClassDiagram.Attribut>> Payment.payinfo:String =>=>=> RelationalSchema.Column>> payment.payinfo;
ClassDiagram.Attribut>> Payment.paydate:String =>=>=> RelationalSchema.Column>> payment.paydate;
ClassDiagram.Attribut>> Payment.paystate:String =>=>=> RelationalSchema.Column>> payment.paystate;
ClassDiagram.Attribut>> Payment.rcvname:String =>=>=> RelationalSchema.Column>> payment.rcvname;
ClassDiagram.Attribut>> Payment.rcvphone:String =>=>=> RelationalSchema.Column>> payment.rcvphone;
ClassDiagram.Attribut>> Payment.rcvaddr:String =>=>=> RelationalSchema.Column>> payment.rcvaddr;
ClassDiagram.Attribut>> Board.brdno:long =>=>=> RelationalSchema.Column>> board.brdno PRIMARY KEY;
ClassDiagram.Attribut>> Board.brdtitle:String =>=>=> RelationalSchema.Column>> board.brdtitle;
ClassDiagram.Attribut>> Board.brdcontent:String =>=>=> RelationalSchema.Column>> board.brdcontent;
ClassDiagram.Attribut>> Board.brdwrtdate:String =>=>=> RelationalSchema.Column>> board.brdwrtdate;
ClassDiagram.Attribut>> Board.brdrank:String =>=>=> RelationalSchema.Column>> board.brdrank;
ClassDiagram.Attribut>> Board.brdimg:String =>=>=> RelationalSchema.Column>> board.brdimg;
ClassDiagram.Attribut>> Board.brdkind:long =>=>=> RelationalSchema.Column>> board.brdkind;
ClassDiagram.Attribut>> Board.brdcount:long =>=>=> RelationalSchema.Column>> board.brdcount;
ClassDiagram.Attribut>> Board.brdlike:String =>=>=> RelationalSchema.Column>> board.brdlike;
ClassDiagram.Attribut>> Board.brdpwd:String =>=>=> RelationalSchema.Column>> board.brdpwd;
ClassDiagram.Attribut>> Board.usrname:String =>=>=> RelationalSchema.Column>> board.usrname;
ClassDiagram.Attribut>> Board.usrno:String =>=>=> RelationalSchema.Column>> board.usrno;
ClassDiagram.Attribut>> Board.productno:long =>=>=> RelationalSchema.Column>> board.productno;
ClassDiagram.Attribut>> Cart.cartno:long =>=>=> RelationalSchema.Column>> cart.cartno PRIMARY KEY;
ClassDiagram.Attribut>> Cart.cartamount:long =>=>=> RelationalSchema.Column>> cart.cartamount;
ClassDiagram.Attribut>> Category.ctgno:long =>=>=> RelationalSchema.Column>> category.ctgno PRIMARY KEY;
ClassDiagram.Attribut>> Category.ctgname:String =>=>=> RelationalSchema.Column>> category.ctgname;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Payment>;
Many-To-One relationship from ClassDiagram.Class>>Reply  to ClassDiagram.Class>>board represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>UserVo  to ClassDiagram.Class>>List<Payment>;
Many-To-One relationship from ClassDiagram.Class>>Payment  to ClassDiagram.Class>>uservo represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Payment  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Payment  to ClassDiagram.Class>>List<Board>;
One-To-One relationship between ClassDiagram.Class>>Payment  to ClassDiagram.Class>>cart represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Board  to ClassDiagram.Class>>List<Reply>;
Many-To-One relationship from ClassDiagram.Class>>Board  to ClassDiagram.Class>>payment represented by ClassDiagram.Atrribute>>//(fetch;
Many-To-One relationship from ClassDiagram.Class>>Board  to ClassDiagram.Class>>Product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Cart  to ClassDiagram.Class>>payment represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<Product>;
