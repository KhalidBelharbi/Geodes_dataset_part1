ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> CustomerOrder =>=>=> RelationalSchema.Table>> customerorder;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.id:BigDecimal =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.street1:String =>=>=> RelationalSchema.Column>> address.street1;
ClassDiagram.Attribut>> Address.street2:String =>=>=> RelationalSchema.Column>> address.street2;
ClassDiagram.Attribut>> Address.version:Integer =>=>=> RelationalSchema.Column>> address.version;
ClassDiagram.Attribut>> Address.zipcode:int =>=>=> RelationalSchema.Column>> address.zipcode;
ClassDiagram.Attribut>> CustomerOrder.id:BigDecimal =>=>=> RelationalSchema.Column>> customerorder.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerOrder.version:int =>=>=> RelationalSchema.Column>> customerorder.version;
ClassDiagram.Attribut>> CustomerOrder.creation:Date =>=>=> RelationalSchema.Column>> customerorder.creation;
ClassDiagram.Attribut>> CustomerOrder.status:String =>=>=> RelationalSchema.Column>> customerorder.status;
ClassDiagram.Attribut>> Customer.id:BigDecimal =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.version:int =>=>=> RelationalSchema.Column>> customer.version;
ClassDiagram.Attribut>> Customer.email:String =>=>=> RelationalSchema.Column>> customer.email;
ClassDiagram.Attribut>> Customer.id:Integer =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Address.addressid:BigDecimal =>=>=> RelationalSchema.Column>> address.addressid PRIMARY KEY;
ClassDiagram.Attribut>> Address.zipcodeernal:int =>=>=> RelationalSchema.Column>> address.zipcodeernal;
ClassDiagram.Attribut>> Address.zipcode:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Customer.customerid:CustomerPK =>=>=> RelationalSchema.Column>> customer.customerid;
ClassDiagram.Attribut>> Customer.customerid:long =>=>=> RelationalSchema.Column>> customer.customerid PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.id:Integer =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.customerid:long =>=>=> RelationalSchema.Column>> customer.customerid PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.customerid:Integer =>=>=> RelationalSchema.Column>> customer.customerid PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name PRIMARY KEY;
ClassDiagram.Attribut>> Address.addressid:BigDecimal =>=>=> RelationalSchema.Column>> address.addressid PRIMARY KEY;
ClassDiagram.Attribut>> Address.zipcode:int =>=>=> RelationalSchema.Column>> address.zipcode;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
Many-To-One relationship from ClassDiagram.Class>>CustomerOrder  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<CustomerOrder>;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>billing;
One-To-One relationship between ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>shipping;
