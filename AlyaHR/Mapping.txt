ClassDiagram.Class>> Task =>=>=> RelationalSchema.Table>> task;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> UserTask =>=>=> RelationalSchema.Table>> usertask;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> Task.id:int =>=>=> RelationalSchema.Column>> task.id PRIMARY KEY;
ClassDiagram.Attribut>> Task.name:String =>=>=> RelationalSchema.Column>> task.name;
ClassDiagram.Attribut>> Task.surname:String =>=>=> RelationalSchema.Column>> task.surname;
ClassDiagram.Attribut>> Task.patronymic:String =>=>=> RelationalSchema.Column>> task.patronymic;
ClassDiagram.Attribut>> Task.birthday:String =>=>=> RelationalSchema.Column>> task.birthday;
ClassDiagram.Attribut>> Task.tabelnum:String =>=>=> RelationalSchema.Column>> task.tabelnum;
ClassDiagram.Attribut>> Task.placebirth:String =>=>=> RelationalSchema.Column>> task.placebirth;
ClassDiagram.Attribut>> Task.country:String =>=>=> RelationalSchema.Column>> task.country;
ClassDiagram.Attribut>> Task.gender:String =>=>=> RelationalSchema.Column>> task.gender;
ClassDiagram.Attribut>> Task.status:String =>=>=> RelationalSchema.Column>> task.status;
ClassDiagram.Attribut>> Task.education:String =>=>=> RelationalSchema.Column>> task.education;
ClassDiagram.Attribut>> Task.iin:String =>=>=> RelationalSchema.Column>> task.iin;
ClassDiagram.Attribut>> Task.pic:byte =>=>=> RelationalSchema.Column>> task.pic;
ClassDiagram.Attribut>> Task.telephone:String =>=>=> RelationalSchema.Column>> task.telephone;
ClassDiagram.Attribut>> Task.telwork:String =>=>=> RelationalSchema.Column>> task.telwork;
ClassDiagram.Attribut>> Task.mobile:String =>=>=> RelationalSchema.Column>> task.mobile;
ClassDiagram.Attribut>> Task.document:String =>=>=> RelationalSchema.Column>> task.document;
ClassDiagram.Attribut>> Task.seria:String =>=>=> RelationalSchema.Column>> task.seria;
ClassDiagram.Attribut>> Task.numdoc:String =>=>=> RelationalSchema.Column>> task.numdoc;
ClassDiagram.Attribut>> Task.isdoc:String =>=>=> RelationalSchema.Column>> task.isdoc;
ClassDiagram.Attribut>> Task.isdate:String =>=>=> RelationalSchema.Column>> task.isdate;
ClassDiagram.Attribut>> Task.undate:String =>=>=> RelationalSchema.Column>> task.undate;
ClassDiagram.Attribut>> Task.national:String =>=>=> RelationalSchema.Column>> task.national;
ClassDiagram.Attribut>> Task.citizenship:String =>=>=> RelationalSchema.Column>> task.citizenship;
ClassDiagram.Attribut>> Task.created:Date =>=>=> RelationalSchema.Column>> task.created;
ClassDiagram.Attribut>> Task.finished:boolean =>=>=> RelationalSchema.Column>> task.finished;
ClassDiagram.Attribut>> Role.id:int =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.role:String =>=>=> RelationalSchema.Column>> role.role;
ClassDiagram.Attribut>> UserTask.id:int =>=>=> RelationalSchema.Column>> usertask.id PRIMARY KEY;
ClassDiagram.Attribut>> User.id:int =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.active:int =>=>=> RelationalSchema.Column>> user.active;
One-To-Many relationship from ClassDiagram.Class>>Task  to ClassDiagram.Class>>Set<UserTask>;
Many-To-One relationship from ClassDiagram.Class>>UserTask  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>UserTask  to ClassDiagram.Class>>task represented by ClassDiagram.Atrribute>>id;
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>role represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Set<UserTask>;
