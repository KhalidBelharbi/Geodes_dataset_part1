ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Instructor =>=>=> RelationalSchema.Table>> instructor;
ClassDiagram.Class>> InstructorDetail =>=>=> RelationalSchema.Table>> instructordetail;
ClassDiagram.Attribut>> Course.id:int =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.title:String =>=>=> RelationalSchema.Column>> course.title;
ClassDiagram.Attribut>> Instructor.id:int =>=>=> RelationalSchema.Column>> instructor.id PRIMARY KEY;
ClassDiagram.Attribut>> Instructor.firstname:String =>=>=> RelationalSchema.Column>> instructor.firstname;
ClassDiagram.Attribut>> Instructor.lastname:String =>=>=> RelationalSchema.Column>> instructor.lastname;
ClassDiagram.Attribut>> Instructor.email:String =>=>=> RelationalSchema.Column>> instructor.email;
ClassDiagram.Attribut>> InstructorDetail.id:int =>=>=> RelationalSchema.Column>> instructordetail.id PRIMARY KEY;
ClassDiagram.Attribut>> InstructorDetail.youtubechannel:String =>=>=> RelationalSchema.Column>> instructordetail.youtubechannel;
ClassDiagram.Attribut>> InstructorDetail.hobby:String =>=>=> RelationalSchema.Column>> instructordetail.hobby;
Many-To-One relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>Instructor represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Instructor  to ClassDiagram.Class>>Instructor represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Instructor  to ClassDiagram.Class>>List<Course>;
One-To-One relationship between ClassDiagram.Class>>InstructorDetail  to ClassDiagram.Class>>Instructor represented by ClassDiagram.Atrribute>>GeneratedName;
