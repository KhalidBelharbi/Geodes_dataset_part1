ClassDiagram.Class>> Permiso =>=>=> RelationalSchema.Table>> permiso;
ClassDiagram.Class>> Actividad =>=>=> RelationalSchema.Table>> actividad;
ClassDiagram.Class>> Centro =>=>=> RelationalSchema.Table>> centro;
ClassDiagram.Class>> Asistencia =>=>=> RelationalSchema.Table>> asistencia;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Rol =>=>=> RelationalSchema.Table>> rol;
ClassDiagram.Attribut>> Permiso.id:Long =>=>=> RelationalSchema.Column>> permiso.id PRIMARY KEY;
ClassDiagram.Attribut>> Permiso.nombre:String =>=>=> RelationalSchema.Column>> permiso.nombre;
ClassDiagram.Attribut>> Actividad.id:Long =>=>=> RelationalSchema.Column>> actividad.id PRIMARY KEY;
ClassDiagram.Attribut>> Actividad.nombre:String =>=>=> RelationalSchema.Column>> actividad.nombre;
ClassDiagram.Attribut>> Centro.id:Long =>=>=> RelationalSchema.Column>> centro.id PRIMARY KEY;
ClassDiagram.Attribut>> Centro.nombre:String =>=>=> RelationalSchema.Column>> centro.nombre;
ClassDiagram.Attribut>> Asistencia.GeneratedName:Centro =>=>=> RelationalSchema.Column>> asistencia.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Asistencia.usuario:User =>=>=> RelationalSchema.Column>> asistencia.usuario PRIMARY KEY;
ClassDiagram.Attribut>> Asistencia.GeneratedName:Actividad =>=>=> RelationalSchema.Column>> asistencia.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Asistencia.fecha:Date =>=>=> RelationalSchema.Column>> asistencia.fecha;
ClassDiagram.Attribut>> User.folio:Long =>=>=> RelationalSchema.Column>> user.folio PRIMARY KEY;
ClassDiagram.Attribut>> User.nombre:String =>=>=> RelationalSchema.Column>> user.nombre;
ClassDiagram.Attribut>> User.apellidopaterno:String =>=>=> RelationalSchema.Column>> user.apellidopaterno;
ClassDiagram.Attribut>> User.apellidomaterno:String =>=>=> RelationalSchema.Column>> user.apellidomaterno;
ClassDiagram.Attribut>> User.correo:String =>=>=> RelationalSchema.Column>> user.correo;
ClassDiagram.Attribut>> User.direccion:String =>=>=> RelationalSchema.Column>> user.direccion;
ClassDiagram.Attribut>> User.telefono:String =>=>=> RelationalSchema.Column>> user.telefono;
ClassDiagram.Attribut>> User.edad:int =>=>=> RelationalSchema.Column>> user.edad;
ClassDiagram.Attribut>> User.sexo:String =>=>=> RelationalSchema.Column>> user.sexo;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> Rol.id:Long =>=>=> RelationalSchema.Column>> rol.id PRIMARY KEY;
ClassDiagram.Attribut>> Rol.nombre:String =>=>=> RelationalSchema.Column>> rol.nombre;
One-To-Many relationship from ClassDiagram.Class>>Actividad  to ClassDiagram.Class>>List<Asistencia>;
One-To-Many relationship from ClassDiagram.Class>>Actividad  to ClassDiagram.Class>>List<Asistencia>;
: centro_(centroID:centro [PK] #FK to centro,ID: [PK] #FK to );
: centro_(centroID:centro [PK] #FK to centro,ID: [PK] #FK to );centro_(centroID:centro [PK] #FK to centro,ID: [PK] #FK to );
One-To-Many relationship from ClassDiagram.Class>>Centro  to ClassDiagram.Class>>List<Asistencia>;
One-To-Many relationship from ClassDiagram.Class>>Centro  to ClassDiagram.Class>>List<Asistencia>;
Many-To-One relationship from ClassDiagram.Class>>Asistencia  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Asistencia  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>usuario;
Many-To-One relationship from ClassDiagram.Class>>Asistencia  to ClassDiagram.Class>> represented by ClassDiagram.Atrribute>>GeneratedName;
: user_(userID:user [PK] #FK to user,ID: [PK] #FK to );
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Asistencia>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Asistencia>;
: rol_(rolID:rol [PK] #FK to rol,ID: [PK] #FK to );
