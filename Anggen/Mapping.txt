ClassDiagram.Class>> EnumValue =>=>=> RelationalSchema.Table>> enumvalue;
ClassDiagram.Class>> Annotation =>=>=> RelationalSchema.Table>> annotation;
ClassDiagram.Class>> AnnotationAttribute =>=>=> RelationalSchema.Table>> annotationattribute;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> EnumEntity =>=>=> RelationalSchema.Table>> enumentity;
ClassDiagram.Class>> LogEntry =>=>=> RelationalSchema.Table>> logentry;
ClassDiagram.Class>> RestrictionEntityGroup =>=>=> RelationalSchema.Table>> restrictionentitygroup;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> RestrictionField =>=>=> RelationalSchema.Table>> restrictionfield;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Attribut>> EnumValue.entityid:java.lang.Long =>=>=> RelationalSchema.Column>> enumvalue.entityid;
ClassDiagram.Attribut>> EnumValue.name:String =>=>=> RelationalSchema.Column>> enumvalue.name;
ClassDiagram.Attribut>> EnumValue.value:Integer =>=>=> RelationalSchema.Column>> enumvalue.value;
ClassDiagram.Attribut>> EnumValue.enumvalueid:java.lang.Long =>=>=> RelationalSchema.Column>> enumvalue.enumvalueid PRIMARY KEY;
ClassDiagram.Attribut>> Annotation.entityid:java.lang.Long =>=>=> RelationalSchema.Column>> annotation.entityid;
ClassDiagram.Attribut>> Annotation.annotationid:java.lang.Long =>=>=> RelationalSchema.Column>> annotation.annotationid PRIMARY KEY;
ClassDiagram.Attribut>> Annotation.field:it.anggen.model.field.Field =>=>=> RelationalSchema.Column>> annotation.field;
ClassDiagram.Attribut>> Annotation.enumfield:it.anggen.model.field.EnumField =>=>=> RelationalSchema.Column>> annotation.enumfield;
ClassDiagram.Attribut>> Annotation.relationship:it.anggen.model.relationship.Relationship =>=>=> RelationalSchema.Column>> annotation.relationship;
ClassDiagram.Attribut>> Annotation.GeneratedName:AnnotationType =>=>=> RelationalSchema.Column>> annotation.GeneratedName;
ClassDiagram.Attribut>> AnnotationAttribute.entityid:java.lang.Long =>=>=> RelationalSchema.Column>> annotationattribute.entityid;
ClassDiagram.Attribut>> AnnotationAttribute.property:java.lang.String =>=>=> RelationalSchema.Column>> annotationattribute.property;
ClassDiagram.Attribut>> AnnotationAttribute.value:java.lang.String =>=>=> RelationalSchema.Column>> annotationattribute.value;
ClassDiagram.Attribut>> AnnotationAttribute.annotationattributeid:java.lang.Long =>=>=> RelationalSchema.Column>> annotationattribute.annotationattributeid PRIMARY KEY;
ClassDiagram.Attribut>> Project.entityid:Long =>=>=> RelationalSchema.Column>> project.entityid;
ClassDiagram.Attribut>> Project.projectid:Integer =>=>=> RelationalSchema.Column>> project.projectid PRIMARY KEY;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name;
ClassDiagram.Attribut>> EnumEntity.entityid:java.lang.Long =>=>=> RelationalSchema.Column>> enumentity.entityid;
ClassDiagram.Attribut>> EnumEntity.name:String =>=>=> RelationalSchema.Column>> enumentity.name;
ClassDiagram.Attribut>> EnumEntity.enumentityid:java.lang.Long =>=>=> RelationalSchema.Column>> enumentity.enumentityid PRIMARY KEY;
ClassDiagram.Attribut>> LogEntry.entityid:java.lang.Long =>=>=> RelationalSchema.Column>> logentry.entityid;
ClassDiagram.Attribut>> LogEntry.info:java.lang.String =>=>=> RelationalSchema.Column>> logentry.info;
ClassDiagram.Attribut>> LogEntry.hostname:java.lang.String =>=>=> RelationalSchema.Column>> logentry.hostname;
ClassDiagram.Attribut>> LogEntry.userid:java.lang.Long =>=>=> RelationalSchema.Column>> logentry.userid;
ClassDiagram.Attribut>> LogEntry.log:Date =>=>=> RelationalSchema.Column>> logentry.log;
ClassDiagram.Attribut>> LogEntry.logentryid:java.lang.Long =>=>=> RelationalSchema.Column>> logentry.logentryid PRIMARY KEY;
ClassDiagram.Attribut>> LogEntry.entityid:java.lang.Long =>=>=> RelationalSchema.Column>> logentry.entityid;
ClassDiagram.Attribut>> LogEntry.ipaddress:java.lang.String =>=>=> RelationalSchema.Column>> logentry.ipaddress;
ClassDiagram.Attribut>> LogEntry.GeneratedName:LogType =>=>=> RelationalSchema.Column>> logentry.GeneratedName;
ClassDiagram.Attribut>> LogEntry.GeneratedName:OperationType =>=>=> RelationalSchema.Column>> logentry.GeneratedName;
ClassDiagram.Attribut>> RestrictionEntityGroup.entityid:java.lang.Long =>=>=> RelationalSchema.Column>> restrictionentitygroup.entityid;
ClassDiagram.Attribut>> RestrictionEntityGroup.canupdate:java.lang.Boolean =>=>=> RelationalSchema.Column>> restrictionentitygroup.canupdate;
ClassDiagram.Attribut>> RestrictionEntityGroup.cancreate:java.lang.Boolean =>=>=> RelationalSchema.Column>> restrictionentitygroup.cancreate;
ClassDiagram.Attribut>> RestrictionEntityGroup.candelete:java.lang.Boolean =>=>=> RelationalSchema.Column>> restrictionentitygroup.candelete;
ClassDiagram.Attribut>> RestrictionEntityGroup.restrictionentitygroupid:java.lang.Long =>=>=> RelationalSchema.Column>> restrictionentitygroup.restrictionentitygroupid PRIMARY KEY;
ClassDiagram.Attribut>> RestrictionEntityGroup.cansearch:java.lang.Boolean =>=>=> RelationalSchema.Column>> restrictionentitygroup.cansearch;
ClassDiagram.Attribut>> RestrictionEntityGroup.role:it.anggen.model.security.Role =>=>=> RelationalSchema.Column>> restrictionentitygroup.role;
ClassDiagram.Attribut>> RestrictionEntityGroup.entitygroup:it.anggen.model.entity.EntityGroup =>=>=> RelationalSchema.Column>> restrictionentitygroup.entitygroup;
ClassDiagram.Attribut>> User.entityid:java.lang.Long =>=>=> RelationalSchema.Column>> user.entityid;
ClassDiagram.Attribut>> User.userid:java.lang.Long =>=>=> RelationalSchema.Column>> user.userid PRIMARY KEY;
ClassDiagram.Attribut>> User.password:java.lang.String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.username:java.lang.String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.enabled:Boolean =>=>=> RelationalSchema.Column>> user.enabled;
ClassDiagram.Attribut>> RestrictionField.entityid:java.lang.Long =>=>=> RelationalSchema.Column>> restrictionfield.entityid;
ClassDiagram.Attribut>> RestrictionField.restrictionfieldid:java.lang.Long =>=>=> RelationalSchema.Column>> restrictionfield.restrictionfieldid PRIMARY KEY;
ClassDiagram.Attribut>> RestrictionField.role:it.anggen.model.security.Role =>=>=> RelationalSchema.Column>> restrictionfield.role;
ClassDiagram.Attribut>> RestrictionField.field:it.anggen.model.field.Field =>=>=> RelationalSchema.Column>> restrictionfield.field;
ClassDiagram.Attribut>> Role.entityid:Long =>=>=> RelationalSchema.Column>> role.entityid;
ClassDiagram.Attribut>> Role.roleid:Integer =>=>=> RelationalSchema.Column>> role.roleid PRIMARY KEY;
ClassDiagram.Attribut>> Role.role:String =>=>=> RelationalSchema.Column>> role.role;
Many-To-One relationship from ClassDiagram.Class>>EnumValue  to ClassDiagram.Class>>it.anggen.model.entity.enumentity represented by ClassDiagram.Atrribute>>enumentity;
One-To-Many relationship from ClassDiagram.Class>>Annotation  to ClassDiagram.Class>>List<AnnotationAttribute>;
Many-To-One relationship from ClassDiagram.Class>>AnnotationAttribute  to ClassDiagram.Class>>it.anggen.model.field.annotation represented by ClassDiagram.Atrribute>>annotation;
One-To-Many relationship from ClassDiagram.Class>>Project  to ClassDiagram.Class>>List<EntityGroup>;
One-To-Many relationship from ClassDiagram.Class>>Project  to ClassDiagram.Class>>List<EnumEntity>;
Many-To-One relationship from ClassDiagram.Class>>EnumEntity  to ClassDiagram.Class>>it.anggen.model.entity.project represented by ClassDiagram.Atrribute>>project;
One-To-Many relationship from ClassDiagram.Class>>EnumEntity  to ClassDiagram.Class>>List<EnumValue>;
One-To-Many relationship from ClassDiagram.Class>>EnumEntity  to ClassDiagram.Class>>List<EnumField>;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>list<role>: user_role(user_id:User [PK] #FK to User,role_id:list<role> [PK] #FK to list<role>);
One-To-Many relationship from ClassDiagram.Class>>Role  to ClassDiagram.Class>>List<RestrictionEntity>;
One-To-Many relationship from ClassDiagram.Class>>Role  to ClassDiagram.Class>>List<RestrictionField>;
One-To-Many relationship from ClassDiagram.Class>>Role  to ClassDiagram.Class>>List<RestrictionEntityGroup>;
