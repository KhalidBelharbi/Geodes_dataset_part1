ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Shop =>=>=> RelationalSchema.Table>> shop;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> DBFile =>=>=> RelationalSchema.Table>> dbfile;
ClassDiagram.Class>> Comments =>=>=> RelationalSchema.Table>> comments;
ClassDiagram.Attribut>> Product.id:Long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.description:String =>=>=> RelationalSchema.Column>> product.description;
ClassDiagram.Attribut>> Product.type:String =>=>=> RelationalSchema.Column>> product.type;
ClassDiagram.Attribut>> Product.category:String =>=>=> RelationalSchema.Column>> product.category;
ClassDiagram.Attribut>> Product.sizes:String =>=>=> RelationalSchema.Column>> product.sizes;
ClassDiagram.Attribut>> Product.photourl:String =>=>=> RelationalSchema.Column>> product.photourl;
ClassDiagram.Attribut>> Product.originalprice:Double =>=>=> RelationalSchema.Column>> product.originalprice;
ClassDiagram.Attribut>> Product.discount:Double =>=>=> RelationalSchema.Column>> product.discount;
ClassDiagram.Attribut>> Product.inwish:Boolean =>=>=> RelationalSchema.Column>> product.inwish;
ClassDiagram.Attribut>> Shop.id:Long =>=>=> RelationalSchema.Column>> shop.id PRIMARY KEY;
ClassDiagram.Attribut>> Shop.name:String =>=>=> RelationalSchema.Column>> shop.name;
ClassDiagram.Attribut>> Shop.offertitle:String =>=>=> RelationalSchema.Column>> shop.offertitle;
ClassDiagram.Attribut>> Shop.offerdesc:String =>=>=> RelationalSchema.Column>> shop.offerdesc;
ClassDiagram.Attribut>> Shop.state:String =>=>=> RelationalSchema.Column>> shop.state;
ClassDiagram.Attribut>> Shop.city:String =>=>=> RelationalSchema.Column>> shop.city;
ClassDiagram.Attribut>> Shop.location:String =>=>=> RelationalSchema.Column>> shop.location;
ClassDiagram.Attribut>> Shop.address:String =>=>=> RelationalSchema.Column>> shop.address;
ClassDiagram.Attribut>> Shop.photourl:String =>=>=> RelationalSchema.Column>> shop.photourl;
ClassDiagram.Attribut>> Shop.type:String =>=>=> RelationalSchema.Column>> shop.type;
ClassDiagram.Attribut>> Shop.categories:String =>=>=> RelationalSchema.Column>> shop.categories;
ClassDiagram.Attribut>> Shop.openingtime:String =>=>=> RelationalSchema.Column>> shop.openingtime;
ClassDiagram.Attribut>> Shop.closingtime:String =>=>=> RelationalSchema.Column>> shop.closingtime;
ClassDiagram.Attribut>> Shop.rating:float =>=>=> RelationalSchema.Column>> shop.rating;
ClassDiagram.Attribut>> Shop.ratingcount:float =>=>=> RelationalSchema.Column>> shop.ratingcount;
ClassDiagram.Attribut>> Shop.phone:String =>=>=> RelationalSchema.Column>> shop.phone;
ClassDiagram.Attribut>> Shop.parkingavail:Boolean =>=>=> RelationalSchema.Column>> shop.parkingavail;
ClassDiagram.Attribut>> Shop.changingroomavail:Boolean =>=>=> RelationalSchema.Column>> shop.changingroomavail;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.phonenumber:String =>=>=> RelationalSchema.Column>> user.phonenumber;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> DBFile.id:String =>=>=> RelationalSchema.Column>> dbfile.id PRIMARY KEY;
ClassDiagram.Attribut>> DBFile.filename:String =>=>=> RelationalSchema.Column>> dbfile.filename;
ClassDiagram.Attribut>> DBFile.filetype:String =>=>=> RelationalSchema.Column>> dbfile.filetype;
ClassDiagram.Attribut>> DBFile.data:byte =>=>=> RelationalSchema.Column>> dbfile.data;
ClassDiagram.Attribut>> Comments.id:Long =>=>=> RelationalSchema.Column>> comments.id PRIMARY KEY;
ClassDiagram.Attribut>> Comments.ratings:Float =>=>=> RelationalSchema.Column>> comments.ratings;
ClassDiagram.Attribut>> Comments.commenttext:String =>=>=> RelationalSchema.Column>> comments.commenttext;
ClassDiagram.Attribut>> Comments.username:String =>=>=> RelationalSchema.Column>> comments.username;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>shop represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Shop  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Comments  to ClassDiagram.Class>>shop represented by ClassDiagram.Atrribute>>GeneratedName;
