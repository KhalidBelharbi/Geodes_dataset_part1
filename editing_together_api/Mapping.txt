ClassDiagram.Class>> UserEntity =>=>=> RelationalSchema.Table>> userentity;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> SnippetEntity =>=>=> RelationalSchema.Table>> snippetentity;
ClassDiagram.Class>> ProjectEntity =>=>=> RelationalSchema.Table>> projectentity;
ClassDiagram.Class>> ProjectUserEntity =>=>=> RelationalSchema.Table>> projectuserentity;
ClassDiagram.Attribut>> UserEntity.id:Long =>=>=> RelationalSchema.Column>> userentity.id PRIMARY KEY;
ClassDiagram.Attribut>> UserEntity.username:String =>=>=> RelationalSchema.Column>> userentity.username;
ClassDiagram.Attribut>> UserEntity.email:String =>=>=> RelationalSchema.Column>> userentity.email;
ClassDiagram.Attribut>> UserEntity.password:String =>=>=> RelationalSchema.Column>> userentity.password;
ClassDiagram.Attribut>> Role.id:Integer =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:RoleName =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> SnippetEntity.id:Integer =>=>=> RelationalSchema.Column>> snippetentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SnippetEntity.name:String =>=>=> RelationalSchema.Column>> snippetentity.name;
ClassDiagram.Attribut>> SnippetEntity.content:String =>=>=> RelationalSchema.Column>> snippetentity.content;
ClassDiagram.Attribut>> SnippetEntity.projectid:Integer =>=>=> RelationalSchema.Column>> snippetentity.projectid;
ClassDiagram.Attribut>> SnippetEntity.created:Date =>=>=> RelationalSchema.Column>> snippetentity.created;
ClassDiagram.Attribut>> SnippetEntity.createuserid:Long =>=>=> RelationalSchema.Column>> snippetentity.createuserid;
ClassDiagram.Attribut>> SnippetEntity.up:Date =>=>=> RelationalSchema.Column>> snippetentity.up;
ClassDiagram.Attribut>> SnippetEntity.updateuserid:Long =>=>=> RelationalSchema.Column>> snippetentity.updateuserid;
ClassDiagram.Attribut>> ProjectEntity.id:Integer =>=>=> RelationalSchema.Column>> projectentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ProjectEntity.name:String =>=>=> RelationalSchema.Column>> projectentity.name;
ClassDiagram.Attribut>> ProjectEntity.language:LanguageType =>=>=> RelationalSchema.Column>> projectentity.language;
ClassDiagram.Attribut>> ProjectEntity.created:Date =>=>=> RelationalSchema.Column>> projectentity.created;
ClassDiagram.Attribut>> ProjectEntity.createuserid:Long =>=>=> RelationalSchema.Column>> projectentity.createuserid;
ClassDiagram.Attribut>> ProjectEntity.lastcompilation:Date =>=>=> RelationalSchema.Column>> projectentity.lastcompilation;
ClassDiagram.Attribut>> ProjectEntity.token:String =>=>=> RelationalSchema.Column>> projectentity.token;
ClassDiagram.Attribut>> ProjectUserEntity.projectid:Integer =>=>=> RelationalSchema.Column>> projectuserentity.projectid PRIMARY KEY;
ClassDiagram.Attribut>> ProjectUserEntity.userid:Long =>=>=> RelationalSchema.Column>> projectuserentity.userid PRIMARY KEY;
Many-To-Many relationship between ClassDiagram.Class>>UserEntity  and ClassDiagram.Class>>set<role>: user_roles(user_id:UserEntity [PK] #FK to UserEntity,role_id:set<role> [PK] #FK to set<role>);
