
bioemergencycontact(id:long [PK], version:Integer, GeneratedName:BioData, GeneratedName:City, GeneratedName:FamilyRelation, contactname:String, phonenumber:String, issamehouse:Boolean, address:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

country(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, countrycode:String, countryname:String, flagicon:byte, phonecode:Integer, latitude:String, longitude:String);

terminationtype(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, code:String, name:String, description:String);

bioinsurance(id:long [PK], version:Integer, GeneratedName:BioData, createdby:String, createdon:Date, updatedby:String, updon:Date, nopolicy:String, instance:String, facility:String, description:String);

unitkerja(id:long [PK], version:Integer, code:String, name:String, location:String, createdby:String, createdon:Date, updatedby:String, updon:Date, GeneratedName:City);

traveltype(id:long [PK], version:Integer, GeneratedName:AttendanceStatus, createdby:String, createdon:Date, updatedby:String, updon:Date, code:String, name:String, description:String);

paysalaryjurnal(id:long [PK], version:Integer, GeneratedName:CostCenter, createdby:String, createdon:Date, updatedby:String, updon:Date, code:String, name:String, description:String);

businesstravel(id:Long [PK], version:Integer, businesstravelno:String, GeneratedName:EmpData, GeneratedName:TravelZone, GeneratedName:TravelType, destination:String, propose:Date, start:Date, end:Date, description:String, approvalactivitynumber:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

organizationletter(id:long [PK], version:Integer, letternumber:String, letter:Date, createdby:String, createdon:Date, updatedby:String, updon:Date);

costcenter(id:long [PK], version:Integer, GeneratedName:CostCenter, code:String, name:String, createdby:String, createdon:Date, updatedby:String, updon:Date, description:String, balance:BigDecimal);

major(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, majorname:String, description:String);

empdata(id:long [PK], version:Integer, GeneratedName:WtGroupWorking, GeneratedName:EmployeeType, GeneratedName:BioData, GeneratedName:PaySalaryGrade, byid:Jabatan, GeneratedName:GolonganJabatan, bygajiid:Jabatan, nik:String, join:Date, ppmp:String, ppip:String, isfinger:Boolean, heatlypremi:Boolean, ptkpstatus:Boolean, ptkpnumber:Integer, insentifstatus:Boolean, //bigdecimalbasicsalarybasicsalary:String, createdby:String, createdon:Date, updatedby:String, updon:Date, //longdefempid//stringniklamaemprotasis:Set<EmpRotasi>, status:String, nosk:String, rotasi:Date);

jabatanedukasi(id:JabatanEdukasiId, GeneratedName:EducationLevel, GeneratedName:Jabatan, descripstion:String);

passwordcomplexity(id:long [PK], version:Integer, code:String, hasnumber:Boolean, hasspecialcharacter:Boolean, hasuppercase:Boolean, haslowercase:Boolean, mincharacter:Integer, maxcharacter:Integer, createdby:String, updatedby:String, createdon:Date, updon:Date, emailnotification:Boolean, expiredperiod:Integer, notificationperiod:Integer, passwordmustdifferent:Boolean, smsnotification:Boolean);

companypolicy(id:long [PK], version:Integer, subjecttitle:String, effective:Date, contentpolicy:String, GeneratedName:Department, attachfilepath:String, isbroadcast:Boolean, repeaton:String, isuseattachment:Boolean, createdby:String, createdon:Date, updatedby:String, upatedon:Date);

bioeducationhistory(id:long [PK], version:Integer, GeneratedName:BioData, GeneratedName:EducationLevel, GeneratedName:InstitutionEducation, GeneratedName:Faculty, GeneratedName:Major, certificatenumber:String, pathfoto:String, score:Double, createdby:String, createdon:Date, updatedby:String, updon:Date, yearin:Integer, yearout:Integer, GeneratedName:City);

currency(id:long [PK], version:Integer, GeneratedName:Country, code:String, name:String, createdby:String, createdon:Date, updatedby:String, updon:Date, description:String);

passwordhistory(id:long [PK], password:String, createdby:String, createdon:Date, username:String, emailnotification:Integer, smsnotification:Integer, requesttype:String, realname:String, emailaddress:String, phonenumber:String, listrole:String, localid:String);

biodocument(id:long [PK], version:Integer, GeneratedName:BioData, documenttitle:String, documentno:String, description:String, uploadpath:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

attendancestatus(id:long [PK], version:Integer, code:String, statuskehadrian:String, description:String, ispresent:Integer, ispay:Integer, createdby:String, createdon:Date, updatedby:String, upatedon:Date);

biopeopleinterest(id:long [PK], version:Integer, GeneratedName:BioData, GeneratedName:InterestType, name:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

favoritemenu(id:FavoriteMenuId, GeneratedName:HrmUser, GeneratedName:HrmMenu, deskripsi:String);

riwayatakses(id:long [PK], userid:String, pathurl:String, access:Date, name:String);

religion(id:long [PK], version:Integer, createdby:String, createdon:Date, name:String, updatedby:String, updon:Date);

appraisalelement(id:long [PK], version:Integer, createdby:String, createdon:Date, description:String, name:String, updatedby:String, updon:Date, operator:Integer, leader:Integer);

benefitgroup(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, code:String, name:String, valid:Date, description:String);

transactioncodefication(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, code:String, name:String, description:String);

interesttype(id:long [PK], version:Integer, name:String, createdby:String, createdon:Date, updatedby:String, updon:Date, description:String);

biokeahlian(id:long [PK], version:Integer, GeneratedName:BioData, name:String, tingkatkeahlian:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date);

wtperiode(id:long [PK], version:Integer, tahun:String, bulan:Integer, fromperiode:Date, untilperiode:Date, absen:String, payrolltype:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

jabatanmajor(id:JabatanMajorId, GeneratedName:Jabatan, GeneratedName:Major, description:String);

biomedicalhistory(id:long [PK], version:Integer, GeneratedName:BioData, createdby:String, createdon:Date, updatedby:String, updon:Date, year:Integer, disease:String, description:String, status:Integer);

biobankaccount(id:long [PK], version:Integer, GeneratedName:BioData, GeneratedName:Currency, GeneratedName:City, GeneratedName:Bank, createdby:String, createdon:Date, updatedby:String, updon:Date, ownername:String, accountnumber:String, branch:String, address:String, savingtype:Integer, swiftcode:String, defaultaccount:Integer);

klasifikasikerja(id:long [PK], version:Integer, createdby:String, createdon:Date, code:String, name:String, updatedby:String, updon:Date, description:String);

companypolicyjabatan(id:CompanyPolicyJabatanId, GeneratedName:CompanyPolicy, GeneratedName:GolonganJabatan, description:String);

loan(id:Long [PK], version:Integer, GeneratedName:EmpData, GeneratedName:LoanSchema, nominalprincipal:Double, loan:Date, loanpayment:Date, interestrate:Double, typeofinterest:Integer, termin:Integer, approvalactivitynumber:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

emprotasi(id:long [PK], version:Integer, GeneratedName:EmpData, bynewfunctionid:Jabatan, byoldfunctionid:Jabatan, letternumber:String, oldbasicsalary:Long, newbasicsalary:Long, createdby:String, createdon:Date, updatedby:String, updon:Date);

leavedistribution(id:long [PK], version:Integer, GeneratedName:EmpData, GeneratedName:Leave, balance:Double, end:Date, start:Date, createdby:String, createdon:Date, updatedby:String, updon:Date);

publicholiday(id:long [PK], version:Integer, GeneratedName:LeaveScheme, createdby:String, createdon:Date, updatedby:String, updon:Date, start:Date, end:Date, description:String);

wtworkinghour(id:Long [PK], version:Integer, code:String, name:String, description:String, workinghourbegin:Date, workinghourend:Date, maxhour:Date, arrivelimitbegin:Integer, arrivelimitend:Integer, gohomelimitbegin:Integer, gohomelimitend:Integer, ispenaltyarrivelate:Boolean, ispenaltygohomeearly:Boolean, ismanagebreaktime:Boolean, breakhourbegin:Date, breakhourend:Date, breakstartlimitbegin:Integer, breakstartlimitend:Integer, breakfinishlimitbegin:Integer, breakfinishlimitend:Integer, ispenaltybreakstartearly:Boolean, ispenaltybreakfinishlate:Boolean, GeneratedName:AttendanceStatus, ismanageovertime:Boolean, startovertime:Date, endovertime:Date, GeneratedName:WtOverTime, exchangeworkinghour:WtWorkingHour #FK to(wtworkinghour), createdby:String, createdon:Date, updatedby:String, updon:Date);

hrmmenurole(id:HrmMenuRoleId, GeneratedName:HrmMenu, GeneratedName:HrmRole, description:String);

benefitgrouprate(id:long [PK], version:Integer, GeneratedName:BenefitGroup, GeneratedName:GolonganJabatan, createdby:String, createdon:Date, updatedby:String, updon:Date, nominal:Double);

wtovertime(id:long [PK], version:Integer, code:String, name:String, description:String, minimumtime:Date, maximumtime:Date, overtimecalculation:Integer, otrounding:Integer, starttimefactor:Date, finishtimefactor:Date, valueprice:Double, createdby:String, createdon:Date, updatedby:String, updon:Date);

paysalarygrade(id:long [PK], version:Integer, GeneratedName:Currency, gradesalary:Integer, minsalary:BigDecimal, mediumsalary:BigDecimal, maxsalary:BigDecimal, createdby:String, createdon:Date, updatedby:String, updon:Date);

familyrelation(id:long [PK], version:Integer, relasiname:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

jabatanspesifikasi(id:long [PK], version:Integer, GeneratedName:SpecificationAbility, GeneratedName:Jabatan, value:String, optionability:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

biodata(id:long [PK], version:Integer, GeneratedName:Nationality, GeneratedName:Dialect, GeneratedName:Religion, GeneratedName:City, GeneratedName:Race, GeneratedName:MaritalStatus, firstname:String, lastname:String, title:String, nickname:String, gender:Integer, bloodtype:Integer, ofbirth:Date, personalemail:String, mobilephone:String, bodytall:Double, bodyweight:Double, createdby:String, createdon:Date, updatedby:String, updon:Date, pathfoto:String, pathfinger:String, pathsignature:String, nokk:String, jamsostek:String, npwp:String);

city(id:long [PK], version:Integer, GeneratedName:Province, createdby:String, createdon:Date, updatedby:String, updon:Date, citycode:String, cityname:String, latitude:String, longitude:String);

appraisaldetail(id:long [PK], version:Integer, GeneratedName:AppraisalElement, createdby:String, createdon:Date, description:String, name:String, updatedby:String, updon:Date);

reimbursmentschemaemployeetype(id:Long [PK], version:Integer, GeneratedName:ReimbursmentSchema, GeneratedName:EmployeeType, createdby:String, createdon:Date, updatedby:String, updon:Date);

publicholidayexception(id:long [PK], version:Integer, GeneratedName:EmpData, GeneratedName:PublicHoliday, createdby:String, createdon:Date, updatedby:String, updon:Date, description:String);

bank(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, bankcode:String, bankname:String, description:String, swiftccode:String, iban:String, bankidentificationno:String);

hrmuser(id:long [PK], version:Integer, userid:String, realname:String, emailaddress:String, phonenumber:String, password:String, isactive:Integer, islock:Integer, isexpired:Integer, GeneratedName:EmpData, createdby:String, updatedby:String, createdon:Date, updon:Date);

reimbursmentschema(id:Long [PK], version:Integer, code:String, name:String, effectivedate:Integer, GeneratedName:CostCenter, measurement:Integer, basicvalue:Integer, quantity:Integer, nominalunit:BigDecimal, ratiosalary:Integer, timerange:Integer, payrollcomponent:Boolean, isattachdocument:Boolean, createdby:String, createdon:Date, updatedby:String, updon:Date);

leaveimplementation(id:Long [PK], version:Integer, numberfilling:String, GeneratedName:Leave, GeneratedName:EmpData, start:Date, end:Date, filling:Date, address:String, mobilephone:String, materialjobsabandoned:String, temporaryacting:EmpData #FK to(empdata), description:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

educationlevel(id:Long [PK], version:Integer, name:String, level:Integer, createdby:String, updatedby:String, createdon:Date, updon:Date);

empcareerhistory(id:long [PK], version:Integer, GeneratedName:Jabatan, GeneratedName:GolonganJabatan, GeneratedName:BioData, //bigdecimalsalarysalary:String, nik:String, nosk:String, tglpenganngkatan:Date, createdby:String, createdon:Date, updateby:String, updon:Date, status:String, GeneratedName:EmployeeType);

travelcomponentcostrate(id:Long [PK], version:Integer, code:String, GeneratedName:CostCenter, GeneratedName:GolonganJabatan, GeneratedName:TravelComponent, GeneratedName:TravelZone, defaultrate:Double, description:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

hrmuserrole(id:HrmUserRoleId, GeneratedName:HrmUser, GeneratedName:HrmRole, description:String);

province(id:long [PK], version:Integer, GeneratedName:Country, createdby:String, createdon:Date, updatedby:String, updon:Date, provincecode:String, provincename:String);

faculty(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, facultyname:String, description:String);

businesstravelcomponent(id:Long [PK], version:Integer, GeneratedName:BusinessTravel, GeneratedName:TravelComponent, GeneratedName:CostCenter, quantity:Integer, earnedperquantity:Double, defaultrate:Double, createdby:String, createdon:Date, updatedby:String, updon:Date);

institutioneducation(id:long [PK], version:Integer, GeneratedName:City, createdby:String, createdon:Date, updatedby:String, updon:Date, institutioneducationcode:String, institutioneducationname:String, address:String, postalcode:Integer);

emppersonachievement(id:long [PK], version:Integer, GeneratedName:EmpData, achievementname:String, description:String, achievement:Date, createdby:String, createdon:Date, updatedby:String, updon:Date);

biofamilyrelationship(id:long [PK], version:Integer, GeneratedName:BioData, GeneratedName:EducationLevel, GeneratedName:FamilyRelation, createdby:String, createdon:Date, updatedby:String, updon:Date, name:String, ofbirth:Date, gender:Integer, dependents:Integer, occupation:String);

maritalstatus(id:long [PK], version:Integer, name:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

approvalactivity(id:long [PK], version:Integer, GeneratedName:ApprovalDefinition, requestby:String, requesttime:Date, approvalstatus:Integer, approvaltime:Date, approvedby:String, approvalcommment:String, approvalcount:Integer, rejectcount:Integer, pendingdata:String, activitynumber:String, previousactivitynumber:String, sequence:Integer, notificationsend:Boolean, locale:String, createdtime:Date);

permitclassification(id:long [PK], version:Integer, GeneratedName:AttendanceStatus, code:String, name:String, status:Boolean, calculation:Integer, baseperiod:Integer, availibility:Integer, increased:Date, quantity:Integer, limitbyday:Integer, oneperemployee:Boolean, maxpermonth:Integer, salarycut:Double, attachmentrequired:Boolean, description:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

overtimedistribution(id:OverTimeDistributionId, GeneratedName:EmpData, GeneratedName:WtOverTime, description:String);

travelcomponent(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, code:String, name:String, description:String, measurement:Integer);

admonitiontype(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, code:String, name:String, description:String, longterm:Integer, suspend:Integer, salarycut:Double);

languageused(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, languagename:String, description:String);

approvaldefinitionot(id:ApprovalDefinitionOTId, GeneratedName:ApprovalDefinition, GeneratedName:WtOverTime, description:String);

termination(id:Long [PK], version:Integer, code:String, GeneratedName:EmpData, effective:Date, GeneratedName:TerminationType, description:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

approvaldefinitionleave(id:ApprovalDefinitionLeaveId, GeneratedName:Leave, GeneratedName:ApprovalDefinition, description:String);

bioidcard(id:long [PK], version:Integer, GeneratedName:BioData, GeneratedName:City, createdby:String, createdon:Date, updatedby:String, updon:Date, type:String, cardnumber:String, valid:Date, issued:Date);

bioaddress(id:long [PK], version:Integer, GeneratedName:BioData, statusaddress:Integer, type:Integer, phonenumber:String, addressdetail:String, GeneratedName:City, subdistrict:String, village:String, notes:String, latitude:String, longitude:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

taxcomponent(id:long [PK], version:Integer, createdby:String, createdon:Date, description:String, name:String, updatedby:String, updon:Date);

reimbursment(id:Long [PK], version:Integer, GeneratedName:ReimbursmentSchema, GeneratedName:EmpData, code:String, claim:Date, quantity:Integer, nominal:BigDecimal, approvalactivitynumber:String, reimbursmentdocument:byte, createdby:String, createdon:Date, updatedby:String, updon:Date);

employeetype(id:Long [PK], version:Integer, createdby:String, createdon:Date, name:String, updatedby:String, updon:Date);

loanschemaemployeetype(id:Long [PK], version:Integer, GeneratedName:LoanSchema, GeneratedName:EmployeeType, createdby:String, createdon:Date, updatedby:String, updon:Date);

bioemploymenthistory(id:long [PK], version:Integer, GeneratedName:BioData, GeneratedName:City, createdby:String, createdon:Date, updatedby:String, updon:Date, yearin:Integer, yearout:Integer, companyname:String, lastoccupation:String, salary:Double, jobsector:String);

occupationtype(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, occupationtypename:String, description:String);

tempjadwalkaryawan(id:long [PK], version:Integer, //attendancestatusattendancestatus:EmpData, GeneratedName:WtWorkingHour, tanggalwaktukerja:Date, iscollectiveleave:Boolean, createdby:String, createdon:Date, updatedby:String, updon:Date);

race(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, racecode:String, racename:String, description:String);

wtscheduleshift(id:long [PK], version:Integer, GeneratedName:WtGroupWorking, GeneratedName:WtWorkingHour, schedule:Date, createdby:String, createdon:Date, updatedby:String, updon:Date);

department(id:long [PK], version:Integer, departmentcode:String, departmentname:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

travelzone(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, code:String, name:String, description:String, category:Integer, distance:Double);

specificationability(id:Long [PK], version:Integer, name:String, optionability:String, scalevalue:String, createdby:String, updatedby:String, createdon:Date, updon:Date);

jabatandeskripsi(id:long [PK], version:Integer, GeneratedName:Jabatan, kategorytugas:Integer, typewaktu:Integer, description:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

wtgroupworking(id:long [PK], version:Integer, code:String, name:String, begintime:Date, endtime:Date, isperiodic:Boolean, workingtimeperday:Double, workingtimeperweek:Double, overtimebasedonattendance:Boolean, overtimebasedonrequest:Boolean, createdby:String, createdon:Date, updatedby:String, updon:Date, isactive:Boolean, typesequeace:Integer);

dialect(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, dialectcode:String, dialectname:String, description:String);

golonganjabatan(id:long [PK], version:Integer, GeneratedName:Pangkat, code:String, overtime:Boolean, createdby:String, createdon:Date, updatedby:String, updon:Date);

jabatanprofesi(id:JabatanProfesiId, GeneratedName:Jabatan, GeneratedName:OccupationType, description:String);

neracacuti(id:long [PK], version:Integer, GeneratedName:LeaveDistribution, debet:Double, kredit:Double, createdon:Date, createdby:String, updon:Date, updatedby:String);

klasifikasikerjajabatan(id:KlasifikasiKerjaJabatanId, GeneratedName:KlasifikasiKerja, GeneratedName:Jabatan, description:String);

jabatan(id:long [PK], version:Integer, GeneratedName:Jabatan, GeneratedName:CostCenter, GeneratedName:GolonganJabatan, GeneratedName:Department, GeneratedName:PaySalaryGrade, GeneratedName:UnitKerja, code:String, name:String, tujuanjabatan:String, createdby:String, createdon:Date, updatedby:String, updon:Date, leveljabatan:Integer);

jabatanfakulty(id:JabatanFakultyId, GeneratedName:Faculty, GeneratedName:Jabatan, description:String);

wtholiday(id:long [PK], version:Integer, GeneratedName:Religion, holidayname:String, holiday:Date, iseveryyear:Integer, iscolectiveleave:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date);

personaldiscipline(id:Long [PK], version:Integer, GeneratedName:EmpData, GeneratedName:AdmonitionType, expired:Date, start:Date, description:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

approvaldefinition(id:Long [PK], version:Integer, byonbehalfindividual:HrmUser, byapproverposition:Jabatan, byapproverindividual:HrmUser, byonbehalfposition:Jabatan, name:String, sequence:Integer, minapprover:Integer, minrejector:Integer, processtype:String, approvertype:String, allowonbehalf:Boolean, onbehalftype:String, createdby:String, createdon:Date, updatedby:String, updon:Date, autoapproveondelay:Boolean, escalateondelay:Boolean, delaytime:Integer, specificname:String, isnolongerinuse:Boolean, smsnotification:Boolean);

nationality(id:long [PK], version:Integer, createdby:String, createdon:Date, updatedby:String, updon:Date, nationalitycode:String, nationalityname:String, description:String);

modelcomponent(id:long [PK], version:Integer, GeneratedName:BenefitGroup, createdby:String, createdon:Date, description:String, code:String, name:String, updatedby:String, updon:Date, spesific:Integer);

loanschema(id:Long [PK], version:Integer, code:String, name:String, GeneratedName:CostCenter, typeofinterest:Integer, maxperiode:Integer, basicvalue:Integer, maxnominal:BigDecimal, minpayment:BigDecimal, maxpaymentofsalary:Double, penaltyofnoncomplance:Double, interestrate:Double, createdby:String, createdon:Date, updatedby:String, updon:Date);

leavescheme(id:Long [PK], version:Integer, code:String, name:String, description:String, totaldays:Integer, GeneratedName:Leave, createdby:String, createdon:Date, updatedby:String, updon:Date);

hrmmenu(id:long [PK], version:Integer, GeneratedName:HrmMenu, name:String, urlname:String, iconname:String, menulevel:Integer, menustyle:String, menustyleclass:String, createdby:String, createdon:Date, updatedby:String, upatedon:Date);

leave(id:Long [PK], version:Integer, code:String, name:String, description:String, daytype:String, calculation:String, GeneratedName:AttendanceStatus, periodbase:String, availability:String, availabilityatspecific:Date, istakingleavetonextyear:Boolean, maxtakingleavetonextyear:Integer, backwardperiodlimit:Integer, isallowedminus:Boolean, maxallowedminus:Integer, effectivefrom:Integer, submittedlimit:Integer, isquotareduction:Boolean, endofperiod:String, endofperiodmonth:Integer, quotaperperiod:Integer, isonlyonceperemployee:Boolean, isactive:Boolean, createdby:String, createdon:Date, updatedby:String, updon:Date);

loginhistory(id:long [PK], GeneratedName:HrmUser, login:Date, logout:Date, ipaddress:String, languange:String);

pangkat(id:long [PK], version:Integer, pangkatcode:String, pangkatname:String, //integerlevelcreatedby:String, createdon:Date, updatedby:String, updon:Date);

loanpaymentdetail(id:Long [PK], version:Integer, GeneratedName:Loan, payment:Date, due:Date, principal:Double, interest:Double, totalpayment:Double, penalty:Double, remainingprincipal:Double, createdby:String, createdon:Date, updatedby:String, updon:Date);

biospesifikasiability(id:long [PK], version:Integer, GeneratedName:BioData, GeneratedName:SpecificationAbility, score:String, optionability:String, createdby:String, createdon:Date, updatedby:String, updon:Date);

bioproject(id:long [PK], version:Integer, GeneratedName:BioData, createdby:String, createdon:Date, updatedby:String, updon:Date, start:Date, end:Date, code:String, name:String, description:String, position:String, companyname:String);

hrmrole(id:long [PK], version:Integer, rolename:String, description:String, createdby:String, updatedby:String, createdon:Date, updon:Date);


** PROGRAM TYPE: JPA+Hibernate(Hybrid)