ClassDiagram.Class>> InstructorDetail =>=>=> RelationalSchema.Table>> instructordetail;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Instructor =>=>=> RelationalSchema.Table>> instructor;
ClassDiagram.Attribut>> InstructorDetail.//annotatetheclassasanentityandmaptodbtable//definethefields//annotatethefieldswithdbcolumnnames//createconstructors//generategetter/settermethods//generatetostring()methodid:int =>=>=> RelationalSchema.Column>> instructordetail.//annotatetheclassasanentityandmaptodbtable//definethefields//annotatethefieldswithdbcolumnnames//createconstructors//generategetter/settermethods//generatetostring()methodid PRIMARY KEY;
ClassDiagram.Attribut>> InstructorDetail.youtubechannel:String =>=>=> RelationalSchema.Column>> instructordetail.youtubechannel;
ClassDiagram.Attribut>> InstructorDetail.hobby:String =>=>=> RelationalSchema.Column>> instructordetail.hobby;
ClassDiagram.Attribut>> Course.//defineourfields//defineconstructors//definegettersetters//definetostring//annotatefieldsid:int =>=>=> RelationalSchema.Column>> course.//defineourfields//defineconstructors//definegettersetters//definetostring//annotatefieldsid PRIMARY KEY;
ClassDiagram.Attribut>> Course.title:String =>=>=> RelationalSchema.Column>> course.title;
ClassDiagram.Attribut>> Student.id:int =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.firstname:String =>=>=> RelationalSchema.Column>> student.firstname;
ClassDiagram.Attribut>> Student.lastname:String =>=>=> RelationalSchema.Column>> student.lastname;
ClassDiagram.Attribut>> Student.email:String =>=>=> RelationalSchema.Column>> student.email;
ClassDiagram.Attribut>> Instructor.//annotatetheclassasanentityandmaptodbtable//definethefields//annotatethefieldswithdbcolumnnames//setupmappingtoinstructordetailentity//createconstructors//generategetter/settermethods//generatetostring()methodid:int =>=>=> RelationalSchema.Column>> instructor.//annotatetheclassasanentityandmaptodbtable//definethefields//annotatethefieldswithdbcolumnnames//setupmappingtoinstructordetailentity//createconstructors//generategetter/settermethods//generatetostring()methodid PRIMARY KEY;
ClassDiagram.Attribut>> Instructor.firstname:String =>=>=> RelationalSchema.Column>> instructor.firstname;
ClassDiagram.Attribut>> Instructor.lastname:String =>=>=> RelationalSchema.Column>> instructor.lastname;
ClassDiagram.Attribut>> Instructor.email:String =>=>=> RelationalSchema.Column>> instructor.email;
One-To-One relationship between ClassDiagram.Class>>InstructorDetail  to ClassDiagram.Class>>instructor represented by ClassDiagram.Atrribute>>//addnewfieldfor(alsoaddgetter/setters)//add@onetooneannotation;
Many-To-One relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>instructor represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Instructor  to ClassDiagram.Class>>InstructorDetail represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Instructor  to ClassDiagram.Class>>List<Course>;
