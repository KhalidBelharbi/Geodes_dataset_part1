ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Notice =>=>=> RelationalSchema.Table>> notice;
ClassDiagram.Class>> Pkage_Product =>=>=> RelationalSchema.Table>> pkage_product;
ClassDiagram.Class>> Score =>=>=> RelationalSchema.Table>> score;
ClassDiagram.Class>> Pkage =>=>=> RelationalSchema.Table>> pkage;
ClassDiagram.Class>> Send =>=>=> RelationalSchema.Table>> send;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> SysPermission =>=>=> RelationalSchema.Table>> syspermission;
ClassDiagram.Class>> Article =>=>=> RelationalSchema.Table>> article;
ClassDiagram.Class>> Master =>=>=> RelationalSchema.Table>> master;
ClassDiagram.Class>> StockHistory =>=>=> RelationalSchema.Table>> stockhistory;
ClassDiagram.Class>> SysUser =>=>=> RelationalSchema.Table>> sysuser;
ClassDiagram.Class>> FarmAction =>=>=> RelationalSchema.Table>> farmaction;
ClassDiagram.Class>> Farm =>=>=> RelationalSchema.Table>> farm;
ClassDiagram.Class>> Stock =>=>=> RelationalSchema.Table>> stock;
ClassDiagram.Class>> SysRole =>=>=> RelationalSchema.Table>> sysrole;
ClassDiagram.Attribut>> Address.serialversionuid:long =>=>=> RelationalSchema.Column>> address.serialversionuid;
ClassDiagram.Attribut>> Address.id:Long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.userid:Long =>=>=> RelationalSchema.Column>> address.userid;
ClassDiagram.Attribut>> Address.address:String =>=>=> RelationalSchema.Column>> address.address;
ClassDiagram.Attribut>> Notice.serialversionuid:long =>=>=> RelationalSchema.Column>> notice.serialversionuid;
ClassDiagram.Attribut>> Notice.id:Long =>=>=> RelationalSchema.Column>> notice.id PRIMARY KEY;
ClassDiagram.Attribut>> Notice.title:String =>=>=> RelationalSchema.Column>> notice.title;
ClassDiagram.Attribut>> Notice.detail:String =>=>=> RelationalSchema.Column>> notice.detail;
ClassDiagram.Attribut>> Notice.//公告是否有效的标识status:boolean =>=>=> RelationalSchema.Column>> notice.//公告是否有效的标识status;
ClassDiagram.Attribut>> Notice.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> notice.//创建时间createtime;
ClassDiagram.Attribut>> Notice.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> notice.//更新时间uptime;
ClassDiagram.Attribut>> Pkage_Product.serialversionuid:long =>=>=> RelationalSchema.Column>> pkage_product.serialversionuid;
ClassDiagram.Attribut>> Pkage_Product.id:Long =>=>=> RelationalSchema.Column>> pkage_product.id PRIMARY KEY;
ClassDiagram.Attribut>> Pkage_Product.//pkageid//productidprice_cost:Long =>=>=> RelationalSchema.Column>> pkage_product.//pkageid//productidprice_cost;
ClassDiagram.Attribut>> Pkage_Product.//套餐内某产品保底产量--应当以产品保底产量作为单位进行换算min:long =>=>=> RelationalSchema.Column>> pkage_product.//套餐内某产品保底产量--应当以产品保底产量作为单位进行换算min;
ClassDiagram.Attribut>> Pkage_Product.//套餐内某产品最大产量--应当以产品最大产量作为单位进行换算max:long =>=>=> RelationalSchema.Column>> pkage_product.//套餐内某产品最大产量--应当以产品最大产量作为单位进行换算max;
ClassDiagram.Attribut>> Pkage_Product.//套餐内某产品真实产量字段关联农田的各种属性进行计算得出(max-min)*(a+b+c+d)/400//@transient//realpkageid:Long =>=>=> RelationalSchema.Column>> pkage_product.//套餐内某产品真实产量字段关联农田的各种属性进行计算得出(max-min)*(a+b+c+d)/400//@transient//realpkageid;
ClassDiagram.Attribut>> Score.serialversionuid:long =>=>=> RelationalSchema.Column>> score.serialversionuid;
ClassDiagram.Attribut>> Score.id:Long =>=>=> RelationalSchema.Column>> score.id PRIMARY KEY;
ClassDiagram.Attribut>> Score.name:String =>=>=> RelationalSchema.Column>> score.name;
ClassDiagram.Attribut>> Score.note:String =>=>=> RelationalSchema.Column>> score.note;
ClassDiagram.Attribut>> Score.score:Long =>=>=> RelationalSchema.Column>> score.score;
ClassDiagram.Attribut>> Score.userid:Long =>=>=> RelationalSchema.Column>> score.userid;
ClassDiagram.Attribut>> Score.//忽略username映射username:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Score.parm:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Score.dateformater:SimpleDateFormat =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Score.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> score.//创建时间createtime;
ClassDiagram.Attribut>> Score.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> score.//更新时间uptime;
ClassDiagram.Attribut>> Score.createday:Long =>=>=> RelationalSchema.Column>> score.createday;
ClassDiagram.Attribut>> Pkage.serialversionuid:long =>=>=> RelationalSchema.Column>> pkage.serialversionuid;
ClassDiagram.Attribut>> Pkage.id:Long =>=>=> RelationalSchema.Column>> pkage.id PRIMARY KEY;
ClassDiagram.Attribut>> Pkage.name:String =>=>=> RelationalSchema.Column>> pkage.name;
ClassDiagram.Attribut>> Pkage.price:long =>=>=> RelationalSchema.Column>> pkage.price;
ClassDiagram.Attribut>> Pkage.//积分,根据套餐内容计算合理成本价格，进行设置score:long =>=>=> RelationalSchema.Column>> pkage.//积分,根据套餐内容计算合理成本价格，进行设置score;
ClassDiagram.Attribut>> Pkage.//周期-单位天cycleday:long =>=>=> RelationalSchema.Column>> pkage.//周期-单位天cycleday;
ClassDiagram.Attribut>> Pkage.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> pkage.//创建时间createtime;
ClassDiagram.Attribut>> Pkage.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> pkage.//更新时间uptime;
ClassDiagram.Attribut>> Send.serialversionuid:long =>=>=> RelationalSchema.Column>> send.serialversionuid;
ClassDiagram.Attribut>> Send.id:Long =>=>=> RelationalSchema.Column>> send.id PRIMARY KEY;
ClassDiagram.Attribut>> Send.userid:Long =>=>=> RelationalSchema.Column>> send.userid;
ClassDiagram.Attribut>> Send.address:String =>=>=> RelationalSchema.Column>> send.address;
ClassDiagram.Attribut>> Send.stock:Long =>=>=> RelationalSchema.Column>> send.stock;
ClassDiagram.Attribut>> Send.productid:Long =>=>=> RelationalSchema.Column>> send.productid;
ClassDiagram.Attribut>> Send.productname:String =>=>=> RelationalSchema.Column>> send.productname;
ClassDiagram.Attribut>> Send.producttype:String =>=>=> RelationalSchema.Column>> send.producttype;
ClassDiagram.Attribut>> Send.//配送明细detail:String =>=>=> RelationalSchema.Column>> send.//配送明细detail;
ClassDiagram.Attribut>> Send.//配送状态state:SendState =>=>=> RelationalSchema.Column>> send.//配送状态state;
ClassDiagram.Attribut>> Send.//忽略username映射username:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Send.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> send.//创建时间createtime;
ClassDiagram.Attribut>> Send.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> send.//更新时间uptime;
ClassDiagram.Attribut>> Product.serialversionuid:long =>=>=> RelationalSchema.Column>> product.serialversionuid;
ClassDiagram.Attribut>> Product.id:Long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.//品种--津优35type:String =>=>=> RelationalSchema.Column>> product.//品种--津优35type;
ClassDiagram.Attribut>> Product.//种植标准standard:String =>=>=> RelationalSchema.Column>> product.//种植标准standard;
ClassDiagram.Attribut>> Product.note:String =>=>=> RelationalSchema.Column>> product.note;
ClassDiagram.Attribut>> Product.price:long =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Product.//积分换购每kg消耗积分score:long =>=>=> RelationalSchema.Column>> product.//积分换购每kg消耗积分score;
ClassDiagram.Attribut>> Product.//单位保底产量kgmin:long =>=>=> RelationalSchema.Column>> product.//单位保底产量kgmin;
ClassDiagram.Attribut>> Product.//单位最大产量kgmax:long =>=>=> RelationalSchema.Column>> product.//单位最大产量kgmax;
ClassDiagram.Attribut>> Product.////实际产量虚拟列//@transient//longreal//产品图片url:String =>=>=> RelationalSchema.Column>> product.////实际产量虚拟列//@transient//longreal//产品图片url;
ClassDiagram.Attribut>> Product.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> product.//创建时间createtime;
ClassDiagram.Attribut>> Product.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> product.//更新时间uptime;
ClassDiagram.Attribut>> SysPermission.serialversionuid:long =>=>=> RelationalSchema.Column>> syspermission.serialversionuid;
ClassDiagram.Attribut>> SysPermission.//主键.id:long =>=>=> RelationalSchema.Column>> syspermission.//主键.id PRIMARY KEY;
ClassDiagram.Attribut>> SysPermission.//名称.name:String =>=>=> RelationalSchema.Column>> syspermission.//名称.name;
ClassDiagram.Attribut>> SysPermission.resourcetype:String =>=>=> RelationalSchema.Column>> syspermission.resourcetype;
ClassDiagram.Attribut>> SysPermission.//资源路径.url:String =>=>=> RelationalSchema.Column>> syspermission.//资源路径.url;
ClassDiagram.Attribut>> SysPermission.//权限字符串,menu例子：role:*，button例子：role:create,role:update,role:delete,role:viewpermission:String =>=>=> RelationalSchema.Column>> syspermission.//权限字符串,menu例子：role:*，button例子：role:create,role:update,role:delete,role:viewpermission;
ClassDiagram.Attribut>> SysPermission.//父编号parentid:Long =>=>=> RelationalSchema.Column>> syspermission.//父编号parentid;
ClassDiagram.Attribut>> SysPermission.//父编号列表parentids:String =>=>=> RelationalSchema.Column>> syspermission.//父编号列表parentids;
ClassDiagram.Attribut>> SysPermission.available:Boolean =>=>=> RelationalSchema.Column>> syspermission.available;
ClassDiagram.Attribut>> SysPermission.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> syspermission.//创建时间createtime;
ClassDiagram.Attribut>> SysPermission.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> syspermission.//更新时间uptime;
ClassDiagram.Attribut>> Article.serialversionuid:long =>=>=> RelationalSchema.Column>> article.serialversionuid;
ClassDiagram.Attribut>> Article.id:Long =>=>=> RelationalSchema.Column>> article.id PRIMARY KEY;
ClassDiagram.Attribut>> Article.//1:云公益2：云创空间type:int =>=>=> RelationalSchema.Column>> article.//1:云公益2：云创空间type;
ClassDiagram.Attribut>> Article.author:String =>=>=> RelationalSchema.Column>> article.author;
ClassDiagram.Attribut>> Article.title:String =>=>=> RelationalSchema.Column>> article.title;
ClassDiagram.Attribut>> Article.detail:String =>=>=> RelationalSchema.Column>> article.detail;
ClassDiagram.Attribut>> Article.//浏览次数browser:long =>=>=> RelationalSchema.Column>> article.//浏览次数browser;
ClassDiagram.Attribut>> Article.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> article.//创建时间createtime;
ClassDiagram.Attribut>> Article.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> article.//更新时间uptime;
ClassDiagram.Attribut>> Master.serialversionuid:long =>=>=> RelationalSchema.Column>> master.serialversionuid;
ClassDiagram.Attribut>> Master.mtype:String =>=>=> RelationalSchema.Column>> master.mtype PRIMARY KEY;
ClassDiagram.Attribut>> Master.mkey:String =>=>=> RelationalSchema.Column>> master.mkey PRIMARY KEY;
ClassDiagram.Attribut>> Master.value:String =>=>=> RelationalSchema.Column>> master.value;
ClassDiagram.Attribut>> Master.morder:int =>=>=> RelationalSchema.Column>> master.morder;
ClassDiagram.Attribut>> StockHistory.serialversionuid:long =>=>=> RelationalSchema.Column>> stockhistory.serialversionuid;
ClassDiagram.Attribut>> StockHistory.id:Long =>=>=> RelationalSchema.Column>> stockhistory.id PRIMARY KEY;
ClassDiagram.Attribut>> StockHistory.//@embeddedid//stockpkid//@idproductid:Long =>=>=> RelationalSchema.Column>> stockhistory.//@embeddedid//stockpkid//@idproductid;
ClassDiagram.Attribut>> StockHistory.//@iduserid:Long =>=>=> RelationalSchema.Column>> stockhistory.//@iduserid;
ClassDiagram.Attribut>> StockHistory.stock:Long =>=>=> RelationalSchema.Column>> stockhistory.stock;
ClassDiagram.Attribut>> StockHistory.opertype:String =>=>=> RelationalSchema.Column>> stockhistory.opertype;
ClassDiagram.Attribut>> StockHistory.note:String =>=>=> RelationalSchema.Column>> stockhistory.note;
ClassDiagram.Attribut>> StockHistory.productname:String =>=>=> RelationalSchema.Column>> stockhistory.productname;
ClassDiagram.Attribut>> StockHistory.producttype:String =>=>=> RelationalSchema.Column>> stockhistory.producttype;
ClassDiagram.Attribut>> StockHistory.//忽略username映射username:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> StockHistory.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> stockhistory.//创建时间createtime;
ClassDiagram.Attribut>> StockHistory.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> stockhistory.//更新时间uptime;
ClassDiagram.Attribut>> SysUser.serialversionuid:long =>=>=> RelationalSchema.Column>> sysuser.serialversionuid;
ClassDiagram.Attribut>> SysUser.//用户iduid:Long =>=>=> RelationalSchema.Column>> sysuser.//用户iduid PRIMARY KEY;
ClassDiagram.Attribut>> SysUser.//账号.username:String =>=>=> RelationalSchema.Column>> sysuser.//账号.username;
ClassDiagram.Attribut>> SysUser.//名称（昵称或者真实姓名，不同系统不同定义）name:String =>=>=> RelationalSchema.Column>> sysuser.//名称（昵称或者真实姓名，不同系统不同定义）name;
ClassDiagram.Attribut>> SysUser.email:String =>=>=> RelationalSchema.Column>> sysuser.email;
ClassDiagram.Attribut>> SysUser.//忽略password序列化//@jsonignore//密码password:String =>=>=> RelationalSchema.Column>> sysuser.//忽略password序列化//@jsonignore//密码password;
ClassDiagram.Attribut>> SysUser.//密码password2:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> SysUser.//加密密码的盐salt:String =>=>=> RelationalSchema.Column>> sysuser.//加密密码的盐salt;
ClassDiagram.Attribut>> SysUser.//用户状态,0:创建未认证（比如没有激活，没有输入验证码等等）--等待验证的用户,1:正常状态,2：用户被锁定.state:byte =>=>=> RelationalSchema.Column>> sysuser.//用户状态,0:创建未认证（比如没有激活，没有输入验证码等等）--等待验证的用户,1:正常状态,2：用户被锁定.state;
ClassDiagram.Attribut>> SysUser.//是否有活动的农田activefarm:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> SysUser.farmlist:List<Farm> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> SysUser.//用户idscores:long =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> SysUser.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> sysuser.//创建时间createtime;
ClassDiagram.Attribut>> SysUser.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> sysuser.//更新时间uptime;
ClassDiagram.Attribut>> FarmAction.serialversionuid:long =>=>=> RelationalSchema.Column>> farmaction.serialversionuid;
ClassDiagram.Attribut>> FarmAction.id:Long =>=>=> RelationalSchema.Column>> farmaction.id PRIMARY KEY;
ClassDiagram.Attribut>> FarmAction.farmid:Long =>=>=> RelationalSchema.Column>> farmaction.farmid;
ClassDiagram.Attribut>> FarmAction.//landwaterfeedbugaction:String =>=>=> RelationalSchema.Column>> farmaction.//landwaterfeedbugaction;
ClassDiagram.Attribut>> FarmAction.dateformater:SimpleDateFormat =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FarmAction.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> farmaction.//创建时间createtime;
ClassDiagram.Attribut>> FarmAction.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> farmaction.//更新时间uptime;
ClassDiagram.Attribut>> FarmAction.createday:Long =>=>=> RelationalSchema.Column>> farmaction.createday;
ClassDiagram.Attribut>> Farm.serialversionuid:long =>=>=> RelationalSchema.Column>> farm.serialversionuid;
ClassDiagram.Attribut>> Farm.id:Long =>=>=> RelationalSchema.Column>> farm.id PRIMARY KEY;
ClassDiagram.Attribut>> Farm.name:String =>=>=> RelationalSchema.Column>> farm.name;
ClassDiagram.Attribut>> Farm.pkageid:Long =>=>=> RelationalSchema.Column>> farm.pkageid;
ClassDiagram.Attribut>> Farm.reallist:List<Long> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Farm.userid:Long =>=>=> RelationalSchema.Column>> farm.userid;
ClassDiagram.Attribut>> Farm.//忽略username映射username:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Farm.shirundu:long =>=>=> RelationalSchema.Column>> farm.shirundu;
ClassDiagram.Attribut>> Farm.feiwodu:long =>=>=> RelationalSchema.Column>> farm.feiwodu;
ClassDiagram.Attribut>> Farm.haichongdu:long =>=>=> RelationalSchema.Column>> farm.haichongdu;
ClassDiagram.Attribut>> Farm.zacaodu:long =>=>=> RelationalSchema.Column>> farm.zacaodu;
ClassDiagram.Attribut>> Farm.state:FarmState =>=>=> RelationalSchema.Column>> farm.state;
ClassDiagram.Attribut>> Farm.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> farm.//创建时间createtime;
ClassDiagram.Attribut>> Farm.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> farm.//更新时间uptime;
ClassDiagram.Attribut>> Farm.//农田状态-翻译state_cn:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Stock.serialversionuid:long =>=>=> RelationalSchema.Column>> stock.serialversionuid;
ClassDiagram.Attribut>> Stock.////@generatedvalue//id//@embeddedid//stockpkidproductid:Long =>=>=> RelationalSchema.Column>> stock.////@generatedvalue//id//@embeddedid//stockpkidproductid PRIMARY KEY;
ClassDiagram.Attribut>> Stock.userid:Long =>=>=> RelationalSchema.Column>> stock.userid PRIMARY KEY;
ClassDiagram.Attribut>> Stock.stock:Long =>=>=> RelationalSchema.Column>> stock.stock;
ClassDiagram.Attribut>> Stock.name:String =>=>=> RelationalSchema.Column>> stock.name;
ClassDiagram.Attribut>> Stock.type:String =>=>=> RelationalSchema.Column>> stock.type;
ClassDiagram.Attribut>> Stock.//忽略username映射username:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Stock.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> stock.//创建时间createtime;
ClassDiagram.Attribut>> Stock.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> stock.//更新时间uptime;
ClassDiagram.Attribut>> SysRole.serialversionuid:long =>=>=> RelationalSchema.Column>> sysrole.serialversionuid;
ClassDiagram.Attribut>> SysRole.//编号id:Long =>=>=> RelationalSchema.Column>> sysrole.//编号id PRIMARY KEY;
ClassDiagram.Attribut>> SysRole.//角色标识程序中判断使用,如"admin",这个是唯一的:role:String =>=>=> RelationalSchema.Column>> sysrole.//角色标识程序中判断使用,如"admin",这个是唯一的:role;
ClassDiagram.Attribut>> SysRole.//角色描述,ui界面显示使用description:String =>=>=> RelationalSchema.Column>> sysrole.//角色描述,ui界面显示使用description;
ClassDiagram.Attribut>> SysRole.//是否可用,如果不可用将不会添加给用户available:Boolean =>=>=> RelationalSchema.Column>> sysrole.//是否可用,如果不可用将不会添加给用户available;
ClassDiagram.Attribut>> SysRole.//创建时间createtime:Date =>=>=> RelationalSchema.Column>> sysrole.//创建时间createtime;
ClassDiagram.Attribut>> SysRole.//更新时间uptime:Date =>=>=> RelationalSchema.Column>> sysrole.//更新时间uptime;
Many-To-One relationship from ClassDiagram.Class>>Pkage_Product  to ClassDiagram.Class>>pkage represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Pkage_Product  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Score  to ClassDiagram.Class>>sysuser represented by ClassDiagram.Atrribute>>user;
One-To-Many relationship from ClassDiagram.Class>>Pkage  to ClassDiagram.Class>>List<Pkage_Product>;
Many-To-One relationship from ClassDiagram.Class>>Send  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Send  to ClassDiagram.Class>>sysuser represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>StockHistory  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>StockHistory  to ClassDiagram.Class>>sysuser represented by ClassDiagram.Atrribute>>user;
One-To-Many relationship from ClassDiagram.Class>>SysUser  to ClassDiagram.Class>>List<Score>;
Many-To-Many relationship between ClassDiagram.Class>>SysUser  and ClassDiagram.Class>>list<sysrole>: sys_user_role(uid:SysUser [PK] #FK to SysUser,roleid:list<sysrole> [PK] #FK to list<sysrole>);
Many-To-One relationship from ClassDiagram.Class>>FarmAction  to ClassDiagram.Class>>farm represented by ClassDiagram.Atrribute>>//@jsonignore;
Many-To-One relationship from ClassDiagram.Class>>Farm  to ClassDiagram.Class>>pkage represented by ClassDiagram.Atrribute>>//@jsonignore;
Many-To-One relationship from ClassDiagram.Class>>Farm  to ClassDiagram.Class>>sysuser represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>Stock  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Stock  to ClassDiagram.Class>>sysuser represented by ClassDiagram.Atrribute>>user;
One-To-Many relationship from ClassDiagram.Class>>SysRole  to ClassDiagram.Class>>List<SysPermission>;
