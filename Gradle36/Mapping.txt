ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> SequencedAddress =>=>=> RelationalSchema.Table>> sequencedaddress;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Attribut>> Person.id:long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> SequencedAddress.id:long =>=>=> RelationalSchema.Column>> sequencedaddress.id PRIMARY KEY;
ClassDiagram.Attribut>> SequencedAddress.street:String =>=>=> RelationalSchema.Column>> sequencedaddress.street;
ClassDiagram.Attribut>> Customer.//nogetterexplicitlytotestfieldonlyreflectiveaccessid:Long =>=>=> RelationalSchema.Column>> customer.//nogetterexplicitlytotestfieldonlyreflectiveaccessid PRIMARY KEY;
ClassDiagram.Attribut>> Customer.GeneratedName:Address =>=>=> RelationalSchema.Column>> customer.GeneratedName;
ClassDiagram.Attribut>> Customer.GeneratedName:WorkAddress =>=>=> RelationalSchema.Column>> customer.GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>sequencedaddress represented by ClassDiagram.Atrribute>>address;
