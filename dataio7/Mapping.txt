ClassDiagram.Class>> JobEntity =>=>=> RelationalSchema.Table>> jobentity;
ClassDiagram.Class>> ItemEntity =>=>=> RelationalSchema.Table>> itementity;
ClassDiagram.Class>> NotificationEntity =>=>=> RelationalSchema.Table>> notificationentity;
ClassDiagram.Class>> DependencyTrackingEntity =>=>=> RelationalSchema.Table>> dependencytrackingentity;
ClassDiagram.Class>> FlowCacheEntity =>=>=> RelationalSchema.Table>> flowcacheentity;
ClassDiagram.Class>> ReorderedItemEntity =>=>=> RelationalSchema.Table>> reordereditementity;
ClassDiagram.Class>> SinkCacheEntity =>=>=> RelationalSchema.Table>> sinkcacheentity;
ClassDiagram.Class>> RerunEntity =>=>=> RelationalSchema.Table>> rerunentity;
ClassDiagram.Class>> JobQueueEntity =>=>=> RelationalSchema.Table>> jobqueueentity;
ClassDiagram.Class>> ChunkEntity =>=>=> RelationalSchema.Table>> chunkentity;
ClassDiagram.Attribut>> JobEntity./*beadvisedthatupdatingtheernalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*/id:int =>=>=> RelationalSchema.Column>> jobentity./*beadvisedthatupdatingtheernalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*/id PRIMARY KEY;
ClassDiagram.Attribut>> JobEntity.eoj:boolean =>=>=> RelationalSchema.Column>> jobentity.eoj;
ClassDiagram.Attribut>> JobEntity.fatalerror:boolean =>=>=> RelationalSchema.Column>> jobentity.fatalerror;
ClassDiagram.Attribut>> JobEntity.partnumber:int =>=>=> RelationalSchema.Column>> jobentity.partnumber;
ClassDiagram.Attribut>> JobEntity.numberofchunks:int =>=>=> RelationalSchema.Column>> jobentity.numberofchunks;
ClassDiagram.Attribut>> JobEntity.numberofitems:int =>=>=> RelationalSchema.Column>> jobentity.numberofitems;
ClassDiagram.Attribut>> JobEntity.priority:int =>=>=> RelationalSchema.Column>> jobentity.priority;
ClassDiagram.Attribut>> JobEntity.skipped:int =>=>=> RelationalSchema.Column>> jobentity.skipped;
ClassDiagram.Attribut>> JobEntity.//todo:4/4/17droptimeoflastmodificationdbtriggeranduse@prepersistand@preupdatecallbacksinstead(toavoidunnecessaryflush()andrefresh()calls)timeofcreation:Timestamp =>=>=> RelationalSchema.Column>> jobentity.//todo:4/4/17droptimeoflastmodificationdbtriggeranduse@prepersistand@preupdatecallbacksinstead(toavoidunnecessaryflush()andrefresh()calls)timeofcreation;
ClassDiagram.Attribut>> JobEntity.timeoflastmodification:Timestamp =>=>=> RelationalSchema.Column>> jobentity.timeoflastmodification;
ClassDiagram.Attribut>> JobEntity.timeofcompletion:Timestamp =>=>=> RelationalSchema.Column>> jobentity.timeofcompletion;
ClassDiagram.Attribut>> JobEntity.specification:JobSpecification =>=>=> RelationalSchema.Column>> jobentity.specification;
ClassDiagram.Attribut>> JobEntity.GeneratedName:State =>=>=> RelationalSchema.Column>> jobentity.GeneratedName;
ClassDiagram.Attribut>> JobEntity.GeneratedName:FlowStoreReferences =>=>=> RelationalSchema.Column>> jobentity.GeneratedName;
ClassDiagram.Attribut>> JobEntity.GeneratedName:WorkflowNote =>=>=> RelationalSchema.Column>> jobentity.GeneratedName;
ClassDiagram.Attribut>> ItemEntity./*beadvisedthatupdatingtheinternalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*/:Key =>=>=> RelationalSchema.Column>> itementity./*beadvisedthatupdatingtheinternalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*/;
ClassDiagram.Attribut>> ItemEntity.//todo:4/4/17droptimeoflastmodificationdbtriggeranduse@prepersistand@preupdatecallbacksinstead(toavoidunnecessaryflush()andrefresh()calls)timeofcreation:Timestamp =>=>=> RelationalSchema.Column>> itementity.//todo:4/4/17droptimeoflastmodificationdbtriggeranduse@prepersistand@preupdatecallbacksinstead(toavoidunnecessaryflush()andrefresh()calls)timeofcreation;
ClassDiagram.Attribut>> ItemEntity.timeofcompletion:Timestamp =>=>=> RelationalSchema.Column>> itementity.timeofcompletion;
ClassDiagram.Attribut>> ItemEntity.timeoflastmodification:Timestamp =>=>=> RelationalSchema.Column>> itementity.timeoflastmodification;
ClassDiagram.Attribut>> ItemEntity.GeneratedName:State =>=>=> RelationalSchema.Column>> itementity.GeneratedName;
ClassDiagram.Attribut>> ItemEntity.partitioningoutcome:ChunkItem =>=>=> RelationalSchema.Column>> itementity.partitioningoutcome;
ClassDiagram.Attribut>> ItemEntity.processingoutcome:ChunkItem =>=>=> RelationalSchema.Column>> itementity.processingoutcome;
ClassDiagram.Attribut>> ItemEntity.nextprocessingoutcome:ChunkItem =>=>=> RelationalSchema.Column>> itementity.nextprocessingoutcome;
ClassDiagram.Attribut>> ItemEntity.deliveringoutcome:ChunkItem =>=>=> RelationalSchema.Column>> itementity.deliveringoutcome;
ClassDiagram.Attribut>> ItemEntity.GeneratedName:WorkflowNote =>=>=> RelationalSchema.Column>> itementity.GeneratedName;
ClassDiagram.Attribut>> ItemEntity.GeneratedName:RecordInfo =>=>=> RelationalSchema.Column>> itementity.GeneratedName;
ClassDiagram.Attribut>> ItemEntity.positionindatafile:Integer =>=>=> RelationalSchema.Column>> itementity.positionindatafile;
ClassDiagram.Attribut>> NotificationEntity.select_by_type:String =>=>=> RelationalSchema.Column>> notificationentity.select_by_type;
ClassDiagram.Attribut>> NotificationEntity.id:Integer =>=>=> RelationalSchema.Column>> notificationentity.id PRIMARY KEY;
ClassDiagram.Attribut>> NotificationEntity.timeofcreation:Timestamp =>=>=> RelationalSchema.Column>> notificationentity.timeofcreation;
ClassDiagram.Attribut>> NotificationEntity.timeoflastmodification:Timestamp =>=>=> RelationalSchema.Column>> notificationentity.timeoflastmodification;
ClassDiagram.Attribut>> NotificationEntity.type:Notification.Type =>=>=> RelationalSchema.Column>> notificationentity.type;
ClassDiagram.Attribut>> NotificationEntity.status:Notification.Status =>=>=> RelationalSchema.Column>> notificationentity.status;
ClassDiagram.Attribut>> NotificationEntity.statusmessage:String =>=>=> RelationalSchema.Column>> notificationentity.statusmessage;
ClassDiagram.Attribut>> NotificationEntity.destination:String =>=>=> RelationalSchema.Column>> notificationentity.destination;
ClassDiagram.Attribut>> NotificationEntity.content:String =>=>=> RelationalSchema.Column>> notificationentity.content;
ClassDiagram.Attribut>> NotificationEntity.context:String =>=>=> RelationalSchema.Column>> notificationentity.context;
ClassDiagram.Attribut>> NotificationEntity.jobid:Integer =>=>=> RelationalSchema.Column>> notificationentity.jobid;
ClassDiagram.Attribut>> DependencyTrackingEntity.sinkid_status_count_result:String =>=>=> RelationalSchema.Column>> dependencytrackingentity.sinkid_status_count_result;
ClassDiagram.Attribut>> DependencyTrackingEntity.key_result:String =>=>=> RelationalSchema.Column>> dependencytrackingentity.key_result;
ClassDiagram.Attribut>> DependencyTrackingEntity.sinkid_status_count_query:String =>=>=> RelationalSchema.Column>> dependencytrackingentity.sinkid_status_count_query;
ClassDiagram.Attribut>> DependencyTrackingEntity.job_count_chunk_count_query:String =>=>=> RelationalSchema.Column>> dependencytrackingentity.job_count_chunk_count_query;
ClassDiagram.Attribut>> DependencyTrackingEntity.related_chunks_query:String =>=>=> RelationalSchema.Column>> dependencytrackingentity.related_chunks_query;
ClassDiagram.Attribut>> DependencyTrackingEntity.by_sinkid_and_state_query:String =>=>=> RelationalSchema.Column>> dependencytrackingentity.by_sinkid_and_state_query;
ClassDiagram.Attribut>> DependencyTrackingEntity.chunks_to_wait_for_query:String =>=>=> RelationalSchema.Column>> dependencytrackingentity.chunks_to_wait_for_query;
ClassDiagram.Attribut>> DependencyTrackingEntity.GeneratedName:Key =>=>=> RelationalSchema.Column>> dependencytrackingentity.GeneratedName;
ClassDiagram.Attribut>> DependencyTrackingEntity.sinkid:int =>=>=> RelationalSchema.Column>> dependencytrackingentity.sinkid;
ClassDiagram.Attribut>> DependencyTrackingEntity.status:ChunkSchedulingStatus =>=>=> RelationalSchema.Column>> dependencytrackingentity.status;
ClassDiagram.Attribut>> DependencyTrackingEntity.priority:int =>=>=> RelationalSchema.Column>> dependencytrackingentity.priority;
ClassDiagram.Attribut>> DependencyTrackingEntity.waitingon:Set<Key> =>=>=> RelationalSchema.Column>> dependencytrackingentity.waitingon;
ClassDiagram.Attribut>> DependencyTrackingEntity.matchkeys:Set<String> =>=>=> RelationalSchema.Column>> dependencytrackingentity.matchkeys;
ClassDiagram.Attribut>> DependencyTrackingEntity.hashes:Integer =>=>=> RelationalSchema.Column>> dependencytrackingentity.hashes;
ClassDiagram.Attribut>> DependencyTrackingEntity.submitter:int =>=>=> RelationalSchema.Column>> dependencytrackingentity.submitter;
ClassDiagram.Attribut>> FlowCacheEntity.named_query_set_cache:String =>=>=> RelationalSchema.Column>> flowcacheentity.named_query_set_cache;
ClassDiagram.Attribut>> FlowCacheEntity.id:int =>=>=> RelationalSchema.Column>> flowcacheentity.id PRIMARY KEY;
ClassDiagram.Attribut>> FlowCacheEntity.checksum:String =>=>=> RelationalSchema.Column>> flowcacheentity.checksum;
ClassDiagram.Attribut>> FlowCacheEntity.GeneratedName:Flow =>=>=> RelationalSchema.Column>> flowcacheentity.GeneratedName;
ClassDiagram.Attribut>> ReorderedItemEntity.get_items_count_by_jobid_query_name:String =>=>=> RelationalSchema.Column>> reordereditementity.get_items_count_by_jobid_query_name;
ClassDiagram.Attribut>> ReorderedItemEntity.get_items_count_by_jobid_query:String =>=>=> RelationalSchema.Column>> reordereditementity.get_items_count_by_jobid_query;
ClassDiagram.Attribut>> ReorderedItemEntity.get_next_item_by_jobid_query_name:String =>=>=> RelationalSchema.Column>> reordereditementity.get_next_item_by_jobid_query_name;
ClassDiagram.Attribut>> ReorderedItemEntity.get_next_item_by_jobid_query:String =>=>=> RelationalSchema.Column>> reordereditementity.get_next_item_by_jobid_query;
ClassDiagram.Attribut>> ReorderedItemEntity.query_get_parent:String =>=>=> RelationalSchema.Column>> reordereditementity.query_get_parent;
ClassDiagram.Attribut>> ReorderedItemEntity./*beadvisedthatupdatingtheernalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*///jpaentitiesneedtohaveaprimarykeyid:int =>=>=> RelationalSchema.Column>> reordereditementity./*beadvisedthatupdatingtheernalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*///jpaentitiesneedtohaveaprimarykeyid PRIMARY KEY;
ClassDiagram.Attribut>> ReorderedItemEntity.jobid:int =>=>=> RelationalSchema.Column>> reordereditementity.jobid;
ClassDiagram.Attribut>> ReorderedItemEntity.sortkey:int =>=>=> RelationalSchema.Column>> reordereditementity.sortkey;
ClassDiagram.Attribut>> ReorderedItemEntity.positionindatafile:int =>=>=> RelationalSchema.Column>> reordereditementity.positionindatafile;
ClassDiagram.Attribut>> ReorderedItemEntity.GeneratedName:ChunkItem =>=>=> RelationalSchema.Column>> reordereditementity.GeneratedName;
ClassDiagram.Attribut>> ReorderedItemEntity.recordinfo:MarcRecordInfo =>=>=> RelationalSchema.Column>> reordereditementity.recordinfo;
ClassDiagram.Attribut>> SinkCacheEntity.named_query_set_cache:String =>=>=> RelationalSchema.Column>> sinkcacheentity.named_query_set_cache;
ClassDiagram.Attribut>> SinkCacheEntity.id:int =>=>=> RelationalSchema.Column>> sinkcacheentity.id PRIMARY KEY;
ClassDiagram.Attribut>> SinkCacheEntity.checksum:String =>=>=> RelationalSchema.Column>> sinkcacheentity.checksum;
ClassDiagram.Attribut>> SinkCacheEntity.GeneratedName:Sink =>=>=> RelationalSchema.Column>> sinkcacheentity.GeneratedName;
ClassDiagram.Attribut>> RerunEntity.find_head_query_name:String =>=>=> RelationalSchema.Column>> rerunentity.find_head_query_name;
ClassDiagram.Attribut>> RerunEntity.find_by_state_query_name:String =>=>=> RelationalSchema.Column>> rerunentity.find_by_state_query_name;
ClassDiagram.Attribut>> RerunEntity.field_state:String =>=>=> RelationalSchema.Column>> rerunentity.field_state;
ClassDiagram.Attribut>> RerunEntity.id:int =>=>=> RelationalSchema.Column>> rerunentity.id PRIMARY KEY;
ClassDiagram.Attribut>> RerunEntity.GeneratedName:State =>=>=> RelationalSchema.Column>> rerunentity.GeneratedName;
ClassDiagram.Attribut>> RerunEntity.timeofcreation:Timestamp =>=>=> RelationalSchema.Column>> rerunentity.timeofcreation;
ClassDiagram.Attribut>> RerunEntity.includefailedonly:Boolean =>=>=> RelationalSchema.Column>> rerunentity.includefailedonly;
ClassDiagram.Attribut>> JobQueueEntity.nq_find_by_state:String =>=>=> RelationalSchema.Column>> jobqueueentity.nq_find_by_state;
ClassDiagram.Attribut>> JobQueueEntity.//thisisnativesqlbecausejpqldoesn'tsupportjsonoperators.//findsjobqueueentitieswithsubmitteridswhicharenotalreadyinjobsmarkedasinprogressnq_find_by_sink_and_available_submitter:String =>=>=> RelationalSchema.Column>> jobqueueentity.//thisisnativesqlbecausejpqldoesn'tsupportjsonoperators.//findsjobqueueentitieswithsubmitteridswhicharenotalreadyinjobsmarkedasinprogressnq_find_by_sink_and_available_submitter;
ClassDiagram.Attribut>> JobQueueEntity.field_sink_id:String =>=>=> RelationalSchema.Column>> jobqueueentity.field_sink_id;
ClassDiagram.Attribut>> JobQueueEntity.field_state:String =>=>=> RelationalSchema.Column>> jobqueueentity.field_state;
ClassDiagram.Attribut>> JobQueueEntity.id:int =>=>=> RelationalSchema.Column>> jobqueueentity.id PRIMARY KEY;
ClassDiagram.Attribut>> JobQueueEntity.timeofentry:Timestamp =>=>=> RelationalSchema.Column>> jobqueueentity.timeofentry;
ClassDiagram.Attribut>> JobQueueEntity.sinkid:long =>=>=> RelationalSchema.Column>> jobqueueentity.sinkid;
ClassDiagram.Attribut>> JobQueueEntity.GeneratedName:State =>=>=> RelationalSchema.Column>> jobqueueentity.GeneratedName;
ClassDiagram.Attribut>> JobQueueEntity.type:RecordSplitter =>=>=> RelationalSchema.Column>> jobqueueentity.type;
ClassDiagram.Attribut>> JobQueueEntity.retries:int =>=>=> RelationalSchema.Column>> jobqueueentity.retries;
ClassDiagram.Attribut>> JobQueueEntity.includefilter:byte =>=>=> RelationalSchema.Column>> jobqueueentity.includefilter;
ClassDiagram.Attribut>> ChunkEntity./*beadvisedthatupdatingtheinternalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*/:Key =>=>=> RelationalSchema.Column>> chunkentity./*beadvisedthatupdatingtheinternalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*/;
ClassDiagram.Attribut>> ChunkEntity.datafileid:String =>=>=> RelationalSchema.Column>> chunkentity.datafileid;
ClassDiagram.Attribut>> ChunkEntity.numberofitems:short =>=>=> RelationalSchema.Column>> chunkentity.numberofitems;
ClassDiagram.Attribut>> ChunkEntity.timeofcreation:Timestamp =>=>=> RelationalSchema.Column>> chunkentity.timeofcreation;
ClassDiagram.Attribut>> ChunkEntity.timeoflastmodification:Timestamp =>=>=> RelationalSchema.Column>> chunkentity.timeoflastmodification;
ClassDiagram.Attribut>> ChunkEntity.timeofcompletion:Timestamp =>=>=> RelationalSchema.Column>> chunkentity.timeofcompletion;
ClassDiagram.Attribut>> ChunkEntity.GeneratedName:SequenceAnalysisData =>=>=> RelationalSchema.Column>> chunkentity.GeneratedName;
ClassDiagram.Attribut>> ChunkEntity.GeneratedName:State =>=>=> RelationalSchema.Column>> chunkentity.GeneratedName;
One-To-One relationship between ClassDiagram.Class>>JobEntity  to ClassDiagram.Class>>flowcacheentity represented by ClassDiagram.Atrribute>>cachedflow;
One-To-One relationship between ClassDiagram.Class>>JobEntity  to ClassDiagram.Class>>sinkcacheentity represented by ClassDiagram.Atrribute>>cachedsink;
One-To-One relationship between ClassDiagram.Class>>NotificationEntity  to ClassDiagram.Class>>jobentity represented by ClassDiagram.Atrribute>>job;
Many-To-One relationship from ClassDiagram.Class>>RerunEntity  to ClassDiagram.Class>>jobentity represented by ClassDiagram.Atrribute>>job;
Many-To-One relationship from ClassDiagram.Class>>JobQueueEntity  to ClassDiagram.Class>>jobentity represented by ClassDiagram.Atrribute>>job;
