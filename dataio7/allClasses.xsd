<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="job-store" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstore" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="max_number_of_job_retries" type="xs:long" />
        <xs:element name="four_gibibyte" type="xs:long" />
        <xs:element name="/*theseinstancesarenotprivateotherwisetheywerenotaccessiblefromautomatictest*/" type="jobschedulerbean" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="jobstorerepository" type="pgjobstorerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobqueuerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobnotificationrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstorerepository" >
      <xs:complexContent>
       <xs:extension base="repositorybase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobschedulerbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="first_level_cache_clear_threshold" type="xs:long" />
        <xs:element name="requires_termination_chunk" type="xs:anyType" />
        <xs:element name="//maxjmssizeprsink--testsizesoverwrittenformax_number_of_chunks_in_delivering_queue_per_sink" type="xs:long" />
        <xs:element name="max_number_of_chunks_in_processing_queue_per_sink" type="xs:long" />
        <xs:element name="//ifnumberofchunksinjmsququetransition_to_direct_mark" type="xs:long" />
        <xs:element name="sinkstatusmap" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobschedulertransactionsbean" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="pgjobstorerepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dmqmessageconsumerbean" >
      <xs:complexContent>
       <xs:extension base="abstractmessageconsumerbean">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="jobstorebean" type="pgjobstore" nillable="true" minOccurs="0" />
          <xs:element name="" type="jobschedulerbean" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="partitioning" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="jobentity" nillable="true" minOccurs="0" />
        <xs:element name="failure" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobsbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="/*thisisnotprivatesoitisaccessiblefromautomatictest*/jobstore" type="pgjobstore" nillable="true" minOccurs="0" />
        <xs:element name="jobstorerepository" type="pgjobstorerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobnotificationrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobschedulerbean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobschedulersinkstatus" >
      <xs:sequence>
        <xs:element name="processingstatus" type="xs:anyType" />
        <xs:element name="deliveringstatus" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobschedulertransactionsbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="jobstorerepository" type="pgjobstorerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sinkmessageproducerbean" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobprocessormessageproducerbean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobqueuerepository" >
      <xs:complexContent>
       <xs:extension base="repositorybase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sinkmessageproducerbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="sinksqueue" type="xs:anyType" />
        <xs:element name="sinks" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="databasemigrator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="repositorybase" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobnotificationrepository" >
      <xs:complexContent>
       <xs:extension base="repositorybase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="max_number_of_notifications_per_result" type="xs:long" />
          <xs:element name="//todo:13-03-18movethesetonotificationentityclassasnamedqueriesselect_notifications_by_status_statement" type="xs:string" />
          <xs:element name="select_notifications_by_job_statement" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="mail" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobschedulerbulksubmitterbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobschedulerbean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobpurgebean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="pgjobstorerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobprocessormessageproducerbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="processorqueue" type="xs:anyType" />
        <xs:element name="processor" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rerunsrepository" >
      <xs:complexContent>
       <xs:extension base="repositorybase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobsexportsbean" >
      <xs:sequence>
        <xs:element name="jobstorerepository" type="pgjobstorerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstrapbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobqueuerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobschedulerbean" nillable="true" minOccurs="0" />
        <xs:element name="jobstore" type="pgjobstore" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="rerunsrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobrerunnerbean" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="jumpstart" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobrerunnerbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="rerunsrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="pgjobstore" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobschedulerrestbean" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rerunsbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="jobrerunnerbean" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scheduledjobpurgebean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="jobpurgebean" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scheduledjobnotifierbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobnotificationrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notificationsbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobnotificationrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobstoreapplication" >
      <xs:complexContent>
       <xs:extension base="application">
         <xs:sequence>
          <xs:element name="classes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statusbean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="md5" >
      <xs:sequence>
        <xs:element name="md5_algorithm" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="csvdatapartitioner" >
      <xs:sequence>
        <xs:element name="/*experimentedwithbothcommons-csv,super-csvandopencsvlibraries.noneofthemareabletocopewitherroneouscsvintheformofunbalanceddoublequotesinawaythatallowsustostepoverthefaultyrecordandcontinuepartitioning.thereforethispartitionerisdesignedtodoitsownlinereadingandtreateachlineasaseparatecsvdocument.consequentlythispartitionercannothandlethecasewherecrlfareembeddedwithindoublequotes"...crlf..."asdescribedinhttps://tools.ietf.org/html/rfc4180.*/" type="xs:anyType" />
        <xs:element name="inputstream" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="reader" type="xs:anyType" />
        <xs:element name="positionindatafile" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tarredxmldatapartitioner" >
      <xs:sequence>
        <xs:element name="encodingexpected" type="xs:string" />
        <xs:element name="inputstream" type="xs:anyType" />
        <xs:element name="tarstream" type="xs:anyType" />
        <xs:element name="iterator" type="datapartitionerresult" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="currenttarentryiterator" type="datapartitionerresult" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="positionindatafile" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultxmldatapartitioner" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="inputstream" type="xs:anyType" />
        <xs:element name="encodingexpected" type="xs:anyType" />
        <xs:element name="encodingnamefromdocument" type="xs:string" />
        <xs:element name="roottag" type="xs:string" />
        <xs:element name="xmlreader" type="xs:anyType" />
        <xs:element name="prerecordevents" type="xs:anyType" />
        <xs:element name="extractedkeys" type="xs:anyType" />
        <xs:element name="extractedvalues" type="xs:anyType" />
        <xs:element name="iterator" type="datapartitionerresult" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="positionindatafile" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="includefilterdatapartitioner" >
      <xs:sequence>
        <xs:element name="wrapped" type="datapartitioner" nillable="true" minOccurs="0" />
        <xs:element name="includefilter" type="xs:anyType" />
        <xs:element name="skippedcount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsondatapartitioner" >
      <xs:sequence>
        <xs:element name="inputstream" type="xs:anyType" />
        <xs:element name="encoding" type="xs:anyType" />
        <xs:element name="drainitemsiterator" type="datapartitionerresult" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="positionindatafile" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="volumeafterparents" >
      <xs:complexContent>
       <xs:extension base="jobitemreorderer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datapartitionerresult" >
      <xs:sequence>
        <xs:element name="empty" type="datapartitionerresult" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="positionindatafile" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobitemreorderer" >
      <xs:sequence>
        <xs:element name="jobid" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="numberofitems" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapartitioner" >
      <xs:complexContent>
       <xs:extension base="iterable<datapartitionerresult>">
         <xs:sequence>
          <xs:element name="no_byte_count_available" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iso2709datapartitioner" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="inputstream" type="xs:anyType" />
        <xs:element name="marcwriter" type="xs:anyType" />
        <xs:element name="GeneratedName" type="marcrecordinfobuilder" nillable="true" minOccurs="0" />
        <xs:element name="encoding" type="xs:anyType" />
        <xs:element name="inputencoding" type="xs:anyType" />
        <xs:element name="positionindatafile" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="danmarc2lineformatdatapartitioner" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="marcreader" type="xs:anyType" />
        <xs:element name="positionindatafile" type="xs:long" />
        <xs:element name="inputstream" type="xs:anyType" />
        <xs:element name="GeneratedName" type="marcrecordinfobuilder" nillable="true" minOccurs="0" />
        <xs:element name="marcwriter" type="xs:anyType" />
        <xs:element name="specifiedencoding" type="xs:string" />
        <xs:element name="encoding" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iso2709reorderingdatapartitioner" >
      <xs:complexContent>
       <xs:extension base="iso2709datapartitioner">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="reorderer" type="jobitemreorderer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dsdcsvdatapartitioner" >
      <xs:complexContent>
       <xs:extension base="csvdatapartitioner">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="danmarc2lineformatreorderingdatapartitioner" >
      <xs:complexContent>
       <xs:extension base="danmarc2lineformatdatapartitioner">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="reorderer" type="jobitemreorderer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zippedxmldatapartitioner" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="encodingexpected" type="xs:string" />
        <xs:element name="zipstream" type="xs:anyType" />
        <xs:element name="iterator" type="datapartitionerresult" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="currentzipiterator" type="datapartitionerresult" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="positionindatafile" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapartitionerfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vipcsvdatapartitioner" >
      <xs:complexContent>
       <xs:extension base="csvdatapartitioner">
         <xs:sequence>
          <xs:element name="headers" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="volumeincludeparents" >
      <xs:complexContent>
       <xs:extension base="jobitemreorderer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="viafdatapartitioner" >
      <xs:complexContent>
       <xs:extension base="iso2709datapartitioner">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="skippedcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="marcxchangeaddidatapartitioner" >
      <xs:complexContent>
       <xs:extension base="addidatapartitioner">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addidatapartitioner" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="inputstream" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="encoding" type="xs:anyType" />
        <xs:element name="positionindatafile" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobstoredb" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobstorecdiproducer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chunkitemconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keysetjsonbconverter" >
      <xs:sequence>
        <xs:element name="jsonsetkeytype" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="itemlistquery" >
      <xs:complexContent>
       <xs:extension base="listquery<itemlistcriteria,">
         <xs:sequence>
          <xs:element name="/*!!!deprecationwarning!!!futureenhancementsshouldnotusethecriteriabasedapibutworktowardsusingtheioquerylanguageinstead.belowcodeisthereforeconsidereddeprecated.*/query_base" type="xs:string" />
          <xs:element name="query_count_base" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobentity" >
      <xs:sequence>
        <xs:element name="/*beadvisedthatupdatingtheernalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*/id" type="xs:long" />
        <xs:element name="eoj" type="xs:anyType" />
        <xs:element name="fatalerror" type="xs:anyType" />
        <xs:element name="partnumber" type="xs:long" />
        <xs:element name="numberofchunks" type="xs:long" />
        <xs:element name="numberofitems" type="xs:long" />
        <xs:element name="priority" type="xs:long" />
        <xs:element name="skipped" type="xs:long" />
        <xs:element name="//todo:4/4/17droptimeoflastmodificationdbtriggeranduse@prepersistand@preupdatecallbacksinstead(toavoidunnecessaryflush()andrefresh()calls)timeofcreation" type="xs:anyType" />
        <xs:element name="timeoflastmodification" type="xs:anyType" />
        <xs:element name="timeofcompletion" type="xs:anyType" />
        <xs:element name="specification" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="cachedflow" type="flowcacheentity" nillable="true" minOccurs="0" />
        <xs:element name="cachedsink" type="sinkcacheentity" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobspecificationconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="itementity" >
      <xs:sequence>
        <xs:element name="/*beadvisedthatupdatingtheinternalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*/" type="xs:anyType" />
        <xs:element name="//todo:4/4/17droptimeoflastmodificationdbtriggeranduse@prepersistand@preupdatecallbacksinstead(toavoidunnecessaryflush()andrefresh()calls)timeofcreation" type="xs:anyType" />
        <xs:element name="timeofcompletion" type="xs:anyType" />
        <xs:element name="timeoflastmodification" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="partitioningoutcome" type="xs:anyType" />
        <xs:element name="processingoutcome" type="xs:anyType" />
        <xs:element name="nextprocessingoutcome" type="xs:anyType" />
        <xs:element name="deliveringoutcome" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="positionindatafile" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notificationstatusconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flowconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sinkidstatuscountresult" >
      <xs:sequence>
        <xs:element name="sinkid" type="xs:long" />
        <xs:element name="status" type="xs:anyType" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="converter" type="chunkschedulingstatusconverter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notificationentity" >
      <xs:sequence>
        <xs:element name="select_by_type" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="timeofcreation" type="xs:anyType" />
        <xs:element name="timeoflastmodification" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="status" type="xs:anyType" />
        <xs:element name="statusmessage" type="xs:string" />
        <xs:element name="destination" type="xs:string" />
        <xs:element name="content" type="xs:string" />
        <xs:element name="context" type="xs:string" />
        <xs:element name="job" type="jobentity" nillable="true" minOccurs="0" />
        <xs:element name="jobid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="converterjsonbcontext" >
      <xs:sequence>
        <xs:element name="jsonb_context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stateconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flowstorereferencesconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependencytrackingentity" >
      <xs:sequence>
        <xs:element name="sinkid_status_count_result" type="xs:string" />
        <xs:element name="key_result" type="xs:string" />
        <xs:element name="sinkid_status_count_query" type="xs:string" />
        <xs:element name="job_count_chunk_count_query" type="xs:string" />
        <xs:element name="related_chunks_query" type="xs:string" />
        <xs:element name="by_sinkid_and_state_query" type="xs:string" />
        <xs:element name="chunks_to_wait_for_query" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="sinkid" type="xs:long" />
        <xs:element name="status" type="xs:anyType" />
        <xs:element name="priority" type="xs:long" />
        <xs:element name="waitingon" type="xs:anyType" />
        <xs:element name="matchkeys" type="xs:anyType" />
        <xs:element name="hashes" type="xs:anyType" />
        <xs:element name="submitter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flowcacheentity" >
      <xs:sequence>
        <xs:element name="named_query_set_cache" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="checksum" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workflownoteconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reordereditementity" >
      <xs:sequence>
        <xs:element name="get_items_count_by_jobid_query_name" type="xs:string" />
        <xs:element name="get_items_count_by_jobid_query" type="xs:string" />
        <xs:element name="get_next_item_by_jobid_query_name" type="xs:string" />
        <xs:element name="get_next_item_by_jobid_query" type="xs:string" />
        <xs:element name="query_get_parent" type="xs:string" />
        <xs:element name="/*beadvisedthatupdatingtheernalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*///jpaentitiesneedtohaveaprimarykeyid" type="xs:long" />
        <xs:element name="jobid" type="xs:long" />
        <xs:element name="sortkey" type="xs:long" />
        <xs:element name="positionindatafile" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="recordinfo" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sinkcacheentity" >
      <xs:sequence>
        <xs:element name="named_query_set_cache" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="checksum" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rerunentity" >
      <xs:sequence>
        <xs:element name="find_head_query_name" type="xs:string" />
        <xs:element name="find_by_state_query_name" type="xs:string" />
        <xs:element name="field_state" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="timeofcreation" type="xs:anyType" />
        <xs:element name="job" type="jobentity" nillable="true" minOccurs="0" />
        <xs:element name="includefailedonly" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceanalysisdataconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sinkconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joblistquery" >
      <xs:complexContent>
       <xs:extension base="listquery<joblistcriteria,">
         <xs:sequence>
          <xs:element name="/*!!!deprecationwarning!!!futureenhancementsshouldnotusethecriteriabasedapibutworktowardsusingtheioquerylanguageinstead.belowcodeisthereforeconsidereddeprecated.*/query_base" type="xs:string" />
          <xs:element name="query_count_base" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobqueueentity" >
      <xs:sequence>
        <xs:element name="nq_find_by_state" type="xs:string" />
        <xs:element name="//thisisnativesqlbecausejpqldoesn'tsupportjsonoperators.//findsjobqueueentitieswithsubmitteridswhicharenotalreadyinjobsmarkedasinprogressnq_find_by_sink_and_available_submitter" type="xs:string" />
        <xs:element name="field_sink_id" type="xs:string" />
        <xs:element name="field_state" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="timeofentry" type="xs:anyType" />
        <xs:element name="job" type="jobentity" nillable="true" minOccurs="0" />
        <xs:element name="sinkid" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="retries" type="xs:long" />
        <xs:element name="includefilter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chunkschedulingstatusconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notificationtypeconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listquery" >
      <xs:complexContent>
       <xs:extension base="listcriteria,">
         <xs:sequence>
          <xs:element name="fieldmap" type="xs:anyType" />
          <xs:element name="unaryopset" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chunklistquery" >
      <xs:complexContent>
       <xs:extension base="listquery<chunklistcriteria,">
         <xs:sequence>
          <xs:element name="query_base" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringsetconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rerunstateconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recordinfoconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chunkentity" >
      <xs:sequence>
        <xs:element name="/*beadvisedthatupdatingtheinternalstateofa'json'columnwillnotmarkthefieldasdirtyandthereforenotresultinadatabaseupdate.theonlywaytoachieveanupdateistoreplacethefieldvaluewithanewinstance(longlivecopyconstructors).*/" type="xs:anyType" />
        <xs:element name="datafileid" type="xs:string" />
        <xs:element name="numberofitems" type="xs:long" />
        <xs:element name="timeofcreation" type="xs:anyType" />
        <xs:element name="timeoflastmodification" type="xs:anyType" />
        <xs:element name="timeofcompletion" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addjobparam" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="diagnostics" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="typeofdatapartitioner" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addacctestjobparam" >
      <xs:complexContent>
       <xs:extension base="addjobparam">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="partitioningparam" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="diagnostics" type="xs:anyType" />
        <xs:element name="datafile" type="xs:anyType" />
        <xs:element name="GeneratedName" type="datapartitioner" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobentity" nillable="true" minOccurs="0" />
        <xs:element name="datafileid" type="xs:string" />
        <xs:element name="GeneratedName" type="keygenerator" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="previewonly" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chunkitemexporter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="addiunwrapper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="rawconverter" nillable="true" minOccurs="0" />
        <xs:element name="wrapperformats" type="xs:anyType" />
        <xs:element name="conversions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="characterencodingscheme" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maildestination" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="mail" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="destination" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonvaluetemplateengine" >
      <xs:sequence>
        <xs:element name="empty_value" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachment" >
      <xs:sequence>
        <xs:element name="extension_iso2709" type="xs:string" />
        <xs:element name="extension_line_format" type="xs:string" />
        <xs:element name="extension_xml" type="xs:string" />
        <xs:element name="extension_text" type="xs:string" />
        <xs:element name="content" type="xs:anyType" />
        <xs:element name="contenttype" type="xs:string" />
        <xs:element name="filename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marcrecordinfobuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chunkitemunwrapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marcxchangetodanmarc2lineformatconverter" >
      <xs:complexContent>
       <xs:extension base="abstracttolineformatconverter">
         <xs:sequence>
          <xs:element name="writer" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="marcxchangetomarc21lineformatconverter" >
      <xs:complexContent>
       <xs:extension base="abstracttolineformatconverter">
         <xs:sequence>
          <xs:element name="writer" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttolineformatconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mailnotification" >
      <xs:sequence>
        <xs:element name="job_created_ok_template" type="xs:string" />
        <xs:element name="job_created_fail_template" type="xs:string" />
        <xs:element name="job_completed_template" type="xs:string" />
        <xs:element name="job_completed_with_failures_template" type="xs:string" />
        <xs:element name="invalid_transfile_template" type="xs:string" />
        <xs:element name="subject_for_job_created" type="xs:string" />
        <xs:element name="subject_for_job_completed" type="xs:string" />
        <xs:element name="from_address_personal_name" type="xs:string" />
        <xs:element name="GeneratedName" type="maildestination" nillable="true" minOccurs="0" />
        <xs:element name="notification" type="notificationentity" nillable="true" minOccurs="0" />
        <xs:element name="builder" type="xs:anyType" />
        <xs:element name="overwrites" type="xs:anyType" />
        <xs:element name="GeneratedName" type="attachment" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chunkitemconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobinfosnapshotconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addiunwrapper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobexporter" >
      <xs:sequence>
        <xs:element name="file_store_metadata" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="chunkitemexporter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="processorshard" >
      <xs:sequence>
        <xs:element name="shard" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marcxchangetolineformatconverter" >
      <xs:complexContent>
       <xs:extension base="abstracttolineformatconverter">
         <xs:sequence>
          <xs:element name="marc21_control_fields" type="xs:anyType" />
          <xs:element name="converter" type="chunkitemconverter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trackingidgenerator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="ipaddress" type="xs:string" />
        <xs:element name="separator" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rawconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flowtrimmer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keygenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultkeygenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job_completed_with_failures" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job_completed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalid_transfile" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job_created_ok" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job_created_fail" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v2__dependencytracking_waitingon_index" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="glassfish-ejb-jar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beans" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb-jar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="glassfish-web" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testfilestoreserviceconnector" >
      <xs:complexContent>
       <xs:extension base="filestoreserviceconnector">
         <xs:sequence>
          <xs:element name="files" type="xs:anyType" />
          <xs:element name="filelengthoverwrite" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statusbeantest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="statusbean" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonmarshallingtest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listquerytest" >
      <xs:complexContent>
       <xs:extension base="listquery<listcriteriaimpl,">
         <xs:sequence>
          <xs:element name="field_object_name" type="xs:string" />
          <xs:element name="field_timestamp_name" type="xs:string" />
          <xs:element name="verbatim_field_jsonb_name" type="xs:string" />
          <xs:element name="verbatim_value" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joblistquerytest" >
      <xs:sequence>
        <xs:element name="entity_manager" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependencytrackingentityit" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="persistencecontext" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keysetjsonbconvertertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="itemlistquerytest" >
      <xs:sequence>
        <xs:element name="entity_manager" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chunklistquerytest" >
      <xs:sequence>
        <xs:element name="entity_manager" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="itementitytest" >
      <xs:sequence>
        <xs:element name="key" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstorerepositoryit_queryingit" >
      <xs:complexContent>
       <xs:extension base="pgjobstorerepositoryabstractit">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobrerunnerbeanit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="rrharvesterserviceconnector" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="tickleharvesterserviceconnector" type="xs:anyType" />
          <xs:element name="" type="pgjobstore" nillable="true" minOccurs="0" />
          <xs:element name="rawrepo" type="xs:anyType" />
          <xs:element name="ticklerepo" type="xs:anyType" />
          <xs:element name="fallbacknotificationdestination" type="xs:string" />
          <xs:element name="" type="jobrerunnerbean" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notificationsbeantest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="jobnotificationrepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="notificationsbean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobsexportsbeantest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="jobsexportsbean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstorearquillianit" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="pgjobstore" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="pgjobstorerepository" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="utx" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="processor" type="xs:anyType" />
        <xs:element name="sinks" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobnotificationrepositoryit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="mailtofallback" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjobschedulerconfigoverwrite" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobschedulertransactionsbeanit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjobstoreconnection" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="http" type="xs:anyType" />
        <xs:element name="jobstoreurl" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testflowstoreserviceconnectorbean" >
      <xs:complexContent>
       <xs:extension base="flowstoreserviceconnectorbean">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobqueuerepositoryit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scheduledjobpurgebeantest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="jobpurgebean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstorerepositoryit" >
      <xs:complexContent>
       <xs:extension base="pgjobstorerepositoryabstractit">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pgjobstorerepositoryit_cachingit" >
      <xs:complexContent>
       <xs:extension base="pgjobstorerepositoryabstractit">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobnotificationrepositorytest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="destination" type="xs:string" />
        <xs:element name="mailfrom" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobpurgebeanit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
          <xs:element name="mocked" type="xs:anyType" />
          <xs:element name="mocked" type="xs:anyType" />
          <xs:element name="mocked" type="xs:anyType" />
          <xs:element name="mocked" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="jobpurgebean" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobschedulerbeanit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobprocessormessageproducerbeantest" >
      <xs:sequence>
        <xs:element name="jms" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobprocessormessageproducerbean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstrapbeanit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pgjobstore_handlepartitioningtest" >
      <xs:complexContent>
       <xs:extension base="pgjobstorebasetest">
         <xs:sequence>
          <xs:element name="" type="pgjobstore" nillable="true" minOccurs="0" />
          <xs:element name="" type="jobentity" nillable="true" minOccurs="0" />
          <xs:element name="partitioningparambuilder" type="testablepartitioningparambuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pgjobstorebasetest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="mocked" type="xs:anyType" />
        <xs:element name="mocked" type="xs:anyType" />
        <xs:element name="filestoreunexpectedexception" type="xs:anyType" />
        <xs:element name="file_store_urn" type="xs:anyType" />
        <xs:element name="expected_data_entries" type="xs:anyType" />
        <xs:element name="expected_number_of_items" type="xs:long" />
        <xs:element name="expected_number_of_chunks" type="xs:long" />
        <xs:element name="mockedjobstorerepository" type="pgjobstorerepository" nillable="true" minOccurs="0" />
        <xs:element name="mockedjobqueuereposity" type="jobqueuerepository" nillable="true" minOccurs="0" />
        <xs:element name="mocked" type="jobnotificationrepository" nillable="true" minOccurs="0" />
        <xs:element name="expected_flow_cache_entity" type="flowcacheentity" nillable="true" minOccurs="0" />
        <xs:element name="expected_sink_cache_entity" type="sinkcacheentity" nillable="true" minOccurs="0" />
        <xs:element name="expected_" type="xs:anyType" />
        <xs:element name="expected_" type="xs:anyType" />
        <xs:element name="expected_" type="xs:anyType" />
        <xs:element name="default_job_id" type="xs:long" />
        <xs:element name="default_chunk_id" type="xs:long" />
        <xs:element name="default_item_id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobschedulerbean" nillable="true" minOccurs="0" />
        <xs:element name="mocked" type="xs:anyType" />
        <xs:element name="mocked" type="xs:anyType" />
        <xs:element name="mocked" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstore_chunkstest" >
      <xs:complexContent>
       <xs:extension base="pgjobstorebasetest">
         <xs:sequence>
          <xs:element name="chunkdata" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobschedulerbeanarquillianit" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobschedulerbean" nillable="true" minOccurs="0" />
        <xs:element name="bulksubmitterbean" type="jobschedulerbulksubmitterbean" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="utx" type="xs:anyType" />
        <xs:element name="GeneratedName" type="sinkmessageproducerbean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstorerepositorytest" >
      <xs:complexContent>
       <xs:extension base="pgjobstorebasetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sinkmessageproducerbeantest" >
      <xs:sequence>
        <xs:element name="jms" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="sinkcacheentity" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobentity" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sinkmessageproducerbean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstorerepositoryabstractit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
          <xs:element name="" type="pgjobstorerepository" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rerunsrepositoryit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="partitioningtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstorerepositorytest_queryingtest" >
      <xs:complexContent>
       <xs:extension base="pgjobstorebasetest">
         <xs:sequence>
          <xs:element name="default_chunk_id" type="xs:long" />
          <xs:element name="default_item_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsinkmessageconsumerbean" >
      <xs:complexContent>
       <xs:extension base="abstractsinkmessageconsumerbean">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="chunksreceived" type="xs:anyType" />
          <xs:element name="processblocker" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfilestoreserviceconnectorbean" >
      <xs:complexContent>
       <xs:extension base="filestoreserviceconnectorbean">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testjobprocessormessageconsumerbean" >
      <xs:complexContent>
       <xs:extension base="abstractmessageconsumerbean">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="chunksreceived" type="xs:anyType" />
          <xs:element name="processblocker" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dmqmessageconsumerbeantest" >
      <xs:complexContent>
       <xs:extension base="dmqmessageconsumerbean">
         <xs:sequence>
          <xs:element name="dmqmessageconsumerbean" type="xs:anyType" />
          <xs:element name="headers" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobschedulerrestbeantest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstorerepositorytest_cachingtest" >
      <xs:complexContent>
       <xs:extension base="pgjobstorebasetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jobsbeantest" >
      <xs:sequence>
        <xs:element name="location" type="xs:string" />
        <xs:element name="part_number" type="xs:long" />
        <xs:element name="job_id" type="xs:long" />
        <xs:element name="chunk_id" type="xs:long" />
        <xs:element name="item_id" type="xs:long" />
        <xs:element name="mocked" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobsbean" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobschedulerbean" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="jmsproducer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pgjobstoreit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
          <xs:element name="sleep_interval_in_ms" type="xs:long" />
          <xs:element name="max_wait_in_ms" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="job_scheduler_bean" type="jobschedulerbean" nillable="true" minOccurs="0" />
          <xs:element name="max_chunk_size" type="xs:long" />
          <xs:element name="defaultxml" type="xs:anyType" />
          <xs:element name="defaultbytesize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trackingidgeneratortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobexporterit" >
      <xs:complexContent>
       <xs:extension base="abstractjobstoreit">
         <xs:sequence>
          <xs:element name="tmpfolder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flowtrimmertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonvaluetemplateenginetest" >
      <xs:sequence>
        <xs:element name="templateengine" type="jsonvaluetemplateengine" nillable="true" minOccurs="0" />
        <xs:element name="template" type="xs:string" />
        <xs:element name="expectedemptyscalaroutput" type="xs:string" />
        <xs:element name="expectedscalaroutput" type="xs:string" />
        <xs:element name="expectedarrayoutput" type="xs:string" />
        <xs:element name="expectedoverwriteoutput" type="xs:string" />
        <xs:element name="overwrites" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="processorshardtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="characterencodingschemetest" >
      <xs:sequence>
        <xs:element name="marc8" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobinfosnapshotconvertertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobexportertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="chunkitemexporter" nillable="true" minOccurs="0" />
        <xs:element name="itementitykey" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobexporter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marcxchangetolineformatconvertertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marcxchangetomarc21lineformatconvertertest" >
      <xs:sequence>
        <xs:element name="diagnostics" type="xs:anyType" />
        <xs:element name="endtag" type="xs:string" />
        <xs:element name="expectedrecordaslineformat" type="xs:string" />
        <xs:element name="failed" type="xs:anyType" />
        <xs:element name="e0100" type="xs:string" />
        <xs:element name="diagnosticmessage" type="xs:string" />
        <xs:element name="converter" type="marcxchangetomarc21lineformatconverter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachmenttest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mailnotificationtest" >
      <xs:sequence>
        <xs:element name="job_created_ok_body" type="xs:string" />
        <xs:element name="job_created_fail_body" type="xs:string" />
        <xs:element name="job_completed_body" type="xs:string" />
        <xs:element name="job_completed_with_failures_body" type="xs:string" />
        <xs:element name="job_completed_with_failures_appended_body" type="xs:string" />
        <xs:element name="job_completed_with_failures_appended_and_id_overwrite_body" type="xs:string" />
        <xs:element name="invalid_transfile_body" type="xs:string" />
        <xs:element name="job_created_subject" type="xs:string" />
        <xs:element name="job_completed_subject" type="xs:string" />
        <xs:element name="destination" type="xs:string" />
        <xs:element name="mailfrom" type="xs:string" />
        <xs:element name="mailfromname" type="xs:string" />
        <xs:element name="s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marcrecordinfobuildertest" >
      <xs:sequence>
        <xs:element name="recordinfobuilder" type="marcrecordinfobuilder" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="parent" type="xs:string" />
        <xs:element name="f001" type="xs:anyType" />
        <xs:element name="//producesnon-delete,standalonef004" type="xs:anyType" />
        <xs:element name="f014" type="xs:anyType" />
        <xs:element name="c001" type="xs:anyType" />
        <xs:element name="sequenceanalysisoption" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chunkitemexportertest" >
      <xs:sequence>
        <xs:element name="encoding" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="diagnostics" type="xs:anyType" />
        <xs:element name="marcxchange" type="xs:anyType" />
        <xs:element name="danmarc2lineformat" type="xs:anyType" />
        <xs:element name="marc21lineformat" type="xs:anyType" />
        <xs:element name="GeneratedName" type="chunkitemexporter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maildestinationtest" >
      <xs:sequence>
        <xs:element name="mailtofallback" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addiunwrappertest" >
      <xs:sequence>
        <xs:element name="unwrapper" type="addiunwrapper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marcxchangetodanmarc2lineformatconvertertest" >
      <xs:sequence>
        <xs:element name="diagnostics" type="xs:anyType" />
        <xs:element name="endtag" type="xs:string" />
        <xs:element name="expectedrecordaslineformat" type="xs:string" />
        <xs:element name="failed" type="xs:anyType" />
        <xs:element name="e0100" type="xs:string" />
        <xs:element name="diagnosticmessage" type="xs:string" />
        <xs:element name="converter" type="marcxchangetodanmarc2lineformatconverter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parambasetest" >
      <xs:sequence>
        <xs:element name="error_message" type="xs:string" />
        <xs:element name="data_file_id" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addacctestjobparamtest" >
      <xs:complexContent>
       <xs:extension base="parambasetest">
         <xs:sequence>
          <xs:element name="mocked" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="typeofdatapartitioner" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addjobparamtest" >
      <xs:complexContent>
       <xs:extension base="parambasetest">
         <xs:sequence>
          <xs:element name="mocked" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="partitioningparamtest" >
      <xs:complexContent>
       <xs:extension base="parambasetest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="datapartitionertype" type="xs:anyType" />
          <xs:element name="expected_" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="includefilterdatapartitionertest" >
      <xs:sequence>
        <xs:element name="wrappedpartitioner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marcxchangeaddidatapartitionertest" >
      <xs:complexContent>
       <xs:extension base="abstractpartitionertestbase">
         <xs:sequence>
          <xs:element name="empty_stream" type="xs:anyType" />
          <xs:element name="utf_8_encoding" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tarredxmldatapartitionertest" >
      <xs:complexContent>
       <xs:extension base="abstractpartitionertestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsondatapartitionertest" >
      <xs:sequence>
        <xs:element name="empty_stream" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="danmarc2lineformatreorderingdatapartitionertest" >
      <xs:sequence>
        <xs:element name="job_item_reorderer" type="jobitemreorderer" nillable="true" minOccurs="0" />
        <xs:element name="partitioner" type="danmarc2lineformatreorderingdatapartitioner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="csvdatapartitionertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zippedxmldatapartitionertest" >
      <xs:complexContent>
       <xs:extension base="abstractpartitionertestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dsdcsvdatapartitionertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vipcsvdatapartitionertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="viafdatapartitionertest" >
      <xs:complexContent>
       <xs:extension base="abstractpartitionertestbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addidatapartitionertest" >
      <xs:sequence>
        <xs:element name="empty_stream" type="xs:anyType" />
        <xs:element name="utf_8_encoding" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="danmarc2lineformatdatapartitionertest" >
      <xs:sequence>
        <xs:element name="specified_encoding" type="xs:string" />
        <xs:element name="input_stream" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iso2709reorderingdatapartitionerit" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="persistencecontext" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsummary" >
      <xs:sequence>
        <xs:element name="status" type="xs:anyType" />
        <xs:element name="ids" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpartitionertestbase" >
      <xs:sequence>
        <xs:element name="datacontainers_with_tracking_id_xml" type="xs:string" />
        <xs:element name="empty_input_stream" type="xs:anyType" />
        <xs:element name="utf_8" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="danmarc2lineformatreorderingdatapartitionerit" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="persistencecontext" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iso2709datapartitionertest" >
      <xs:complexContent>
       <xs:extension base="abstractpartitionertestbase{">
         <xs:sequence>
          <xs:element name="input_record_1_iso" type="xs:string" />
          <xs:element name="input_broken_iso" type="xs:string" />
          <xs:element name="input_records_3_iso" type="xs:string" />
          <xs:element name="input_records_4_guard_against_infinite_iteration_iso" type="xs:string" />
          <xs:element name="input_records_4_error_in_record2" type="xs:string" />
          <xs:element name="input_records_323_marc21_utf8_iso" type="xs:string" />
          <xs:element name="output_record_1_marcxchange" type="xs:string" />
          <xs:element name="default_record_id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iso2709reorderingdatapartitionertest" >
      <xs:sequence>
        <xs:element name="job_item_reorderer" type="jobitemreorderer" nillable="true" minOccurs="0" />
        <xs:element name="partitioner" type="iso2709reorderingdatapartitioner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultxmldatapartitionertest" >
      <xs:complexContent>
       <xs:extension base="abstractpartitionertestbase">
         <xs:sequence>
          <xs:element name="xml_header" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="md5test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractjobstoreit" >
      <xs:sequence>
        <xs:element name="database_name" type="xs:string" />
        <xs:element name="database_port" type="xs:long" />
        <xs:element name="job_table_name" type="xs:string" />
        <xs:element name="chunk_table_name" type="xs:string" />
        <xs:element name="item_table_name" type="xs:string" />
        <xs:element name="flow_cache_table_name" type="xs:string" />
        <xs:element name="sink_cache_table_name" type="xs:string" />
        <xs:element name="jobqueue_table_name" type="xs:string" />
        <xs:element name="dependencytracking_table_name" type="xs:string" />
        <xs:element name="notification_table_name" type="xs:string" />
        <xs:element name="reordered_item_table_name" type="xs:string" />
        <xs:element name="rerun_table_name" type="xs:string" />
        <xs:element name="submitterid" type="xs:long" />
        <xs:element name="datasource" type="xs:anyType" />
        <xs:element name="mocked" type="xs:anyType" />
        <xs:element name="mocked" type="xs:anyType" />
        <xs:element name="mocked" type="xs:anyType" />
        <xs:element name="mocked" type="xs:anyType" />
        <xs:element name="mocked" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="persistencecontext" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testflowstoreserviceconnector" >
      <xs:complexContent>
       <xs:extension base="flowstoreserviceconnector">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testableaddjobparambuilder" >
      <xs:sequence>
        <xs:element name="diagnostics" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="isendofjob" type="xs:anyType" />
        <xs:element name="partnumber" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="records" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testablejobentitybuilder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="timeofcreation" type="xs:anyType" />
        <xs:element name="GeneratedName" type="sinkcacheentity" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="numberofitems" type="xs:long" />
        <xs:element name="numberofchunks" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testableaddjobparam" >
      <xs:complexContent>
       <xs:extension base="addjobparam">
         <xs:sequence>
          <xs:element name="records" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testablejobentity" >
      <xs:complexContent>
       <xs:extension base="jobentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testablepartitioningparambuilder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jobentity" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="records" type="xs:string" />
        <xs:element name="diagnostics" type="xs:anyType" />
        <xs:element name="datafile" type="xs:anyType" />
        <xs:element name="recordsplitter" type="xs:anyType" />
        <xs:element name="GeneratedName" type="datapartitioner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testablepartitioningparam" >
      <xs:complexContent>
       <xs:extension base="partitioningparam">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="test-records-reorder-danmarc2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalid_transfile" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job_created_ok" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job_completed_with_failures" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job_completed_with_failures_appended" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job_completed_with_failures_appended_and_id_overwrite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job_created_fail" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job_completed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arquillian_logback" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 