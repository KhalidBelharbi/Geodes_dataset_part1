ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Utilisateur =>=>=> RelationalSchema.Table>> utilisateur;
ClassDiagram.Attribut>> Role.id:int =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.rolename:String =>=>=> RelationalSchema.Column>> role.rolename;
ClassDiagram.Attribut>> Utilisateur.id:int =>=>=> RelationalSchema.Column>> utilisateur.id PRIMARY KEY;
ClassDiagram.Attribut>> Utilisateur.login:String =>=>=> RelationalSchema.Column>> utilisateur.login;
ClassDiagram.Attribut>> Utilisateur.password:String =>=>=> RelationalSchema.Column>> utilisateur.password;
ClassDiagram.Attribut>> Utilisateur.enabled:boolean =>=>=> RelationalSchema.Column>> utilisateur.enabled;
set<role>: utilisateur_set<role>(utilisateurID:utilisateur [PK] #FK to utilisateur,set<role>ID:set<role> [PK] #FK to set<role>);
