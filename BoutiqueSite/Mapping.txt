ClassDiagram.Class>> SalesOrderItem =>=>=> RelationalSchema.Table>> salesorderitem;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Logupload =>=>=> RelationalSchema.Table>> logupload;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> SalesOrder =>=>=> RelationalSchema.Table>> salesorder;
ClassDiagram.Class>> Member1 =>=>=> RelationalSchema.Table>> member1;
ClassDiagram.Class>> Client =>=>=> RelationalSchema.Table>> client;
ClassDiagram.Class>> EmailMktProduct =>=>=> RelationalSchema.Table>> emailmktproduct;
ClassDiagram.Class>> ProductCarousel =>=>=> RelationalSchema.Table>> productcarousel;
ClassDiagram.Class>> EmailMkt =>=>=> RelationalSchema.Table>> emailmkt;
ClassDiagram.Class>> EmailMktCart =>=>=> RelationalSchema.Table>> emailmktcart;
ClassDiagram.Class>> Log =>=>=> RelationalSchema.Table>> log;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Transaction =>=>=> RelationalSchema.Table>> transaction;
ClassDiagram.Class>> Wineries =>=>=> RelationalSchema.Table>> wineries;
ClassDiagram.Class>> Areaoper =>=>=> RelationalSchema.Table>> areaoper;
ClassDiagram.Class>> ProductImage =>=>=> RelationalSchema.Table>> productimage;
ClassDiagram.Class>> Brand =>=>=> RelationalSchema.Table>> brand;
ClassDiagram.Class>> Profile =>=>=> RelationalSchema.Table>> profile;
ClassDiagram.Attribut>> SalesOrderItem.serialversionuid:long =>=>=> RelationalSchema.Column>> salesorderitem.serialversionuid;
ClassDiagram.Attribut>> SalesOrderItem.orderitemid:Integer =>=>=> RelationalSchema.Column>> salesorderitem.orderitemid PRIMARY KEY;
ClassDiagram.Attribut>> SalesOrderItem.orderid:Integer =>=>=> RelationalSchema.Column>> salesorderitem.orderid;
ClassDiagram.Attribut>> SalesOrderItem.productid:Integer =>=>=> RelationalSchema.Column>> salesorderitem.productid;
ClassDiagram.Attribut>> SalesOrderItem.//@max(value:Double =>=>=> RelationalSchema.Column>> salesorderitem.//@max(value;
ClassDiagram.Attribut>> SalesOrderItem.productprice:Double =>=>=> RelationalSchema.Column>> salesorderitem.productprice;
ClassDiagram.Attribut>> SalesOrderItem.productdescount:Double =>=>=> RelationalSchema.Column>> salesorderitem.productdescount;
ClassDiagram.Attribut>> SalesOrderItem.producttotal:Double =>=>=> RelationalSchema.Column>> salesorderitem.producttotal;
ClassDiagram.Attribut>> SalesOrderItem.orderitemstatus:String =>=>=> RelationalSchema.Column>> salesorderitem.orderitemstatus;
ClassDiagram.Attribut>> Product.serialversionuid:long =>=>=> RelationalSchema.Column>> product.serialversionuid;
ClassDiagram.Attribut>> Product.productid:Integer =>=>=> RelationalSchema.Column>> product.productid PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.price:String =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Product.description:String =>=>=> RelationalSchema.Column>> product.description;
ClassDiagram.Attribut>> Product.metatagtitle:String =>=>=> RelationalSchema.Column>> product.metatagtitle;
ClassDiagram.Attribut>> Product.metatagdescription:String =>=>=> RelationalSchema.Column>> product.metatagdescription;
ClassDiagram.Attribut>> Product.metatagkeywords:String =>=>=> RelationalSchema.Column>> product.metatagkeywords;
ClassDiagram.Attribut>> Product.pic1:String =>=>=> RelationalSchema.Column>> product.pic1;
ClassDiagram.Attribut>> Product.pic2:String =>=>=> RelationalSchema.Column>> product.pic2;
ClassDiagram.Attribut>> Product.pic3:String =>=>=> RelationalSchema.Column>> product.pic3;
ClassDiagram.Attribut>> Product.pic4:String =>=>=> RelationalSchema.Column>> product.pic4;
ClassDiagram.Attribut>> Product.pic5:String =>=>=> RelationalSchema.Column>> product.pic5;
ClassDiagram.Attribut>> Product.categoryid:Integer =>=>=> RelationalSchema.Column>> product.categoryid;
ClassDiagram.Attribut>> Product.varietal:String =>=>=> RelationalSchema.Column>> product.varietal;
ClassDiagram.Attribut>> Product.alcohool:String =>=>=> RelationalSchema.Column>> product.alcohool;
ClassDiagram.Attribut>> Product.region:String =>=>=> RelationalSchema.Column>> product.region;
ClassDiagram.Attribut>> Product.year:String =>=>=> RelationalSchema.Column>> product.year;
ClassDiagram.Attribut>> Product.mevushal:String =>=>=> RelationalSchema.Column>> product.mevushal;
ClassDiagram.Attribut>> Product.brand:String =>=>=> RelationalSchema.Column>> product.brand;
ClassDiagram.Attribut>> Product.//@max(value:Double =>=>=> RelationalSchema.Column>> product.//@max(value;
ClassDiagram.Attribut>> Product.buyprice:Double =>=>=> RelationalSchema.Column>> product.buyprice;
ClassDiagram.Attribut>> Logupload.serialversionuid:long =>=>=> RelationalSchema.Column>> logupload.serialversionuid;
ClassDiagram.Attribut>> Logupload.loguploadid:Integer =>=>=> RelationalSchema.Column>> logupload.loguploadid PRIMARY KEY;
ClassDiagram.Attribut>> Logupload.filename:String =>=>=> RelationalSchema.Column>> logupload.filename;
ClassDiagram.Attribut>> Logupload.path:String =>=>=> RelationalSchema.Column>> logupload.path;
ClassDiagram.Attribut>> Logupload.description:byte =>=>=> RelationalSchema.Column>> logupload.description;
ClassDiagram.Attribut>> Logupload.status:String =>=>=> RelationalSchema.Column>> logupload.status;
ClassDiagram.Attribut>> Logupload.GeneratedName:Date =>=>=> RelationalSchema.Column>> logupload.GeneratedName;
ClassDiagram.Attribut>> Address.serialversionuid:long =>=>=> RelationalSchema.Column>> address.serialversionuid;
ClassDiagram.Attribut>> Address.addressid:Integer =>=>=> RelationalSchema.Column>> address.addressid PRIMARY KEY;
ClassDiagram.Attribut>> Address.addressline1:String =>=>=> RelationalSchema.Column>> address.addressline1;
ClassDiagram.Attribut>> Address.addressline2:String =>=>=> RelationalSchema.Column>> address.addressline2;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.suburb:String =>=>=> RelationalSchema.Column>> address.suburb;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.country:String =>=>=> RelationalSchema.Column>> address.country;
ClassDiagram.Attribut>> Address.postalcode:String =>=>=> RelationalSchema.Column>> address.postalcode;
ClassDiagram.Attribut>> Address.modifieddate:String =>=>=> RelationalSchema.Column>> address.modifieddate;
ClassDiagram.Attribut>> SalesOrder.serialversionuid:long =>=>=> RelationalSchema.Column>> salesorder.serialversionuid;
ClassDiagram.Attribut>> SalesOrder.orderid:Integer =>=>=> RelationalSchema.Column>> salesorder.orderid PRIMARY KEY;
ClassDiagram.Attribut>> SalesOrder.clientid:String =>=>=> RelationalSchema.Column>> salesorder.clientid;
ClassDiagram.Attribut>> SalesOrder.order:Date =>=>=> RelationalSchema.Column>> salesorder.order;
ClassDiagram.Attribut>> SalesOrder.description:String =>=>=> RelationalSchema.Column>> salesorder.description;
ClassDiagram.Attribut>> SalesOrder.orderstatus:String =>=>=> RelationalSchema.Column>> salesorder.orderstatus;
ClassDiagram.Attribut>> SalesOrder.session:String =>=>=> RelationalSchema.Column>> salesorder.session;
ClassDiagram.Attribut>> SalesOrder.ip:String =>=>=> RelationalSchema.Column>> salesorder.ip;
ClassDiagram.Attribut>> SalesOrder.shipping:float =>=>=> RelationalSchema.Column>> salesorder.shipping;
ClassDiagram.Attribut>> SalesOrder.subtotal:float =>=>=> RelationalSchema.Column>> salesorder.subtotal;
ClassDiagram.Attribut>> SalesOrder.gst:float =>=>=> RelationalSchema.Column>> salesorder.gst;
ClassDiagram.Attribut>> SalesOrder.total:float =>=>=> RelationalSchema.Column>> salesorder.total;
ClassDiagram.Attribut>> Member1.serialversionuid:long =>=>=> RelationalSchema.Column>> member1.serialversionuid;
ClassDiagram.Attribut>> Member1.memberid:Integer =>=>=> RelationalSchema.Column>> member1.memberid PRIMARY KEY;
ClassDiagram.Attribut>> Member1.name:String =>=>=> RelationalSchema.Column>> member1.name;
ClassDiagram.Attribut>> Member1.//@pattern(regexp:String =>=>=> RelationalSchema.Column>> member1.//@pattern(regexp;
ClassDiagram.Attribut>> Member1.pass:String =>=>=> RelationalSchema.Column>> member1.pass;
ClassDiagram.Attribut>> Member1.reg:Date =>=>=> RelationalSchema.Column>> member1.reg;
ClassDiagram.Attribut>> Member1.terms:String =>=>=> RelationalSchema.Column>> member1.terms;
ClassDiagram.Attribut>> Member1.permission:String =>=>=> RelationalSchema.Column>> member1.permission;
ClassDiagram.Attribut>> Member1.GeneratedName:Date =>=>=> RelationalSchema.Column>> member1.GeneratedName;
ClassDiagram.Attribut>> Client.serialversionuid:long =>=>=> RelationalSchema.Column>> client.serialversionuid;
ClassDiagram.Attribut>> Client.clientid:Integer =>=>=> RelationalSchema.Column>> client.clientid PRIMARY KEY;
ClassDiagram.Attribut>> Client.name:String =>=>=> RelationalSchema.Column>> client.name;
ClassDiagram.Attribut>> Client.firstname:String =>=>=> RelationalSchema.Column>> client.firstname;
ClassDiagram.Attribut>> Client.lastname:String =>=>=> RelationalSchema.Column>> client.lastname;
ClassDiagram.Attribut>> Client.//@pattern(regexp:String =>=>=> RelationalSchema.Column>> client.//@pattern(regexp;
ClassDiagram.Attribut>> Client.telephone:String =>=>=> RelationalSchema.Column>> client.telephone;
ClassDiagram.Attribut>> Client.datebirth:String =>=>=> RelationalSchema.Column>> client.datebirth;
ClassDiagram.Attribut>> Client.companyname1:String =>=>=> RelationalSchema.Column>> client.companyname1;
ClassDiagram.Attribut>> Client.contactperson1:String =>=>=> RelationalSchema.Column>> client.contactperson1;
ClassDiagram.Attribut>> Client.streetaddress11:String =>=>=> RelationalSchema.Column>> client.streetaddress11;
ClassDiagram.Attribut>> Client.streetaddress12:String =>=>=> RelationalSchema.Column>> client.streetaddress12;
ClassDiagram.Attribut>> Client.suburb1:String =>=>=> RelationalSchema.Column>> client.suburb1;
ClassDiagram.Attribut>> Client.postal1:String =>=>=> RelationalSchema.Column>> client.postal1;
ClassDiagram.Attribut>> Client.state1:String =>=>=> RelationalSchema.Column>> client.state1;
ClassDiagram.Attribut>> Client.sameasdelivery:Integer =>=>=> RelationalSchema.Column>> client.sameasdelivery;
ClassDiagram.Attribut>> Client.companyname2:String =>=>=> RelationalSchema.Column>> client.companyname2;
ClassDiagram.Attribut>> Client.streetaddress21:String =>=>=> RelationalSchema.Column>> client.streetaddress21;
ClassDiagram.Attribut>> Client.streetaddress22:String =>=>=> RelationalSchema.Column>> client.streetaddress22;
ClassDiagram.Attribut>> Client.suburb2:String =>=>=> RelationalSchema.Column>> client.suburb2;
ClassDiagram.Attribut>> Client.postal2:String =>=>=> RelationalSchema.Column>> client.postal2;
ClassDiagram.Attribut>> Client.state2:String =>=>=> RelationalSchema.Column>> client.state2;
ClassDiagram.Attribut>> EmailMktProduct.serialversionuid:long =>=>=> RelationalSchema.Column>> emailmktproduct.serialversionuid;
ClassDiagram.Attribut>> EmailMktProduct.emailmktproductid:Integer =>=>=> RelationalSchema.Column>> emailmktproduct.emailmktproductid PRIMARY KEY;
ClassDiagram.Attribut>> EmailMktProduct.emailmktid:Integer =>=>=> RelationalSchema.Column>> emailmktproduct.emailmktid;
ClassDiagram.Attribut>> EmailMktProduct.productid:Integer =>=>=> RelationalSchema.Column>> emailmktproduct.productid;
ClassDiagram.Attribut>> ProductCarousel.serialversionuid:long =>=>=> RelationalSchema.Column>> productcarousel.serialversionuid;
ClassDiagram.Attribut>> ProductCarousel.productid:Integer =>=>=> RelationalSchema.Column>> productcarousel.productid PRIMARY KEY;
ClassDiagram.Attribut>> ProductCarousel.productorder:Integer =>=>=> RelationalSchema.Column>> productcarousel.productorder;
ClassDiagram.Attribut>> EmailMkt.serialversionuid:long =>=>=> RelationalSchema.Column>> emailmkt.serialversionuid;
ClassDiagram.Attribut>> EmailMkt.emailmktid:Integer =>=>=> RelationalSchema.Column>> emailmkt.emailmktid PRIMARY KEY;
ClassDiagram.Attribut>> EmailMkt.name:String =>=>=> RelationalSchema.Column>> emailmkt.name;
ClassDiagram.Attribut>> EmailMkt.description:String =>=>=> RelationalSchema.Column>> emailmkt.description;
ClassDiagram.Attribut>> EmailMkt.metatagtitle:String =>=>=> RelationalSchema.Column>> emailmkt.metatagtitle;
ClassDiagram.Attribut>> EmailMkt.metatagdescription:String =>=>=> RelationalSchema.Column>> emailmkt.metatagdescription;
ClassDiagram.Attribut>> EmailMkt.metatagkeywords:String =>=>=> RelationalSchema.Column>> emailmkt.metatagkeywords;
ClassDiagram.Attribut>> EmailMkt.metatagurl:String =>=>=> RelationalSchema.Column>> emailmkt.metatagurl;
ClassDiagram.Attribut>> EmailMktCart.serialversionuid:long =>=>=> RelationalSchema.Column>> emailmktcart.serialversionuid;
ClassDiagram.Attribut>> EmailMktCart.GeneratedName:EmailMktCartPK =>=>=> RelationalSchema.Column>> emailmktcart.GeneratedName;
ClassDiagram.Attribut>> EmailMktCart.//@max(value:Float =>=>=> RelationalSchema.Column>> emailmktcart.//@max(value;
ClassDiagram.Attribut>> EmailMktCart.price:Float =>=>=> RelationalSchema.Column>> emailmktcart.price;
ClassDiagram.Attribut>> EmailMktCart.total:Float =>=>=> RelationalSchema.Column>> emailmktcart.total;
ClassDiagram.Attribut>> EmailMktCart.GeneratedName:Date =>=>=> RelationalSchema.Column>> emailmktcart.GeneratedName;
ClassDiagram.Attribut>> EmailMktCart.status:String =>=>=> RelationalSchema.Column>> emailmktcart.status;
ClassDiagram.Attribut>> Log.serialversionuid:long =>=>=> RelationalSchema.Column>> log.serialversionuid;
ClassDiagram.Attribut>> Log.logid:Integer =>=>=> RelationalSchema.Column>> log.logid PRIMARY KEY;
ClassDiagram.Attribut>> Log.log:byte =>=>=> RelationalSchema.Column>> log.log;
ClassDiagram.Attribut>> Log.name:String =>=>=> RelationalSchema.Column>> log.name;
ClassDiagram.Attribut>> Log.description:String =>=>=> RelationalSchema.Column>> log.description;
ClassDiagram.Attribut>> Log.GeneratedName:Date =>=>=> RelationalSchema.Column>> log.GeneratedName;
ClassDiagram.Attribut>> Category.serialversionuid:long =>=>=> RelationalSchema.Column>> category.serialversionuid;
ClassDiagram.Attribut>> Category.categoryid:Integer =>=>=> RelationalSchema.Column>> category.categoryid PRIMARY KEY;
ClassDiagram.Attribut>> Category.categorytag:String =>=>=> RelationalSchema.Column>> category.categorytag;
ClassDiagram.Attribut>> Category.category:String =>=>=> RelationalSchema.Column>> category.category;
ClassDiagram.Attribut>> Category.description:String =>=>=> RelationalSchema.Column>> category.description;
ClassDiagram.Attribut>> Category.image1:String =>=>=> RelationalSchema.Column>> category.image1;
ClassDiagram.Attribut>> Transaction.serialversionuid:long =>=>=> RelationalSchema.Column>> transaction.serialversionuid;
ClassDiagram.Attribut>> Transaction.transactionid:Integer =>=>=> RelationalSchema.Column>> transaction.transactionid PRIMARY KEY;
ClassDiagram.Attribut>> Transaction.accesscode:String =>=>=> RelationalSchema.Column>> transaction.accesscode;
ClassDiagram.Attribut>> Transaction.transactionauthorisationcode:String =>=>=> RelationalSchema.Column>> transaction.transactionauthorisationcode;
ClassDiagram.Attribut>> Transaction.transactionresponsecode:String =>=>=> RelationalSchema.Column>> transaction.transactionresponsecode;
ClassDiagram.Attribut>> Transaction.transactionresponsemessage:String =>=>=> RelationalSchema.Column>> transaction.transactionresponsemessage;
ClassDiagram.Attribut>> Transaction.transactioninvoicenumber:String =>=>=> RelationalSchema.Column>> transaction.transactioninvoicenumber;
ClassDiagram.Attribut>> Transaction.transactioninvoicereference:String =>=>=> RelationalSchema.Column>> transaction.transactioninvoicereference;
ClassDiagram.Attribut>> Transaction.transactiontotalamount:String =>=>=> RelationalSchema.Column>> transaction.transactiontotalamount;
ClassDiagram.Attribut>> Transaction.transactiontransactionid:String =>=>=> RelationalSchema.Column>> transaction.transactiontransactionid;
ClassDiagram.Attribut>> Transaction.transactionstatus:String =>=>=> RelationalSchema.Column>> transaction.transactionstatus;
ClassDiagram.Attribut>> Transaction.transactiontokencustomerid:String =>=>=> RelationalSchema.Column>> transaction.transactiontokencustomerid;
ClassDiagram.Attribut>> Transaction.transactionbeaglescore:String =>=>=> RelationalSchema.Column>> transaction.transactionbeaglescore;
ClassDiagram.Attribut>> Transaction.transactionoptions:String =>=>=> RelationalSchema.Column>> transaction.transactionoptions;
ClassDiagram.Attribut>> Transaction.verificationcvn:String =>=>=> RelationalSchema.Column>> transaction.verificationcvn;
ClassDiagram.Attribut>> Transaction.verificationaddress:String =>=>=> RelationalSchema.Column>> transaction.verificationaddress;
ClassDiagram.Attribut>> Transaction.verificationemail:String =>=>=> RelationalSchema.Column>> transaction.verificationemail;
ClassDiagram.Attribut>> Transaction.verificationmobile:String =>=>=> RelationalSchema.Column>> transaction.verificationmobile;
ClassDiagram.Attribut>> Transaction.verificationphone:String =>=>=> RelationalSchema.Column>> transaction.verificationphone;
ClassDiagram.Attribut>> Transaction.beagleverificationemail:String =>=>=> RelationalSchema.Column>> transaction.beagleverificationemail;
ClassDiagram.Attribut>> Transaction.beagleverificationphone:String =>=>=> RelationalSchema.Column>> transaction.beagleverificationphone;
ClassDiagram.Attribut>> Transaction.customertokencustomerid:String =>=>=> RelationalSchema.Column>> transaction.customertokencustomerid;
ClassDiagram.Attribut>> Transaction.customerreference:String =>=>=> RelationalSchema.Column>> transaction.customerreference;
ClassDiagram.Attribut>> Transaction.customertitle:String =>=>=> RelationalSchema.Column>> transaction.customertitle;
ClassDiagram.Attribut>> Transaction.customerfirstname:String =>=>=> RelationalSchema.Column>> transaction.customerfirstname;
ClassDiagram.Attribut>> Transaction.customerlastname:String =>=>=> RelationalSchema.Column>> transaction.customerlastname;
ClassDiagram.Attribut>> Transaction.customercompanyname:String =>=>=> RelationalSchema.Column>> transaction.customercompanyname;
ClassDiagram.Attribut>> Transaction.customerjobdescription:String =>=>=> RelationalSchema.Column>> transaction.customerjobdescription;
ClassDiagram.Attribut>> Transaction.customerstreet1:String =>=>=> RelationalSchema.Column>> transaction.customerstreet1;
ClassDiagram.Attribut>> Transaction.customerstreet2:String =>=>=> RelationalSchema.Column>> transaction.customerstreet2;
ClassDiagram.Attribut>> Transaction.customercity:String =>=>=> RelationalSchema.Column>> transaction.customercity;
ClassDiagram.Attribut>> Transaction.customerstate:String =>=>=> RelationalSchema.Column>> transaction.customerstate;
ClassDiagram.Attribut>> Transaction.customerpostalcode:String =>=>=> RelationalSchema.Column>> transaction.customerpostalcode;
ClassDiagram.Attribut>> Transaction.customercountry:String =>=>=> RelationalSchema.Column>> transaction.customercountry;
ClassDiagram.Attribut>> Transaction.customeremail:String =>=>=> RelationalSchema.Column>> transaction.customeremail;
ClassDiagram.Attribut>> Transaction.customerphone:String =>=>=> RelationalSchema.Column>> transaction.customerphone;
ClassDiagram.Attribut>> Transaction.customermobile:String =>=>=> RelationalSchema.Column>> transaction.customermobile;
ClassDiagram.Attribut>> Transaction.customercomments:String =>=>=> RelationalSchema.Column>> transaction.customercomments;
ClassDiagram.Attribut>> Transaction.customerfax:String =>=>=> RelationalSchema.Column>> transaction.customerfax;
ClassDiagram.Attribut>> Transaction.customerurl:String =>=>=> RelationalSchema.Column>> transaction.customerurl;
ClassDiagram.Attribut>> Transaction.customernote:String =>=>=> RelationalSchema.Column>> transaction.customernote;
ClassDiagram.Attribut>> Transaction.shippingaddressshippingmethod:String =>=>=> RelationalSchema.Column>> transaction.shippingaddressshippingmethod;
ClassDiagram.Attribut>> Transaction.shippingaddressfirstname:String =>=>=> RelationalSchema.Column>> transaction.shippingaddressfirstname;
ClassDiagram.Attribut>> Transaction.shippingaddresslastname:String =>=>=> RelationalSchema.Column>> transaction.shippingaddresslastname;
ClassDiagram.Attribut>> Transaction.shippingaddressstreet1:String =>=>=> RelationalSchema.Column>> transaction.shippingaddressstreet1;
ClassDiagram.Attribut>> Transaction.shippingaddressstreet2:String =>=>=> RelationalSchema.Column>> transaction.shippingaddressstreet2;
ClassDiagram.Attribut>> Transaction.shippingaddresscity:String =>=>=> RelationalSchema.Column>> transaction.shippingaddresscity;
ClassDiagram.Attribut>> Transaction.shippingaddressstate:String =>=>=> RelationalSchema.Column>> transaction.shippingaddressstate;
ClassDiagram.Attribut>> Transaction.shippingaddresscountry:String =>=>=> RelationalSchema.Column>> transaction.shippingaddresscountry;
ClassDiagram.Attribut>> Transaction.shippingaddresspostalcode:String =>=>=> RelationalSchema.Column>> transaction.shippingaddresspostalcode;
ClassDiagram.Attribut>> Transaction.shippingaddressemail:String =>=>=> RelationalSchema.Column>> transaction.shippingaddressemail;
ClassDiagram.Attribut>> Transaction.shippingaddressphone:String =>=>=> RelationalSchema.Column>> transaction.shippingaddressphone;
ClassDiagram.Attribut>> Transaction.shippingaddressfax:String =>=>=> RelationalSchema.Column>> transaction.shippingaddressfax;
ClassDiagram.Attribut>> Transaction.transactionorder:Integer =>=>=> RelationalSchema.Column>> transaction.transactionorder;
ClassDiagram.Attribut>> Transaction.transactionorderstatus:Integer =>=>=> RelationalSchema.Column>> transaction.transactionorderstatus;
ClassDiagram.Attribut>> Transaction.sales:Order =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Wineries.serialversionuid:long =>=>=> RelationalSchema.Column>> wineries.serialversionuid;
ClassDiagram.Attribut>> Wineries.wineriesid:Integer =>=>=> RelationalSchema.Column>> wineries.wineriesid PRIMARY KEY;
ClassDiagram.Attribut>> Wineries.name:String =>=>=> RelationalSchema.Column>> wineries.name;
ClassDiagram.Attribut>> Wineries.description:String =>=>=> RelationalSchema.Column>> wineries.description;
ClassDiagram.Attribut>> Wineries.photo:String =>=>=> RelationalSchema.Column>> wineries.photo;
ClassDiagram.Attribut>> Areaoper.serialversionuid:long =>=>=> RelationalSchema.Column>> areaoper.serialversionuid;
ClassDiagram.Attribut>> Areaoper.areaoperacional:Integer =>=>=> RelationalSchema.Column>> areaoper.areaoperacional PRIMARY KEY;
ClassDiagram.Attribut>> Areaoper.descricao:String =>=>=> RelationalSchema.Column>> areaoper.descricao;
ClassDiagram.Attribut>> ProductImage.serialversionuid:long =>=>=> RelationalSchema.Column>> productimage.serialversionuid;
ClassDiagram.Attribut>> ProductImage.productid:Integer =>=>=> RelationalSchema.Column>> productimage.productid PRIMARY KEY;
ClassDiagram.Attribut>> ProductImage.pic:byte =>=>=> RelationalSchema.Column>> productimage.pic;
ClassDiagram.Attribut>> Brand.serialversionuid:long =>=>=> RelationalSchema.Column>> brand.serialversionuid;
ClassDiagram.Attribut>> Brand.brandid:Integer =>=>=> RelationalSchema.Column>> brand.brandid PRIMARY KEY;
ClassDiagram.Attribut>> Brand.brand:String =>=>=> RelationalSchema.Column>> brand.brand;
ClassDiagram.Attribut>> Profile.serialversionuid:long =>=>=> RelationalSchema.Column>> profile.serialversionuid;
ClassDiagram.Attribut>> Profile.profileid:Integer =>=>=> RelationalSchema.Column>> profile.profileid PRIMARY KEY;
ClassDiagram.Attribut>> Profile.profile:String =>=>=> RelationalSchema.Column>> profile.profile;
ClassDiagram.Attribut>> Profile.permission:String =>=>=> RelationalSchema.Column>> profile.permission;
One-To-One relationship between ClassDiagram.Class>>Product  to ClassDiagram.Class>>productcarousel represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Collection<Client>;
One-To-Many relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>Collection<Client>;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>address_id;
Many-To-One relationship from ClassDiagram.Class>>Client  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>address_id;
One-To-One relationship between ClassDiagram.Class>>ProductCarousel  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Areaoper  and ClassDiagram.Class>>collection<member1>: member_areaoper(area_operacional:Areaoper [PK] #FK to Areaoper,member_id:collection<member1> [PK] #FK to collection<member1>);
