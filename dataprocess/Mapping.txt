ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Template =>=>=> RelationalSchema.Table>> template;
ClassDiagram.Class>> History =>=>=> RelationalSchema.Table>> history;
ClassDiagram.Class>> ModelRelation =>=>=> RelationalSchema.Table>> modelrelation;
ClassDiagram.Class>> Job =>=>=> RelationalSchema.Table>> job;
ClassDiagram.Class>> JobRelation =>=>=> RelationalSchema.Table>> jobrelation;
ClassDiagram.Attribut>> User.id:long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.role:Integer =>=>=> RelationalSchema.Column>> user.role;
ClassDiagram.Attribut>> Template.id:long =>=>=> RelationalSchema.Column>> template.id PRIMARY KEY;
ClassDiagram.Attribut>> Template.name:String =>=>=> RelationalSchema.Column>> template.name;
ClassDiagram.Attribut>> Template.description:String =>=>=> RelationalSchema.Column>> template.description;
ClassDiagram.Attribut>> Template.path:String =>=>=> RelationalSchema.Column>> template.path;
ClassDiagram.Attribut>> Template.uploadtime:Date =>=>=> RelationalSchema.Column>> template.uploadtime;
ClassDiagram.Attribut>> Template.content:String =>=>=> RelationalSchema.Column>> template.content;
ClassDiagram.Attribut>> History.id:long =>=>=> RelationalSchema.Column>> history.id PRIMARY KEY;
ClassDiagram.Attribut>> History.name:String =>=>=> RelationalSchema.Column>> history.name;
ClassDiagram.Attribut>> History.path:String =>=>=> RelationalSchema.Column>> history.path;
ClassDiagram.Attribut>> History.GeneratedName:User =>=>=> RelationalSchema.Column>> history.GeneratedName;
ClassDiagram.Attribut>> History.usedtime:Date =>=>=> RelationalSchema.Column>> history.usedtime;
ClassDiagram.Attribut>> ModelRelation.id:long =>=>=> RelationalSchema.Column>> modelrelation.id PRIMARY KEY;
ClassDiagram.Attribut>> ModelRelation.GeneratedName:Job =>=>=> RelationalSchema.Column>> modelrelation.GeneratedName;
ClassDiagram.Attribut>> ModelRelation.modelid:long =>=>=> RelationalSchema.Column>> modelrelation.modelid;
ClassDiagram.Attribut>> Job.id:long =>=>=> RelationalSchema.Column>> job.id PRIMARY KEY;
ClassDiagram.Attribut>> Job.name:String =>=>=> RelationalSchema.Column>> job.name;
ClassDiagram.Attribut>> Job.path:String =>=>=> RelationalSchema.Column>> job.path;
ClassDiagram.Attribut>> Job.mapper:String =>=>=> RelationalSchema.Column>> job.mapper;
ClassDiagram.Attribut>> Job.reducer:String =>=>=> RelationalSchema.Column>> job.reducer;
ClassDiagram.Attribut>> Job.inputformat:String =>=>=> RelationalSchema.Column>> job.inputformat;
ClassDiagram.Attribut>> Job.mapinputvalue:String =>=>=> RelationalSchema.Column>> job.mapinputvalue;
ClassDiagram.Attribut>> Job.mapinputkey:String =>=>=> RelationalSchema.Column>> job.mapinputkey;
ClassDiagram.Attribut>> Job.mapoutputkey:String =>=>=> RelationalSchema.Column>> job.mapoutputkey;
ClassDiagram.Attribut>> Job.mapoutputvalue:String =>=>=> RelationalSchema.Column>> job.mapoutputvalue;
ClassDiagram.Attribut>> Job.outputkey:String =>=>=> RelationalSchema.Column>> job.outputkey;
ClassDiagram.Attribut>> Job.outputvalue:String =>=>=> RelationalSchema.Column>> job.outputvalue;
ClassDiagram.Attribut>> Job.isiterative:boolean =>=>=> RelationalSchema.Column>> job.isiterative;
ClassDiagram.Attribut>> Job.ismaptype:boolean =>=>=> RelationalSchema.Column>> job.ismaptype;
ClassDiagram.Attribut>> Job.parameters:String =>=>=> RelationalSchema.Column>> job.parameters;
ClassDiagram.Attribut>> Job.description:String =>=>=> RelationalSchema.Column>> job.description;
ClassDiagram.Attribut>> Job.uploadtime:Date =>=>=> RelationalSchema.Column>> job.uploadtime;
ClassDiagram.Attribut>> JobRelation.id:long =>=>=> RelationalSchema.Column>> jobrelation.id PRIMARY KEY;
ClassDiagram.Attribut>> JobRelation.templateid:long =>=>=> RelationalSchema.Column>> jobrelation.templateid;
ClassDiagram.Attribut>> JobRelation.jobidonhadoop:String =>=>=> RelationalSchema.Column>> jobrelation.jobidonhadoop;
ClassDiagram.Attribut>> JobRelation.ownerid:long =>=>=> RelationalSchema.Column>> jobrelation.ownerid;
Many-To-One relationship from ClassDiagram.Class>>Template  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>developer;
Many-To-One relationship from ClassDiagram.Class>>Job  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>developer;
